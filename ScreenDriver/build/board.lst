ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"board.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.flood,"ax",%progbits
  18              		.align	1
  19              		.global	flood
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	flood:
  27              	.LVL0:
  28              	.LFB737:
  29              		.file 1 "Core/Src/board.c"
   1:Core/Src/board.c **** /* board.cpp */
   2:Core/Src/board.c **** #include "../Inc/board.h"
   3:Core/Src/board.c **** #include "../Inc/main.h"
   4:Core/Src/board.c **** 
   5:Core/Src/board.c **** #define TAILLE_CASE  11
   6:Core/Src/board.c **** #define DECALAGE_GAUCHE 20
   7:Core/Src/board.c **** #define DECALAGE_HAUT 20
   8:Core/Src/board.c **** 
   9:Core/Src/board.c ****  
  10:Core/Src/board.c **** void flood(Board * board, int i, int j, int px, int py, int k, int o, int value, bool visited[][SIZ
  11:Core/Src/board.c **** {
  30              		.loc 1 11 1 view -0
  31              		.cfi_startproc
  32              		@ args = 20, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 11 1 is_stmt 0 view .LVU1
  35 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 24
  38              		.cfi_offset 4, -24
  39              		.cfi_offset 5, -20
  40              		.cfi_offset 6, -16
  41              		.cfi_offset 7, -12
  42              		.cfi_offset 8, -8
  43              		.cfi_offset 14, -4
  44 0004 86B0     		sub	sp, sp, #24
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 48
  47 0006 0C9D     		ldr	r5, [sp, #48]
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 2


  12:Core/Src/board.c ****     if(px < 0 || px >= SIZE || py < 0 || py >= SIZE || visited[px][py] || PIECES[k][o][px][py] == F
  48              		.loc 1 12 5 is_stmt 1 view .LVU2
  49              		.loc 1 12 7 is_stmt 0 view .LVU3
  50 0008 032B     		cmp	r3, #3
  51 000a 19D8     		bhi	.L1
  52 000c 8046     		mov	r8, r0
  53 000e 0F46     		mov	r7, r1
  54 0010 1646     		mov	r6, r2
  55 0012 1C46     		mov	r4, r3
  56              		.loc 1 12 29 discriminator 1 view .LVU4
  57 0014 002D     		cmp	r5, #0
  58 0016 13DB     		blt	.L1
  59              		.loc 1 12 39 discriminator 2 view .LVU5
  60 0018 032D     		cmp	r5, #3
  61 001a 11DC     		bgt	.L1
  62              		.loc 1 12 63 discriminator 3 view .LVU6
  63 001c 109B     		ldr	r3, [sp, #64]
  64              	.LVL1:
  65              		.loc 1 12 63 discriminator 3 view .LVU7
  66 001e 03EB0412 		add	r2, r3, r4, lsl #4
  67              	.LVL2:
  68              		.loc 1 12 67 discriminator 3 view .LVU8
  69 0022 52F82530 		ldr	r3, [r2, r5, lsl #2]
  70              		.loc 1 12 53 discriminator 3 view .LVU9
  71 0026 5BB9     		cbnz	r3, .L1
  72              		.loc 1 12 91 discriminator 4 view .LVU10
  73 0028 0E9B     		ldr	r3, [sp, #56]
  74 002a 0D99     		ldr	r1, [sp, #52]
  75              	.LVL3:
  76              		.loc 1 12 91 discriminator 4 view .LVU11
  77 002c 03EB8103 		add	r3, r3, r1, lsl #2
  78 0030 04EB8303 		add	r3, r4, r3, lsl #2
  79 0034 05EB8303 		add	r3, r5, r3, lsl #2
  80 0038 2749     		ldr	r1, .L5
  81 003a 51F82330 		ldr	r3, [r1, r3, lsl #2]
  82              		.loc 1 12 72 discriminator 4 view .LVU12
  83 003e 13B9     		cbnz	r3, .L4
  84              	.LVL4:
  85              	.L1:
  13:Core/Src/board.c ****         return;
  14:Core/Src/board.c ****     visited[px][py] = true;
  15:Core/Src/board.c **** 
  16:Core/Src/board.c ****     board->area[j][i] = value;
  17:Core/Src/board.c ****     flood(board, i, j - 1, px, py - 1, k, o, value, visited);
  18:Core/Src/board.c ****     flood(board, i + 1, j, px + 1, py, k, o, value, visited);
  19:Core/Src/board.c ****     flood(board, i, j + 1, px, py + 1, k, o, value, visited);
  20:Core/Src/board.c ****     flood(board, i - 1, j, px - 1, py, k, o, value, visited);
  21:Core/Src/board.c **** }
  86              		.loc 1 21 1 view .LVU13
  87 0040 06B0     		add	sp, sp, #24
  88              	.LCFI2:
  89              		.cfi_remember_state
  90              		.cfi_def_cfa_offset 24
  91              		@ sp needed
  92 0042 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
  93              	.LVL5:
  94              	.L4:
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 3


  95              	.LCFI3:
  96              		.cfi_restore_state
  14:Core/Src/board.c **** 
  97              		.loc 1 14 5 is_stmt 1 view .LVU14
  14:Core/Src/board.c **** 
  98              		.loc 1 14 21 is_stmt 0 view .LVU15
  99 0046 0123     		movs	r3, #1
 100 0048 42F82530 		str	r3, [r2, r5, lsl #2]
  16:Core/Src/board.c ****     flood(board, i, j - 1, px, py - 1, k, o, value, visited);
 101              		.loc 1 16 5 is_stmt 1 view .LVU16
  16:Core/Src/board.c ****     flood(board, i, j - 1, px, py - 1, k, o, value, visited);
 102              		.loc 1 16 23 is_stmt 0 view .LVU17
 103 004c 06EB8603 		add	r3, r6, r6, lsl #2
 104 0050 07EB8303 		add	r3, r7, r3, lsl #2
 105 0054 00EB8303 		add	r3, r0, r3, lsl #2
 106 0058 0F9A     		ldr	r2, [sp, #60]
 107 005a 5A60     		str	r2, [r3, #4]
  17:Core/Src/board.c ****     flood(board, i + 1, j, px + 1, py, k, o, value, visited);
 108              		.loc 1 17 5 is_stmt 1 view .LVU18
 109 005c 109B     		ldr	r3, [sp, #64]
 110 005e 0493     		str	r3, [sp, #16]
 111 0060 0392     		str	r2, [sp, #12]
 112 0062 0E9B     		ldr	r3, [sp, #56]
 113 0064 0293     		str	r3, [sp, #8]
 114 0066 0D9B     		ldr	r3, [sp, #52]
 115 0068 0193     		str	r3, [sp, #4]
 116 006a 6B1E     		subs	r3, r5, #1
 117 006c 0093     		str	r3, [sp]
 118 006e 2346     		mov	r3, r4
 119 0070 721E     		subs	r2, r6, #1
 120 0072 3946     		mov	r1, r7
 121 0074 FFF7FEFF 		bl	flood
 122              	.LVL6:
  18:Core/Src/board.c ****     flood(board, i, j + 1, px, py + 1, k, o, value, visited);
 123              		.loc 1 18 5 view .LVU19
 124 0078 109B     		ldr	r3, [sp, #64]
 125 007a 0493     		str	r3, [sp, #16]
 126 007c 0F9B     		ldr	r3, [sp, #60]
 127 007e 0393     		str	r3, [sp, #12]
 128 0080 0E9B     		ldr	r3, [sp, #56]
 129 0082 0293     		str	r3, [sp, #8]
 130 0084 0D9B     		ldr	r3, [sp, #52]
 131 0086 0193     		str	r3, [sp, #4]
 132 0088 0095     		str	r5, [sp]
 133 008a 631C     		adds	r3, r4, #1
 134 008c 3246     		mov	r2, r6
 135 008e 791C     		adds	r1, r7, #1
 136 0090 4046     		mov	r0, r8
 137 0092 FFF7FEFF 		bl	flood
 138              	.LVL7:
  19:Core/Src/board.c ****     flood(board, i - 1, j, px - 1, py, k, o, value, visited);
 139              		.loc 1 19 5 view .LVU20
 140 0096 109B     		ldr	r3, [sp, #64]
 141 0098 0493     		str	r3, [sp, #16]
 142 009a 0F9B     		ldr	r3, [sp, #60]
 143 009c 0393     		str	r3, [sp, #12]
 144 009e 0E9B     		ldr	r3, [sp, #56]
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 4


 145 00a0 0293     		str	r3, [sp, #8]
 146 00a2 0D9B     		ldr	r3, [sp, #52]
 147 00a4 0193     		str	r3, [sp, #4]
 148 00a6 6B1C     		adds	r3, r5, #1
 149 00a8 0093     		str	r3, [sp]
 150 00aa 2346     		mov	r3, r4
 151 00ac 721C     		adds	r2, r6, #1
 152 00ae 3946     		mov	r1, r7
 153 00b0 4046     		mov	r0, r8
 154 00b2 FFF7FEFF 		bl	flood
 155              	.LVL8:
  20:Core/Src/board.c **** }
 156              		.loc 1 20 5 view .LVU21
 157 00b6 109B     		ldr	r3, [sp, #64]
 158 00b8 0493     		str	r3, [sp, #16]
 159 00ba 0F9B     		ldr	r3, [sp, #60]
 160 00bc 0393     		str	r3, [sp, #12]
 161 00be 0E9B     		ldr	r3, [sp, #56]
 162 00c0 0293     		str	r3, [sp, #8]
 163 00c2 0D9B     		ldr	r3, [sp, #52]
 164 00c4 0193     		str	r3, [sp, #4]
 165 00c6 0095     		str	r5, [sp]
 166 00c8 631E     		subs	r3, r4, #1
 167 00ca 3246     		mov	r2, r6
 168 00cc 791E     		subs	r1, r7, #1
 169 00ce 4046     		mov	r0, r8
 170 00d0 FFF7FEFF 		bl	flood
 171              	.LVL9:
 172 00d4 B4E7     		b	.L1
 173              	.L6:
 174 00d6 00BF     		.align	2
 175              	.L5:
 176 00d8 00000000 		.word	.LANCHOR0
 177              		.cfi_endproc
 178              	.LFE737:
 180              		.section	.text.floodB,"ax",%progbits
 181              		.align	1
 182              		.global	floodB
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 186              		.fpu fpv4-sp-d16
 188              	floodB:
 189              	.LVL10:
 190              	.LFB738:
  22:Core/Src/board.c ****  
  23:Core/Src/board.c **** void floodB(Board * board, int i, int j, int px, int py, int k, int o, bool * flag, bool visited[][
  24:Core/Src/board.c **** {
 191              		.loc 1 24 1 view -0
 192              		.cfi_startproc
 193              		@ args = 20, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              		.loc 1 24 1 is_stmt 0 view .LVU23
 196 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 197              	.LCFI4:
 198              		.cfi_def_cfa_offset 24
 199              		.cfi_offset 4, -24
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 5


 200              		.cfi_offset 5, -20
 201              		.cfi_offset 6, -16
 202              		.cfi_offset 7, -12
 203              		.cfi_offset 8, -8
 204              		.cfi_offset 14, -4
 205 0004 86B0     		sub	sp, sp, #24
 206              	.LCFI5:
 207              		.cfi_def_cfa_offset 48
 208 0006 0C9D     		ldr	r5, [sp, #48]
  25:Core/Src/board.c ****     if(px < 0 || px >= SIZE || py < 0 || py >= SIZE || visited[px][py] || PIECES[k][o][px][py] == F
 209              		.loc 1 25 5 is_stmt 1 view .LVU24
 210              		.loc 1 25 7 is_stmt 0 view .LVU25
 211 0008 032B     		cmp	r3, #3
 212 000a 2DD8     		bhi	.L7
 213 000c 8046     		mov	r8, r0
 214 000e 0F46     		mov	r7, r1
 215 0010 1646     		mov	r6, r2
 216 0012 1C46     		mov	r4, r3
 217              		.loc 1 25 29 discriminator 1 view .LVU26
 218 0014 002D     		cmp	r5, #0
 219 0016 27DB     		blt	.L7
 220              		.loc 1 25 39 discriminator 2 view .LVU27
 221 0018 032D     		cmp	r5, #3
 222 001a 25DC     		bgt	.L7
 223              		.loc 1 25 63 discriminator 3 view .LVU28
 224 001c 109B     		ldr	r3, [sp, #64]
 225              	.LVL11:
 226              		.loc 1 25 63 discriminator 3 view .LVU29
 227 001e 03EB0412 		add	r2, r3, r4, lsl #4
 228              	.LVL12:
 229              		.loc 1 25 67 discriminator 3 view .LVU30
 230 0022 52F82530 		ldr	r3, [r2, r5, lsl #2]
 231              		.loc 1 25 53 discriminator 3 view .LVU31
 232 0026 FBB9     		cbnz	r3, .L7
 233              		.loc 1 25 91 discriminator 4 view .LVU32
 234 0028 0E9B     		ldr	r3, [sp, #56]
 235 002a 0D99     		ldr	r1, [sp, #52]
 236              	.LVL13:
 237              		.loc 1 25 91 discriminator 4 view .LVU33
 238 002c 03EB8103 		add	r3, r3, r1, lsl #2
 239 0030 04EB8303 		add	r3, r4, r3, lsl #2
 240 0034 05EB8303 		add	r3, r5, r3, lsl #2
 241 0038 2C49     		ldr	r1, .L12
 242 003a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 243              		.loc 1 25 72 discriminator 4 view .LVU34
 244 003e 9BB1     		cbz	r3, .L7
  26:Core/Src/board.c ****         return;
  27:Core/Src/board.c ****  
  28:Core/Src/board.c ****     visited[px][py] = true;
 245              		.loc 1 28 5 is_stmt 1 view .LVU35
 246              		.loc 1 28 21 is_stmt 0 view .LVU36
 247 0040 0123     		movs	r3, #1
 248 0042 42F82530 		str	r3, [r2, r5, lsl #2]
  29:Core/Src/board.c ****  
  30:Core/Src/board.c ****     if(i < 0 || i >= BOARD_HEIGHT || j < 0 || j >= BOARD_WIDTH || board->area[j][i] != FREE )
 249              		.loc 1 30 5 is_stmt 1 view .LVU37
 250              		.loc 1 30 7 is_stmt 0 view .LVU38
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 6


 251 0046 132F     		cmp	r7, #19
 252 0048 0BD8     		bhi	.L9
 253              		.loc 1 30 35 discriminator 1 view .LVU39
 254 004a 002E     		cmp	r6, #0
 255 004c 09DB     		blt	.L9
 256              		.loc 1 30 44 discriminator 2 view .LVU40
 257 004e 092E     		cmp	r6, #9
 258 0050 07DC     		bgt	.L9
 259              		.loc 1 30 81 discriminator 3 view .LVU41
 260 0052 06EB8603 		add	r3, r6, r6, lsl #2
 261 0056 07EB8303 		add	r3, r7, r3, lsl #2
 262 005a 00EB8303 		add	r3, r0, r3, lsl #2
 263 005e 5B68     		ldr	r3, [r3, #4]
 264              		.loc 1 30 64 discriminator 3 view .LVU42
 265 0060 2BB1     		cbz	r3, .L10
 266              	.L9:
  31:Core/Src/board.c ****     {
  32:Core/Src/board.c ****         *flag = false;
 267              		.loc 1 32 9 is_stmt 1 view .LVU43
 268              		.loc 1 32 15 is_stmt 0 view .LVU44
 269 0062 0023     		movs	r3, #0
 270 0064 0F9A     		ldr	r2, [sp, #60]
 271 0066 1360     		str	r3, [r2]
  33:Core/Src/board.c ****         return;
 272              		.loc 1 33 9 is_stmt 1 view .LVU45
 273              	.LVL14:
 274              	.L7:
  34:Core/Src/board.c ****     }
  35:Core/Src/board.c ****  
  36:Core/Src/board.c ****     floodB(board, i, j - 1, px, py - 1, k, o, flag, visited);
  37:Core/Src/board.c ****     floodB(board, i + 1, j, px + 1, py, k, o, flag, visited);
  38:Core/Src/board.c ****     floodB(board, i, j + 1, px, py + 1, k, o, flag, visited);
  39:Core/Src/board.c ****     floodB(board, i - 1, j, px - 1, py, k, o, flag, visited);
  40:Core/Src/board.c **** }
 275              		.loc 1 40 1 is_stmt 0 view .LVU46
 276 0068 06B0     		add	sp, sp, #24
 277              	.LCFI6:
 278              		.cfi_remember_state
 279              		.cfi_def_cfa_offset 24
 280              		@ sp needed
 281 006a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 282              	.LVL15:
 283              	.L10:
 284              	.LCFI7:
 285              		.cfi_restore_state
  36:Core/Src/board.c ****     floodB(board, i + 1, j, px + 1, py, k, o, flag, visited);
 286              		.loc 1 36 5 is_stmt 1 view .LVU47
 287 006e 109B     		ldr	r3, [sp, #64]
 288 0070 0493     		str	r3, [sp, #16]
 289 0072 0F9B     		ldr	r3, [sp, #60]
 290 0074 0393     		str	r3, [sp, #12]
 291 0076 0E9B     		ldr	r3, [sp, #56]
 292 0078 0293     		str	r3, [sp, #8]
 293 007a 0D9B     		ldr	r3, [sp, #52]
 294 007c 0193     		str	r3, [sp, #4]
 295 007e 6B1E     		subs	r3, r5, #1
 296 0080 0093     		str	r3, [sp]
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 7


 297 0082 2346     		mov	r3, r4
 298 0084 721E     		subs	r2, r6, #1
 299 0086 3946     		mov	r1, r7
 300 0088 FFF7FEFF 		bl	floodB
 301              	.LVL16:
  37:Core/Src/board.c ****     floodB(board, i, j + 1, px, py + 1, k, o, flag, visited);
 302              		.loc 1 37 5 view .LVU48
 303 008c 109B     		ldr	r3, [sp, #64]
 304 008e 0493     		str	r3, [sp, #16]
 305 0090 0F9B     		ldr	r3, [sp, #60]
 306 0092 0393     		str	r3, [sp, #12]
 307 0094 0E9B     		ldr	r3, [sp, #56]
 308 0096 0293     		str	r3, [sp, #8]
 309 0098 0D9B     		ldr	r3, [sp, #52]
 310 009a 0193     		str	r3, [sp, #4]
 311 009c 0095     		str	r5, [sp]
 312 009e 631C     		adds	r3, r4, #1
 313 00a0 3246     		mov	r2, r6
 314 00a2 791C     		adds	r1, r7, #1
 315 00a4 4046     		mov	r0, r8
 316 00a6 FFF7FEFF 		bl	floodB
 317              	.LVL17:
  38:Core/Src/board.c ****     floodB(board, i - 1, j, px - 1, py, k, o, flag, visited);
 318              		.loc 1 38 5 view .LVU49
 319 00aa 109B     		ldr	r3, [sp, #64]
 320 00ac 0493     		str	r3, [sp, #16]
 321 00ae 0F9B     		ldr	r3, [sp, #60]
 322 00b0 0393     		str	r3, [sp, #12]
 323 00b2 0E9B     		ldr	r3, [sp, #56]
 324 00b4 0293     		str	r3, [sp, #8]
 325 00b6 0D9B     		ldr	r3, [sp, #52]
 326 00b8 0193     		str	r3, [sp, #4]
 327 00ba 6B1C     		adds	r3, r5, #1
 328 00bc 0093     		str	r3, [sp]
 329 00be 2346     		mov	r3, r4
 330 00c0 721C     		adds	r2, r6, #1
 331 00c2 3946     		mov	r1, r7
 332 00c4 4046     		mov	r0, r8
 333 00c6 FFF7FEFF 		bl	floodB
 334              	.LVL18:
  39:Core/Src/board.c **** }
 335              		.loc 1 39 5 view .LVU50
 336 00ca 109B     		ldr	r3, [sp, #64]
 337 00cc 0493     		str	r3, [sp, #16]
 338 00ce 0F9B     		ldr	r3, [sp, #60]
 339 00d0 0393     		str	r3, [sp, #12]
 340 00d2 0E9B     		ldr	r3, [sp, #56]
 341 00d4 0293     		str	r3, [sp, #8]
 342 00d6 0D9B     		ldr	r3, [sp, #52]
 343 00d8 0193     		str	r3, [sp, #4]
 344 00da 0095     		str	r5, [sp]
 345 00dc 631E     		subs	r3, r4, #1
 346 00de 3246     		mov	r2, r6
 347 00e0 791E     		subs	r1, r7, #1
 348 00e2 4046     		mov	r0, r8
 349 00e4 FFF7FEFF 		bl	floodB
 350              	.LVL19:
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 8


 351 00e8 BEE7     		b	.L7
 352              	.L13:
 353 00ea 00BF     		.align	2
 354              	.L12:
 355 00ec 00000000 		.word	.LANCHOR0
 356              		.cfi_endproc
 357              	.LFE738:
 359              		.section	.text.floodFill,"ax",%progbits
 360              		.align	1
 361              		.global	floodFill
 362              		.syntax unified
 363              		.thumb
 364              		.thumb_func
 365              		.fpu fpv4-sp-d16
 367              	floodFill:
 368              	.LVL20:
 369              	.LFB739:
  41:Core/Src/board.c ****  
  42:Core/Src/board.c **** void floodFill(Board * board, int i, int j, int px, int py, int k, int o, int value)
  43:Core/Src/board.c **** {
 370              		.loc 1 43 1 view -0
 371              		.cfi_startproc
 372              		@ args = 16, pretend = 0, frame = 64
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374              		.loc 1 43 1 is_stmt 0 view .LVU52
 375 0000 30B5     		push	{r4, r5, lr}
 376              	.LCFI8:
 377              		.cfi_def_cfa_offset 12
 378              		.cfi_offset 4, -12
 379              		.cfi_offset 5, -8
 380              		.cfi_offset 14, -4
 381 0002 97B0     		sub	sp, sp, #92
 382              	.LCFI9:
 383              		.cfi_def_cfa_offset 104
  44:Core/Src/board.c ****     bool visited[SIZE][SIZE];
 384              		.loc 1 44 5 is_stmt 1 view .LVU53
  45:Core/Src/board.c ****  
  46:Core/Src/board.c ****     for(int l = 0; l < SIZE; ++l)
 385              		.loc 1 46 5 view .LVU54
 386              	.LBB2:
 387              		.loc 1 46 9 view .LVU55
 388              	.LVL21:
 389              		.loc 1 46 13 is_stmt 0 view .LVU56
 390 0004 0025     		movs	r5, #0
 391              		.loc 1 46 5 view .LVU57
 392 0006 0DE0     		b	.L15
 393              	.LVL22:
 394              	.L16:
 395              	.LBB3:
  47:Core/Src/board.c ****         for(int m = 0; m < SIZE; ++m)
  48:Core/Src/board.c ****             visited[l][m] = false;
 396              		.loc 1 48 13 is_stmt 1 discriminator 3 view .LVU58
 397              		.loc 1 48 27 is_stmt 0 discriminator 3 view .LVU59
 398 0008 0CEB850E 		add	lr, ip, r5, lsl #2
 399 000c 16AC     		add	r4, sp, #88
 400 000e 04EB8E0E 		add	lr, r4, lr, lsl #2
 401 0012 0024     		movs	r4, #0
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 9


 402 0014 4EF8404C 		str	r4, [lr, #-64]
  47:Core/Src/board.c ****         for(int m = 0; m < SIZE; ++m)
 403              		.loc 1 47 34 is_stmt 1 discriminator 3 view .LVU60
 404 0018 0CF1010C 		add	ip, ip, #1
 405              	.LVL23:
 406              	.L17:
  47:Core/Src/board.c ****         for(int m = 0; m < SIZE; ++m)
 407              		.loc 1 47 24 discriminator 1 view .LVU61
  47:Core/Src/board.c ****         for(int m = 0; m < SIZE; ++m)
 408              		.loc 1 47 9 is_stmt 0 discriminator 1 view .LVU62
 409 001c BCF1030F 		cmp	ip, #3
 410 0020 F2DD     		ble	.L16
 411              	.LBE3:
  46:Core/Src/board.c ****         for(int m = 0; m < SIZE; ++m)
 412              		.loc 1 46 30 is_stmt 1 discriminator 2 view .LVU63
 413 0022 0135     		adds	r5, r5, #1
 414              	.LVL24:
 415              	.L15:
  46:Core/Src/board.c ****         for(int m = 0; m < SIZE; ++m)
 416              		.loc 1 46 20 discriminator 1 view .LVU64
  46:Core/Src/board.c ****         for(int m = 0; m < SIZE; ++m)
 417              		.loc 1 46 5 is_stmt 0 discriminator 1 view .LVU65
 418 0024 032D     		cmp	r5, #3
 419 0026 02DC     		bgt	.L20
 420              	.LBB4:
  47:Core/Src/board.c ****         for(int m = 0; m < SIZE; ++m)
 421              		.loc 1 47 17 view .LVU66
 422 0028 4FF0000C 		mov	ip, #0
 423 002c F6E7     		b	.L17
 424              	.L20:
 425              	.LBE4:
 426              	.LBE2:
  49:Core/Src/board.c ****     flood(board, i, j, px, py, k, o, value, visited);
 427              		.loc 1 49 5 is_stmt 1 view .LVU67
 428 002e 06AC     		add	r4, sp, #24
 429 0030 0494     		str	r4, [sp, #16]
 430 0032 1D9C     		ldr	r4, [sp, #116]
 431 0034 0394     		str	r4, [sp, #12]
 432 0036 1C9C     		ldr	r4, [sp, #112]
 433 0038 0294     		str	r4, [sp, #8]
 434 003a 1B9C     		ldr	r4, [sp, #108]
 435 003c 0194     		str	r4, [sp, #4]
 436 003e 1A9C     		ldr	r4, [sp, #104]
 437 0040 0094     		str	r4, [sp]
 438 0042 FFF7FEFF 		bl	flood
 439              	.LVL25:
  50:Core/Src/board.c **** }
 440              		.loc 1 50 1 is_stmt 0 view .LVU68
 441 0046 17B0     		add	sp, sp, #92
 442              	.LCFI10:
 443              		.cfi_def_cfa_offset 12
 444              		@ sp needed
 445 0048 30BD     		pop	{r4, r5, pc}
 446              		.loc 1 50 1 view .LVU69
 447              		.cfi_endproc
 448              	.LFE739:
 450              		.section	.text.initBoard,"ax",%progbits
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 10


 451              		.align	1
 452              		.global	initBoard
 453              		.syntax unified
 454              		.thumb
 455              		.thumb_func
 456              		.fpu fpv4-sp-d16
 458              	initBoard:
 459              	.LVL26:
 460              	.LFB740:
  51:Core/Src/board.c ****  
  52:Core/Src/board.c **** void initBoard(Board * board)
  53:Core/Src/board.c **** {
 461              		.loc 1 53 1 is_stmt 1 view -0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 0
 464              		@ frame_needed = 0, uses_anonymous_args = 0
 465              		@ link register save eliminated.
 466              		.loc 1 53 1 is_stmt 0 view .LVU71
 467 0000 8446     		mov	ip, r0
  54:Core/Src/board.c ****     //board = malloc(sizeof(Board));
  55:Core/Src/board.c ****     //board->area = malloc(sizeof(int)*BOARD_HEIGHT*BOARD_WIDTH);
  56:Core/Src/board.c ****     for(int i = 0; i < BOARD_WIDTH; ++i)
 468              		.loc 1 56 5 is_stmt 1 view .LVU72
 469              	.LBB5:
 470              		.loc 1 56 9 view .LVU73
 471              	.LVL27:
 472              		.loc 1 56 13 is_stmt 0 view .LVU74
 473 0002 0021     		movs	r1, #0
 474              		.loc 1 56 5 view .LVU75
 475 0004 0BE0     		b	.L22
 476              	.LVL28:
 477              	.L23:
 478              	.LBB6:
  57:Core/Src/board.c ****         for(int j = 0; j < BOARD_HEIGHT; ++j)
  58:Core/Src/board.c ****             board->area[i][j] = FREE;
 479              		.loc 1 58 13 is_stmt 1 discriminator 3 view .LVU76
 480              		.loc 1 58 31 is_stmt 0 discriminator 3 view .LVU77
 481 0006 01EB8103 		add	r3, r1, r1, lsl #2
 482 000a 02EB8303 		add	r3, r2, r3, lsl #2
 483 000e 0CEB8303 		add	r3, ip, r3, lsl #2
 484 0012 0020     		movs	r0, #0
 485 0014 5860     		str	r0, [r3, #4]
  57:Core/Src/board.c ****         for(int j = 0; j < BOARD_HEIGHT; ++j)
 486              		.loc 1 57 42 is_stmt 1 discriminator 3 view .LVU78
 487 0016 0132     		adds	r2, r2, #1
 488              	.LVL29:
 489              	.L24:
  57:Core/Src/board.c ****         for(int j = 0; j < BOARD_HEIGHT; ++j)
 490              		.loc 1 57 24 discriminator 1 view .LVU79
  57:Core/Src/board.c ****         for(int j = 0; j < BOARD_HEIGHT; ++j)
 491              		.loc 1 57 9 is_stmt 0 discriminator 1 view .LVU80
 492 0018 132A     		cmp	r2, #19
 493 001a F4DD     		ble	.L23
 494              	.LBE6:
  56:Core/Src/board.c ****         for(int j = 0; j < BOARD_HEIGHT; ++j)
 495              		.loc 1 56 37 is_stmt 1 discriminator 2 view .LVU81
 496 001c 0131     		adds	r1, r1, #1
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 11


 497              	.LVL30:
 498              	.L22:
  56:Core/Src/board.c ****         for(int j = 0; j < BOARD_HEIGHT; ++j)
 499              		.loc 1 56 20 discriminator 1 view .LVU82
  56:Core/Src/board.c ****         for(int j = 0; j < BOARD_HEIGHT; ++j)
 500              		.loc 1 56 5 is_stmt 0 discriminator 1 view .LVU83
 501 001e 0929     		cmp	r1, #9
 502 0020 01DC     		bgt	.L26
 503              	.LBB7:
  57:Core/Src/board.c ****         for(int j = 0; j < BOARD_HEIGHT; ++j)
 504              		.loc 1 57 17 view .LVU84
 505 0022 0022     		movs	r2, #0
 506 0024 F8E7     		b	.L24
 507              	.L26:
 508              	.LBE7:
 509              	.LBE5:
  59:Core/Src/board.c ****     
  60:Core/Src/board.c **** }
 510              		.loc 1 60 1 view .LVU85
 511 0026 7047     		bx	lr
 512              		.cfi_endproc
 513              	.LFE740:
 515              		.section	.text.drawPiece,"ax",%progbits
 516              		.align	1
 517              		.global	drawPiece
 518              		.syntax unified
 519              		.thumb
 520              		.thumb_func
 521              		.fpu fpv4-sp-d16
 523              	drawPiece:
 524              	.LVL31:
 525              	.LFB741:
  61:Core/Src/board.c ****  
  62:Core/Src/board.c **** void drawPiece(Board * board, Piece * piece)
  63:Core/Src/board.c **** {
 526              		.loc 1 63 1 is_stmt 1 view -0
 527              		.cfi_startproc
 528              		@ args = 0, pretend = 0, frame = 0
 529              		@ frame_needed = 0, uses_anonymous_args = 0
 530              		.loc 1 63 1 is_stmt 0 view .LVU87
 531 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 532              	.LCFI11:
 533              		.cfi_def_cfa_offset 28
 534              		.cfi_offset 4, -28
 535              		.cfi_offset 5, -24
 536              		.cfi_offset 6, -20
 537              		.cfi_offset 7, -16
 538              		.cfi_offset 8, -12
 539              		.cfi_offset 9, -8
 540              		.cfi_offset 14, -4
 541 0004 85B0     		sub	sp, sp, #20
 542              	.LCFI12:
 543              		.cfi_def_cfa_offset 48
 544 0006 0646     		mov	r6, r0
 545 0008 0C46     		mov	r4, r1
  64:Core/Src/board.c ****     int i = getPosX(piece);
 546              		.loc 1 64 5 is_stmt 1 view .LVU88
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 12


 547              		.loc 1 64 13 is_stmt 0 view .LVU89
 548 000a 0846     		mov	r0, r1
 549              	.LVL32:
 550              		.loc 1 64 13 view .LVU90
 551 000c FFF7FEFF 		bl	getPosX
 552              	.LVL33:
 553              		.loc 1 64 13 view .LVU91
 554 0010 0746     		mov	r7, r0
 555              	.LVL34:
  65:Core/Src/board.c ****     int j = getPosY(piece);
 556              		.loc 1 65 5 is_stmt 1 view .LVU92
 557              		.loc 1 65 13 is_stmt 0 view .LVU93
 558 0012 2046     		mov	r0, r4
 559              	.LVL35:
 560              		.loc 1 65 13 view .LVU94
 561 0014 FFF7FEFF 		bl	getPosY
 562              	.LVL36:
 563 0018 8046     		mov	r8, r0
 564              	.LVL37:
  66:Core/Src/board.c ****  
  67:Core/Src/board.c ****     int k = getKind(piece);
 565              		.loc 1 67 5 is_stmt 1 view .LVU95
 566              		.loc 1 67 13 is_stmt 0 view .LVU96
 567 001a 2046     		mov	r0, r4
 568              	.LVL38:
 569              		.loc 1 67 13 view .LVU97
 570 001c FFF7FEFF 		bl	getKind
 571              	.LVL39:
 572 0020 0546     		mov	r5, r0
 573              	.LVL40:
  68:Core/Src/board.c ****     int o = getOrientation(piece);
 574              		.loc 1 68 5 is_stmt 1 view .LVU98
 575              		.loc 1 68 13 is_stmt 0 view .LVU99
 576 0022 2046     		mov	r0, r4
 577              	.LVL41:
 578              		.loc 1 68 13 view .LVU100
 579 0024 FFF7FEFF 		bl	getOrientation
 580              	.LVL42:
 581 0028 8146     		mov	r9, r0
 582              	.LVL43:
  69:Core/Src/board.c ****  
  70:Core/Src/board.c ****     switch(k)
 583              		.loc 1 70 5 is_stmt 1 view .LVU101
 584 002a 062D     		cmp	r5, #6
 585 002c 09D8     		bhi	.L28
 586 002e DFE805F0 		tbb	[pc, r5]
 587              	.L30:
 588 0032 24       		.byte	(.L36-.L30)/2
 589 0033 04       		.byte	(.L35-.L30)/2
 590 0034 29       		.byte	(.L34-.L30)/2
 591 0035 33       		.byte	(.L33-.L30)/2
 592 0036 1F       		.byte	(.L32-.L30)/2
 593 0037 1A       		.byte	(.L31-.L30)/2
 594 0038 2E       		.byte	(.L29-.L30)/2
 595 0039 00       		.p2align 1
 596              	.L35:
  71:Core/Src/board.c ****     {
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 13


  72:Core/Src/board.c ****         case I:
  73:Core/Src/board.c ****             setColor(piece, CYA);
 597              		.loc 1 73 13 view .LVU102
 598 003a 0121     		movs	r1, #1
 599 003c 2046     		mov	r0, r4
 600              	.LVL44:
 601              		.loc 1 73 13 is_stmt 0 view .LVU103
 602 003e FFF7FEFF 		bl	setColor
 603              	.LVL45:
  74:Core/Src/board.c ****             break;
 604              		.loc 1 74 13 is_stmt 1 view .LVU104
 605              	.L28:
  75:Core/Src/board.c ****         case J:
  76:Core/Src/board.c ****             setColor(piece, BLU);
  77:Core/Src/board.c ****             break;
  78:Core/Src/board.c ****         case L:
  79:Core/Src/board.c ****             setColor(piece, ORANG);
  80:Core/Src/board.c ****             break;
  81:Core/Src/board.c ****         case O:
  82:Core/Src/board.c ****             setColor(piece, YELLO);
  83:Core/Src/board.c ****             break;
  84:Core/Src/board.c ****         case S:
  85:Core/Src/board.c ****             setColor(piece, GREE);
  86:Core/Src/board.c ****             break;
  87:Core/Src/board.c ****         case T:
  88:Core/Src/board.c ****             setColor(piece, PURPL);
  89:Core/Src/board.c ****             break;
  90:Core/Src/board.c ****         case Z:
  91:Core/Src/board.c ****             setColor(piece, RE);
  92:Core/Src/board.c ****             break;
  93:Core/Src/board.c ****         default:
  94:Core/Src/board.c ****             break;
  95:Core/Src/board.c ****     }
  96:Core/Src/board.c ****     floodFill(board, i, j, PIVOT_X, PIVOT_Y, k, o, getColor(piece));
 606              		.loc 1 96 5 view .LVU105
 607 0042 2046     		mov	r0, r4
 608 0044 FFF7FEFF 		bl	getColor
 609              	.LVL46:
 610 0048 0390     		str	r0, [sp, #12]
 611 004a CDF80890 		str	r9, [sp, #8]
 612 004e 0195     		str	r5, [sp, #4]
 613 0050 0223     		movs	r3, #2
 614 0052 0093     		str	r3, [sp]
 615 0054 0123     		movs	r3, #1
 616 0056 4246     		mov	r2, r8
 617 0058 3946     		mov	r1, r7
 618 005a 3046     		mov	r0, r6
 619 005c FFF7FEFF 		bl	floodFill
 620              	.LVL47:
  97:Core/Src/board.c **** }
 621              		.loc 1 97 1 is_stmt 0 view .LVU106
 622 0060 05B0     		add	sp, sp, #20
 623              	.LCFI13:
 624              		.cfi_remember_state
 625              		.cfi_def_cfa_offset 28
 626              		@ sp needed
 627 0062 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 14


 628              	.LVL48:
 629              	.L31:
 630              	.LCFI14:
 631              		.cfi_restore_state
  76:Core/Src/board.c ****             break;
 632              		.loc 1 76 13 is_stmt 1 view .LVU107
 633 0066 0221     		movs	r1, #2
 634 0068 2046     		mov	r0, r4
 635              	.LVL49:
  76:Core/Src/board.c ****             break;
 636              		.loc 1 76 13 is_stmt 0 view .LVU108
 637 006a FFF7FEFF 		bl	setColor
 638              	.LVL50:
  77:Core/Src/board.c ****         case L:
 639              		.loc 1 77 13 is_stmt 1 view .LVU109
 640 006e E8E7     		b	.L28
 641              	.LVL51:
 642              	.L32:
  79:Core/Src/board.c ****             break;
 643              		.loc 1 79 13 view .LVU110
 644 0070 0321     		movs	r1, #3
 645 0072 2046     		mov	r0, r4
 646              	.LVL52:
  79:Core/Src/board.c ****             break;
 647              		.loc 1 79 13 is_stmt 0 view .LVU111
 648 0074 FFF7FEFF 		bl	setColor
 649              	.LVL53:
  80:Core/Src/board.c ****         case O:
 650              		.loc 1 80 13 is_stmt 1 view .LVU112
 651 0078 E3E7     		b	.L28
 652              	.LVL54:
 653              	.L36:
  82:Core/Src/board.c ****             break;
 654              		.loc 1 82 13 view .LVU113
 655 007a 0421     		movs	r1, #4
 656 007c 2046     		mov	r0, r4
 657              	.LVL55:
  82:Core/Src/board.c ****             break;
 658              		.loc 1 82 13 is_stmt 0 view .LVU114
 659 007e FFF7FEFF 		bl	setColor
 660              	.LVL56:
  83:Core/Src/board.c ****         case S:
 661              		.loc 1 83 13 is_stmt 1 view .LVU115
 662 0082 DEE7     		b	.L28
 663              	.LVL57:
 664              	.L34:
  85:Core/Src/board.c ****             break;
 665              		.loc 1 85 13 view .LVU116
 666 0084 0521     		movs	r1, #5
 667 0086 2046     		mov	r0, r4
 668              	.LVL58:
  85:Core/Src/board.c ****             break;
 669              		.loc 1 85 13 is_stmt 0 view .LVU117
 670 0088 FFF7FEFF 		bl	setColor
 671              	.LVL59:
  86:Core/Src/board.c ****         case T:
 672              		.loc 1 86 13 is_stmt 1 view .LVU118
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 15


 673 008c D9E7     		b	.L28
 674              	.LVL60:
 675              	.L29:
  88:Core/Src/board.c ****             break;
 676              		.loc 1 88 13 view .LVU119
 677 008e 0621     		movs	r1, #6
 678 0090 2046     		mov	r0, r4
 679              	.LVL61:
  88:Core/Src/board.c ****             break;
 680              		.loc 1 88 13 is_stmt 0 view .LVU120
 681 0092 FFF7FEFF 		bl	setColor
 682              	.LVL62:
  89:Core/Src/board.c ****         case Z:
 683              		.loc 1 89 13 is_stmt 1 view .LVU121
 684 0096 D4E7     		b	.L28
 685              	.LVL63:
 686              	.L33:
  91:Core/Src/board.c ****             break;
 687              		.loc 1 91 13 view .LVU122
 688 0098 0721     		movs	r1, #7
 689 009a 2046     		mov	r0, r4
 690              	.LVL64:
  91:Core/Src/board.c ****             break;
 691              		.loc 1 91 13 is_stmt 0 view .LVU123
 692 009c FFF7FEFF 		bl	setColor
 693              	.LVL65:
  92:Core/Src/board.c ****         default:
 694              		.loc 1 92 13 is_stmt 1 view .LVU124
 695 00a0 CFE7     		b	.L28
 696              		.cfi_endproc
 697              	.LFE741:
 699              		.section	.text.clearPiece,"ax",%progbits
 700              		.align	1
 701              		.global	clearPiece
 702              		.syntax unified
 703              		.thumb
 704              		.thumb_func
 705              		.fpu fpv4-sp-d16
 707              	clearPiece:
 708              	.LVL66:
 709              	.LFB742:
  98:Core/Src/board.c ****  
  99:Core/Src/board.c **** void clearPiece(Board * board, Piece * piece)
 100:Core/Src/board.c **** {
 710              		.loc 1 100 1 view -0
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 0
 713              		@ frame_needed = 0, uses_anonymous_args = 0
 714              		.loc 1 100 1 is_stmt 0 view .LVU126
 715 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 716              	.LCFI15:
 717              		.cfi_def_cfa_offset 24
 718              		.cfi_offset 4, -24
 719              		.cfi_offset 5, -20
 720              		.cfi_offset 6, -16
 721              		.cfi_offset 7, -12
 722              		.cfi_offset 8, -8
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 16


 723              		.cfi_offset 14, -4
 724 0004 84B0     		sub	sp, sp, #16
 725              	.LCFI16:
 726              		.cfi_def_cfa_offset 40
 727 0006 0546     		mov	r5, r0
 728 0008 0C46     		mov	r4, r1
 101:Core/Src/board.c ****     int i = getPosX(piece);
 729              		.loc 1 101 5 is_stmt 1 view .LVU127
 730              		.loc 1 101 13 is_stmt 0 view .LVU128
 731 000a 0846     		mov	r0, r1
 732              	.LVL67:
 733              		.loc 1 101 13 view .LVU129
 734 000c FFF7FEFF 		bl	getPosX
 735              	.LVL68:
 736              		.loc 1 101 13 view .LVU130
 737 0010 0646     		mov	r6, r0
 738              	.LVL69:
 102:Core/Src/board.c ****     int j = getPosY(piece);
 739              		.loc 1 102 5 is_stmt 1 view .LVU131
 740              		.loc 1 102 13 is_stmt 0 view .LVU132
 741 0012 2046     		mov	r0, r4
 742              	.LVL70:
 743              		.loc 1 102 13 view .LVU133
 744 0014 FFF7FEFF 		bl	getPosY
 745              	.LVL71:
 746 0018 0746     		mov	r7, r0
 747              	.LVL72:
 103:Core/Src/board.c ****  
 104:Core/Src/board.c ****     int k = getKind(piece);
 748              		.loc 1 104 5 is_stmt 1 view .LVU134
 749              		.loc 1 104 13 is_stmt 0 view .LVU135
 750 001a 2046     		mov	r0, r4
 751              	.LVL73:
 752              		.loc 1 104 13 view .LVU136
 753 001c FFF7FEFF 		bl	getKind
 754              	.LVL74:
 755 0020 8046     		mov	r8, r0
 756              	.LVL75:
 105:Core/Src/board.c ****     int o = getOrientation(piece);
 757              		.loc 1 105 5 is_stmt 1 view .LVU137
 758              		.loc 1 105 13 is_stmt 0 view .LVU138
 759 0022 2046     		mov	r0, r4
 760              	.LVL76:
 761              		.loc 1 105 13 view .LVU139
 762 0024 FFF7FEFF 		bl	getOrientation
 763              	.LVL77:
 106:Core/Src/board.c ****  
 107:Core/Src/board.c ****     floodFill(board, i, j, PIVOT_X, PIVOT_Y, k, o, FREE);
 764              		.loc 1 107 5 is_stmt 1 view .LVU140
 765 0028 0023     		movs	r3, #0
 766 002a 0393     		str	r3, [sp, #12]
 767 002c 0290     		str	r0, [sp, #8]
 768 002e CDF80480 		str	r8, [sp, #4]
 769 0032 0223     		movs	r3, #2
 770 0034 0093     		str	r3, [sp]
 771 0036 0123     		movs	r3, #1
 772 0038 3A46     		mov	r2, r7
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 17


 773 003a 3146     		mov	r1, r6
 774 003c 2846     		mov	r0, r5
 775              	.LVL78:
 776              		.loc 1 107 5 is_stmt 0 view .LVU141
 777 003e FFF7FEFF 		bl	floodFill
 778              	.LVL79:
 108:Core/Src/board.c **** }
 779              		.loc 1 108 1 view .LVU142
 780 0042 04B0     		add	sp, sp, #16
 781              	.LCFI17:
 782              		.cfi_def_cfa_offset 24
 783              		@ sp needed
 784 0044 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 785              		.loc 1 108 1 view .LVU143
 786              		.cfi_endproc
 787              	.LFE742:
 789              		.section	.text.setCurrentPiece,"ax",%progbits
 790              		.align	1
 791              		.global	setCurrentPiece
 792              		.syntax unified
 793              		.thumb
 794              		.thumb_func
 795              		.fpu fpv4-sp-d16
 797              	setCurrentPiece:
 798              	.LVL80:
 799              	.LFB744:
 109:Core/Src/board.c ****  
 110:Core/Src/board.c **** void newPiece(Board * board, Piece * piece)
 111:Core/Src/board.c **** {
 112:Core/Src/board.c ****         
 113:Core/Src/board.c ****     setPosX(piece, ORIGIN_X);
 114:Core/Src/board.c ****     setPosY(piece, ORIGIN_Y);
 115:Core/Src/board.c ****  
 116:Core/Src/board.c ****     drawPiece(board, piece);
 117:Core/Src/board.c ****     setCurrentPiece(board, piece);
 118:Core/Src/board.c **** }
 119:Core/Src/board.c **** 
 120:Core/Src/board.c **** void setCurrentPiece(Board * board, Piece * piece)
 121:Core/Src/board.c **** {
 800              		.loc 1 121 1 is_stmt 1 view -0
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 0
 803              		@ frame_needed = 0, uses_anonymous_args = 0
 804              		@ link register save eliminated.
 122:Core/Src/board.c ****     board->currentPiece = piece;
 805              		.loc 1 122 5 view .LVU145
 806              		.loc 1 122 25 is_stmt 0 view .LVU146
 807 0000 0160     		str	r1, [r0]
 123:Core/Src/board.c **** }
 808              		.loc 1 123 1 view .LVU147
 809 0002 7047     		bx	lr
 810              		.cfi_endproc
 811              	.LFE744:
 813              		.section	.text.newPiece,"ax",%progbits
 814              		.align	1
 815              		.global	newPiece
 816              		.syntax unified
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 18


 817              		.thumb
 818              		.thumb_func
 819              		.fpu fpv4-sp-d16
 821              	newPiece:
 822              	.LVL81:
 823              	.LFB743:
 111:Core/Src/board.c ****         
 824              		.loc 1 111 1 is_stmt 1 view -0
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 0
 827              		@ frame_needed = 0, uses_anonymous_args = 0
 111:Core/Src/board.c ****         
 828              		.loc 1 111 1 is_stmt 0 view .LVU149
 829 0000 38B5     		push	{r3, r4, r5, lr}
 830              	.LCFI18:
 831              		.cfi_def_cfa_offset 16
 832              		.cfi_offset 3, -16
 833              		.cfi_offset 4, -12
 834              		.cfi_offset 5, -8
 835              		.cfi_offset 14, -4
 836 0002 0546     		mov	r5, r0
 837 0004 0C46     		mov	r4, r1
 113:Core/Src/board.c ****     setPosY(piece, ORIGIN_Y);
 838              		.loc 1 113 5 is_stmt 1 view .LVU150
 839 0006 0021     		movs	r1, #0
 840              	.LVL82:
 113:Core/Src/board.c ****     setPosY(piece, ORIGIN_Y);
 841              		.loc 1 113 5 is_stmt 0 view .LVU151
 842 0008 2046     		mov	r0, r4
 843              	.LVL83:
 113:Core/Src/board.c ****     setPosY(piece, ORIGIN_Y);
 844              		.loc 1 113 5 view .LVU152
 845 000a FFF7FEFF 		bl	setPosX
 846              	.LVL84:
 114:Core/Src/board.c ****  
 847              		.loc 1 114 5 is_stmt 1 view .LVU153
 848 000e 0521     		movs	r1, #5
 849 0010 2046     		mov	r0, r4
 850 0012 FFF7FEFF 		bl	setPosY
 851              	.LVL85:
 116:Core/Src/board.c ****     setCurrentPiece(board, piece);
 852              		.loc 1 116 5 view .LVU154
 853 0016 2146     		mov	r1, r4
 854 0018 2846     		mov	r0, r5
 855 001a FFF7FEFF 		bl	drawPiece
 856              	.LVL86:
 117:Core/Src/board.c **** }
 857              		.loc 1 117 5 view .LVU155
 858 001e 2146     		mov	r1, r4
 859 0020 2846     		mov	r0, r5
 860 0022 FFF7FEFF 		bl	setCurrentPiece
 861              	.LVL87:
 118:Core/Src/board.c **** 
 862              		.loc 1 118 1 is_stmt 0 view .LVU156
 863 0026 38BD     		pop	{r3, r4, r5, pc}
 118:Core/Src/board.c **** 
 864              		.loc 1 118 1 view .LVU157
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 19


 865              		.cfi_endproc
 866              	.LFE743:
 868              		.section	.text.getCurrentPiece,"ax",%progbits
 869              		.align	1
 870              		.global	getCurrentPiece
 871              		.syntax unified
 872              		.thumb
 873              		.thumb_func
 874              		.fpu fpv4-sp-d16
 876              	getCurrentPiece:
 877              	.LVL88:
 878              	.LFB745:
 124:Core/Src/board.c ****  
 125:Core/Src/board.c **** Piece * getCurrentPiece(Board * board)
 126:Core/Src/board.c **** {
 879              		.loc 1 126 1 is_stmt 1 view -0
 880              		.cfi_startproc
 881              		@ args = 0, pretend = 0, frame = 0
 882              		@ frame_needed = 0, uses_anonymous_args = 0
 883              		@ link register save eliminated.
 127:Core/Src/board.c ****     return board->currentPiece;
 884              		.loc 1 127 5 view .LVU159
 128:Core/Src/board.c **** }
 885              		.loc 1 128 1 is_stmt 0 view .LVU160
 886 0000 0068     		ldr	r0, [r0]
 887              	.LVL89:
 888              		.loc 1 128 1 view .LVU161
 889 0002 7047     		bx	lr
 890              		.cfi_endproc
 891              	.LFE745:
 893              		.section	.text.isCurrentPieceMovable,"ax",%progbits
 894              		.align	1
 895              		.global	isCurrentPieceMovable
 896              		.syntax unified
 897              		.thumb
 898              		.thumb_func
 899              		.fpu fpv4-sp-d16
 901              	isCurrentPieceMovable:
 902              	.LVL90:
 903              	.LFB746:
 129:Core/Src/board.c ****  
 130:Core/Src/board.c **** bool isCurrentPieceMovable(Board * board, int x, int y)
 131:Core/Src/board.c **** {
 904              		.loc 1 131 1 is_stmt 1 view -0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 72
 907              		@ frame_needed = 0, uses_anonymous_args = 0
 908              		.loc 1 131 1 is_stmt 0 view .LVU163
 909 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 910              	.LCFI19:
 911              		.cfi_def_cfa_offset 20
 912              		.cfi_offset 4, -20
 913              		.cfi_offset 5, -16
 914              		.cfi_offset 6, -12
 915              		.cfi_offset 7, -8
 916              		.cfi_offset 14, -4
 917 0002 99B0     		sub	sp, sp, #100
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 20


 918              	.LCFI20:
 919              		.cfi_def_cfa_offset 120
 920 0004 0446     		mov	r4, r0
 921 0006 0D46     		mov	r5, r1
 922 0008 1646     		mov	r6, r2
 132:Core/Src/board.c ****     clearPiece(board, board->currentPiece);
 923              		.loc 1 132 5 is_stmt 1 view .LVU164
 924 000a 0168     		ldr	r1, [r0]
 925              	.LVL91:
 926              		.loc 1 132 5 is_stmt 0 view .LVU165
 927 000c FFF7FEFF 		bl	clearPiece
 928              	.LVL92:
 133:Core/Src/board.c ****  
 134:Core/Src/board.c ****     bool movable = true;
 929              		.loc 1 134 5 is_stmt 1 view .LVU166
 930              		.loc 1 134 10 is_stmt 0 view .LVU167
 931 0010 0123     		movs	r3, #1
 932 0012 1793     		str	r3, [sp, #92]
 135:Core/Src/board.c ****  
 136:Core/Src/board.c ****     bool visited[SIZE][SIZE];
 933              		.loc 1 136 5 is_stmt 1 view .LVU168
 137:Core/Src/board.c ****  
 138:Core/Src/board.c ****     for(int l = 0; l < SIZE; ++l)
 934              		.loc 1 138 5 view .LVU169
 935              	.LBB8:
 936              		.loc 1 138 9 view .LVU170
 937              	.LVL93:
 938              		.loc 1 138 13 is_stmt 0 view .LVU171
 939 0014 4FF0000E 		mov	lr, #0
 940              		.loc 1 138 5 view .LVU172
 941 0018 0CE0     		b	.L45
 942              	.LVL94:
 943              	.L46:
 944              	.LBB9:
 139:Core/Src/board.c ****         for(int m = 0; m < SIZE; ++m)
 140:Core/Src/board.c ****             visited[l][m] = false;
 945              		.loc 1 140 13 is_stmt 1 discriminator 3 view .LVU173
 946              		.loc 1 140 27 is_stmt 0 discriminator 3 view .LVU174
 947 001a 03EB8E0C 		add	ip, r3, lr, lsl #2
 948 001e 18AA     		add	r2, sp, #96
 949 0020 02EB8C0C 		add	ip, r2, ip, lsl #2
 950 0024 0020     		movs	r0, #0
 951 0026 4CF8440C 		str	r0, [ip, #-68]
 139:Core/Src/board.c ****         for(int m = 0; m < SIZE; ++m)
 952              		.loc 1 139 34 is_stmt 1 discriminator 3 view .LVU175
 953 002a 0133     		adds	r3, r3, #1
 954              	.LVL95:
 955              	.L47:
 139:Core/Src/board.c ****         for(int m = 0; m < SIZE; ++m)
 956              		.loc 1 139 24 discriminator 1 view .LVU176
 139:Core/Src/board.c ****         for(int m = 0; m < SIZE; ++m)
 957              		.loc 1 139 9 is_stmt 0 discriminator 1 view .LVU177
 958 002c 032B     		cmp	r3, #3
 959 002e F4DD     		ble	.L46
 960              	.LBE9:
 138:Core/Src/board.c ****         for(int m = 0; m < SIZE; ++m)
 961              		.loc 1 138 30 is_stmt 1 discriminator 2 view .LVU178
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 21


 962 0030 0EF1010E 		add	lr, lr, #1
 963              	.LVL96:
 964              	.L45:
 138:Core/Src/board.c ****         for(int m = 0; m < SIZE; ++m)
 965              		.loc 1 138 20 discriminator 1 view .LVU179
 138:Core/Src/board.c ****         for(int m = 0; m < SIZE; ++m)
 966              		.loc 1 138 5 is_stmt 0 discriminator 1 view .LVU180
 967 0034 BEF1030F 		cmp	lr, #3
 968 0038 01DC     		bgt	.L50
 969              	.LBB10:
 139:Core/Src/board.c ****         for(int m = 0; m < SIZE; ++m)
 970              		.loc 1 139 17 view .LVU181
 971 003a 0023     		movs	r3, #0
 972 003c F6E7     		b	.L47
 973              	.L50:
 974              	.LBE10:
 975              	.LBE8:
 141:Core/Src/board.c ****  
 142:Core/Src/board.c ****     int k = getKind(board->currentPiece);
 976              		.loc 1 142 5 is_stmt 1 view .LVU182
 977              		.loc 1 142 13 is_stmt 0 view .LVU183
 978 003e 2068     		ldr	r0, [r4]
 979 0040 FFF7FEFF 		bl	getKind
 980              	.LVL97:
 981              		.loc 1 142 13 view .LVU184
 982 0044 0746     		mov	r7, r0
 983              	.LVL98:
 143:Core/Src/board.c ****     int o = getOrientation(board->currentPiece);
 984              		.loc 1 143 5 is_stmt 1 view .LVU185
 985              		.loc 1 143 13 is_stmt 0 view .LVU186
 986 0046 2068     		ldr	r0, [r4]
 987              	.LVL99:
 988              		.loc 1 143 13 view .LVU187
 989 0048 FFF7FEFF 		bl	getOrientation
 990              	.LVL100:
 144:Core/Src/board.c ****  
 145:Core/Src/board.c ****     floodB(board, x, y, PIVOT_X, PIVOT_Y, k, o, &movable, visited);
 991              		.loc 1 145 5 is_stmt 1 view .LVU188
 992 004c 07AB     		add	r3, sp, #28
 993 004e 0493     		str	r3, [sp, #16]
 994 0050 17AB     		add	r3, sp, #92
 995 0052 0393     		str	r3, [sp, #12]
 996 0054 0290     		str	r0, [sp, #8]
 997 0056 0197     		str	r7, [sp, #4]
 998 0058 0223     		movs	r3, #2
 999 005a 0093     		str	r3, [sp]
 1000 005c 0123     		movs	r3, #1
 1001 005e 3246     		mov	r2, r6
 1002 0060 2946     		mov	r1, r5
 1003 0062 2046     		mov	r0, r4
 1004              	.LVL101:
 1005              		.loc 1 145 5 is_stmt 0 view .LVU189
 1006 0064 FFF7FEFF 		bl	floodB
 1007              	.LVL102:
 146:Core/Src/board.c ****  
 147:Core/Src/board.c ****     drawPiece(board, board->currentPiece);
 1008              		.loc 1 147 5 is_stmt 1 view .LVU190
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 22


 1009 0068 2168     		ldr	r1, [r4]
 1010 006a 2046     		mov	r0, r4
 1011 006c FFF7FEFF 		bl	drawPiece
 1012              	.LVL103:
 148:Core/Src/board.c ****  
 149:Core/Src/board.c ****     return movable;
 1013              		.loc 1 149 5 view .LVU191
 150:Core/Src/board.c **** }
 1014              		.loc 1 150 1 is_stmt 0 view .LVU192
 1015 0070 1798     		ldr	r0, [sp, #92]
 1016 0072 19B0     		add	sp, sp, #100
 1017              	.LCFI21:
 1018              		.cfi_def_cfa_offset 20
 1019              		@ sp needed
 1020 0074 F0BD     		pop	{r4, r5, r6, r7, pc}
 1021              		.loc 1 150 1 view .LVU193
 1022              		.cfi_endproc
 1023              	.LFE746:
 1025              		.section	.text.isCurrentPieceRotable,"ax",%progbits
 1026              		.align	1
 1027              		.global	isCurrentPieceRotable
 1028              		.syntax unified
 1029              		.thumb
 1030              		.thumb_func
 1031              		.fpu fpv4-sp-d16
 1033              	isCurrentPieceRotable:
 1034              	.LVL104:
 1035              	.LFB747:
 151:Core/Src/board.c ****  
 152:Core/Src/board.c **** bool isCurrentPieceRotable(Board * board, int o)
 153:Core/Src/board.c **** {
 1036              		.loc 1 153 1 is_stmt 1 view -0
 1037              		.cfi_startproc
 1038              		@ args = 0, pretend = 0, frame = 72
 1039              		@ frame_needed = 0, uses_anonymous_args = 0
 1040              		.loc 1 153 1 is_stmt 0 view .LVU195
 1041 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1042              	.LCFI22:
 1043              		.cfi_def_cfa_offset 20
 1044              		.cfi_offset 4, -20
 1045              		.cfi_offset 5, -16
 1046              		.cfi_offset 6, -12
 1047              		.cfi_offset 7, -8
 1048              		.cfi_offset 14, -4
 1049 0002 99B0     		sub	sp, sp, #100
 1050              	.LCFI23:
 1051              		.cfi_def_cfa_offset 120
 1052 0004 0446     		mov	r4, r0
 1053 0006 0E46     		mov	r6, r1
 154:Core/Src/board.c ****     clearPiece(board, board->currentPiece);
 1054              		.loc 1 154 5 is_stmt 1 view .LVU196
 1055 0008 0168     		ldr	r1, [r0]
 1056              	.LVL105:
 1057              		.loc 1 154 5 is_stmt 0 view .LVU197
 1058 000a FFF7FEFF 		bl	clearPiece
 1059              	.LVL106:
 155:Core/Src/board.c ****  
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 23


 156:Core/Src/board.c ****     bool rotable = true;
 1060              		.loc 1 156 5 is_stmt 1 view .LVU198
 1061              		.loc 1 156 10 is_stmt 0 view .LVU199
 1062 000e 0123     		movs	r3, #1
 1063 0010 1793     		str	r3, [sp, #92]
 157:Core/Src/board.c ****  
 158:Core/Src/board.c ****     bool visited[SIZE][SIZE];
 1064              		.loc 1 158 5 is_stmt 1 view .LVU200
 159:Core/Src/board.c ****  
 160:Core/Src/board.c ****     for(int i = 0; i < SIZE; ++i)
 1065              		.loc 1 160 5 view .LVU201
 1066              	.LBB11:
 1067              		.loc 1 160 9 view .LVU202
 1068              	.LVL107:
 1069              		.loc 1 160 13 is_stmt 0 view .LVU203
 1070 0012 4FF0000C 		mov	ip, #0
 1071              		.loc 1 160 5 view .LVU204
 1072 0016 0CE0     		b	.L52
 1073              	.LVL108:
 1074              	.L53:
 1075              	.LBB12:
 161:Core/Src/board.c ****         for(int j = 0; j < SIZE; ++j)
 162:Core/Src/board.c ****             visited[i][j] = false;
 1076              		.loc 1 162 13 is_stmt 1 discriminator 3 view .LVU205
 1077              		.loc 1 162 27 is_stmt 0 discriminator 3 view .LVU206
 1078 0018 03EB8C02 		add	r2, r3, ip, lsl #2
 1079 001c 18A9     		add	r1, sp, #96
 1080 001e 01EB8202 		add	r2, r1, r2, lsl #2
 1081 0022 0020     		movs	r0, #0
 1082 0024 42F8440C 		str	r0, [r2, #-68]
 161:Core/Src/board.c ****         for(int j = 0; j < SIZE; ++j)
 1083              		.loc 1 161 34 is_stmt 1 discriminator 3 view .LVU207
 1084 0028 0133     		adds	r3, r3, #1
 1085              	.LVL109:
 1086              	.L54:
 161:Core/Src/board.c ****         for(int j = 0; j < SIZE; ++j)
 1087              		.loc 1 161 24 discriminator 1 view .LVU208
 161:Core/Src/board.c ****         for(int j = 0; j < SIZE; ++j)
 1088              		.loc 1 161 9 is_stmt 0 discriminator 1 view .LVU209
 1089 002a 032B     		cmp	r3, #3
 1090 002c F4DD     		ble	.L53
 1091              	.LBE12:
 160:Core/Src/board.c ****         for(int j = 0; j < SIZE; ++j)
 1092              		.loc 1 160 30 is_stmt 1 discriminator 2 view .LVU210
 1093 002e 0CF1010C 		add	ip, ip, #1
 1094              	.LVL110:
 1095              	.L52:
 160:Core/Src/board.c ****         for(int j = 0; j < SIZE; ++j)
 1096              		.loc 1 160 20 discriminator 1 view .LVU211
 160:Core/Src/board.c ****         for(int j = 0; j < SIZE; ++j)
 1097              		.loc 1 160 5 is_stmt 0 discriminator 1 view .LVU212
 1098 0032 BCF1030F 		cmp	ip, #3
 1099 0036 01DC     		bgt	.L57
 1100              	.LBB13:
 161:Core/Src/board.c ****         for(int j = 0; j < SIZE; ++j)
 1101              		.loc 1 161 17 view .LVU213
 1102 0038 0023     		movs	r3, #0
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 24


 1103 003a F6E7     		b	.L54
 1104              	.L57:
 1105              	.LBE13:
 1106              	.LBE11:
 163:Core/Src/board.c ****  
 164:Core/Src/board.c ****     int k = getKind(board->currentPiece);
 1107              		.loc 1 164 5 is_stmt 1 view .LVU214
 1108              		.loc 1 164 13 is_stmt 0 view .LVU215
 1109 003c 2068     		ldr	r0, [r4]
 1110 003e FFF7FEFF 		bl	getKind
 1111              	.LVL111:
 1112              		.loc 1 164 13 view .LVU216
 1113 0042 0746     		mov	r7, r0
 1114              	.LVL112:
 165:Core/Src/board.c ****  
 166:Core/Src/board.c ****     floodB(board, getPosX(board->currentPiece), getPosY(board->currentPiece), PIVOT_X, PIVOT_Y, k, 
 1115              		.loc 1 166 5 is_stmt 1 view .LVU217
 1116 0044 2068     		ldr	r0, [r4]
 1117              	.LVL113:
 1118              		.loc 1 166 5 is_stmt 0 view .LVU218
 1119 0046 FFF7FEFF 		bl	getPosX
 1120              	.LVL114:
 1121 004a 0546     		mov	r5, r0
 1122 004c 2068     		ldr	r0, [r4]
 1123 004e FFF7FEFF 		bl	getPosY
 1124              	.LVL115:
 1125 0052 0246     		mov	r2, r0
 1126 0054 07AB     		add	r3, sp, #28
 1127 0056 0493     		str	r3, [sp, #16]
 1128 0058 17AB     		add	r3, sp, #92
 1129 005a 0393     		str	r3, [sp, #12]
 1130 005c 0296     		str	r6, [sp, #8]
 1131 005e 0197     		str	r7, [sp, #4]
 1132 0060 0223     		movs	r3, #2
 1133 0062 0093     		str	r3, [sp]
 1134 0064 0123     		movs	r3, #1
 1135 0066 2946     		mov	r1, r5
 1136 0068 2046     		mov	r0, r4
 1137 006a FFF7FEFF 		bl	floodB
 1138              	.LVL116:
 167:Core/Src/board.c ****  
 168:Core/Src/board.c ****     drawPiece(board, board->currentPiece);
 1139              		.loc 1 168 5 is_stmt 1 view .LVU219
 1140 006e 2168     		ldr	r1, [r4]
 1141 0070 2046     		mov	r0, r4
 1142 0072 FFF7FEFF 		bl	drawPiece
 1143              	.LVL117:
 169:Core/Src/board.c ****  
 170:Core/Src/board.c ****     return rotable;
 1144              		.loc 1 170 5 view .LVU220
 171:Core/Src/board.c **** }
 1145              		.loc 1 171 1 is_stmt 0 view .LVU221
 1146 0076 1798     		ldr	r0, [sp, #92]
 1147 0078 19B0     		add	sp, sp, #100
 1148              	.LCFI24:
 1149              		.cfi_def_cfa_offset 20
 1150              		@ sp needed
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 25


 1151 007a F0BD     		pop	{r4, r5, r6, r7, pc}
 1152              		.loc 1 171 1 view .LVU222
 1153              		.cfi_endproc
 1154              	.LFE747:
 1156              		.section	.text.moveCurrentPieceDown,"ax",%progbits
 1157              		.align	1
 1158              		.global	moveCurrentPieceDown
 1159              		.syntax unified
 1160              		.thumb
 1161              		.thumb_func
 1162              		.fpu fpv4-sp-d16
 1164              	moveCurrentPieceDown:
 1165              	.LVL118:
 1166              	.LFB748:
 172:Core/Src/board.c ****  
 173:Core/Src/board.c **** void moveCurrentPieceDown(Board * board)
 174:Core/Src/board.c **** {
 1167              		.loc 1 174 1 is_stmt 1 view -0
 1168              		.cfi_startproc
 1169              		@ args = 0, pretend = 0, frame = 0
 1170              		@ frame_needed = 0, uses_anonymous_args = 0
 1171              		.loc 1 174 1 is_stmt 0 view .LVU224
 1172 0000 38B5     		push	{r3, r4, r5, lr}
 1173              	.LCFI25:
 1174              		.cfi_def_cfa_offset 16
 1175              		.cfi_offset 3, -16
 1176              		.cfi_offset 4, -12
 1177              		.cfi_offset 5, -8
 1178              		.cfi_offset 14, -4
 1179 0002 0446     		mov	r4, r0
 175:Core/Src/board.c ****     int x = getPosX(board->currentPiece);
 1180              		.loc 1 175 5 is_stmt 1 view .LVU225
 1181              		.loc 1 175 13 is_stmt 0 view .LVU226
 1182 0004 0068     		ldr	r0, [r0]
 1183              	.LVL119:
 1184              		.loc 1 175 13 view .LVU227
 1185 0006 FFF7FEFF 		bl	getPosX
 1186              	.LVL120:
 1187 000a 0546     		mov	r5, r0
 1188              	.LVL121:
 176:Core/Src/board.c ****     int y = getPosY(board->currentPiece);
 1189              		.loc 1 176 5 is_stmt 1 view .LVU228
 1190              		.loc 1 176 13 is_stmt 0 view .LVU229
 1191 000c 2068     		ldr	r0, [r4]
 1192              	.LVL122:
 1193              		.loc 1 176 13 view .LVU230
 1194 000e FFF7FEFF 		bl	getPosY
 1195              	.LVL123:
 1196 0012 0246     		mov	r2, r0
 1197              	.LVL124:
 177:Core/Src/board.c ****  
 178:Core/Src/board.c ****     if(isCurrentPieceMovable(board, x + 1, y))
 1198              		.loc 1 178 5 is_stmt 1 view .LVU231
 1199              		.loc 1 178 8 is_stmt 0 view .LVU232
 1200 0014 0135     		adds	r5, r5, #1
 1201              	.LVL125:
 1202              		.loc 1 178 8 view .LVU233
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 26


 1203 0016 2946     		mov	r1, r5
 1204 0018 2046     		mov	r0, r4
 1205              	.LVL126:
 1206              		.loc 1 178 8 view .LVU234
 1207 001a FFF7FEFF 		bl	isCurrentPieceMovable
 1208              	.LVL127:
 1209              		.loc 1 178 7 view .LVU235
 1210 001e 00B9     		cbnz	r0, .L61
 1211              	.L58:
 179:Core/Src/board.c ****     {
 180:Core/Src/board.c ****         clearPiece(board, board->currentPiece);
 181:Core/Src/board.c ****         setPosX(board->currentPiece, x + 1);
 182:Core/Src/board.c ****  
 183:Core/Src/board.c ****         drawPiece(board, board->currentPiece);
 184:Core/Src/board.c ****     }
 185:Core/Src/board.c **** }
 1212              		.loc 1 185 1 view .LVU236
 1213 0020 38BD     		pop	{r3, r4, r5, pc}
 1214              	.LVL128:
 1215              	.L61:
 180:Core/Src/board.c ****         setPosX(board->currentPiece, x + 1);
 1216              		.loc 1 180 9 is_stmt 1 view .LVU237
 1217 0022 2168     		ldr	r1, [r4]
 1218 0024 2046     		mov	r0, r4
 1219 0026 FFF7FEFF 		bl	clearPiece
 1220              	.LVL129:
 181:Core/Src/board.c ****  
 1221              		.loc 1 181 9 view .LVU238
 1222 002a 2946     		mov	r1, r5
 1223 002c 2068     		ldr	r0, [r4]
 1224 002e FFF7FEFF 		bl	setPosX
 1225              	.LVL130:
 183:Core/Src/board.c ****     }
 1226              		.loc 1 183 9 view .LVU239
 1227 0032 2168     		ldr	r1, [r4]
 1228 0034 2046     		mov	r0, r4
 1229 0036 FFF7FEFF 		bl	drawPiece
 1230              	.LVL131:
 1231              		.loc 1 185 1 is_stmt 0 view .LVU240
 1232 003a F1E7     		b	.L58
 1233              		.cfi_endproc
 1234              	.LFE748:
 1236              		.section	.text.moveCurrentPieceLeft,"ax",%progbits
 1237              		.align	1
 1238              		.global	moveCurrentPieceLeft
 1239              		.syntax unified
 1240              		.thumb
 1241              		.thumb_func
 1242              		.fpu fpv4-sp-d16
 1244              	moveCurrentPieceLeft:
 1245              	.LVL132:
 1246              	.LFB750:
 186:Core/Src/board.c **** 
 187:Core/Src/board.c **** int moveCurrentPieceDownBot(Board * board)
 188:Core/Src/board.c **** {
 189:Core/Src/board.c ****     if(isCurrentPieceFallen(board)){
 190:Core/Src/board.c ****         return 0;
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 27


 191:Core/Src/board.c ****     }
 192:Core/Src/board.c ****     
 193:Core/Src/board.c ****     moveCurrentPieceDown(board);
 194:Core/Src/board.c ****     return 1;
 195:Core/Src/board.c **** }
 196:Core/Src/board.c ****  
 197:Core/Src/board.c **** void moveCurrentPieceLeft(Board * board)
 198:Core/Src/board.c **** {
 1247              		.loc 1 198 1 is_stmt 1 view -0
 1248              		.cfi_startproc
 1249              		@ args = 0, pretend = 0, frame = 0
 1250              		@ frame_needed = 0, uses_anonymous_args = 0
 1251              		.loc 1 198 1 is_stmt 0 view .LVU242
 1252 0000 70B5     		push	{r4, r5, r6, lr}
 1253              	.LCFI26:
 1254              		.cfi_def_cfa_offset 16
 1255              		.cfi_offset 4, -16
 1256              		.cfi_offset 5, -12
 1257              		.cfi_offset 6, -8
 1258              		.cfi_offset 14, -4
 1259 0002 0446     		mov	r4, r0
 199:Core/Src/board.c ****     int x = getPosX(board->currentPiece);
 1260              		.loc 1 199 5 is_stmt 1 view .LVU243
 1261              		.loc 1 199 13 is_stmt 0 view .LVU244
 1262 0004 0068     		ldr	r0, [r0]
 1263              	.LVL133:
 1264              		.loc 1 199 13 view .LVU245
 1265 0006 FFF7FEFF 		bl	getPosX
 1266              	.LVL134:
 1267 000a 0646     		mov	r6, r0
 1268              	.LVL135:
 200:Core/Src/board.c ****     int y = getPosY(board->currentPiece);
 1269              		.loc 1 200 5 is_stmt 1 view .LVU246
 1270              		.loc 1 200 13 is_stmt 0 view .LVU247
 1271 000c 2068     		ldr	r0, [r4]
 1272              	.LVL136:
 1273              		.loc 1 200 13 view .LVU248
 1274 000e FFF7FEFF 		bl	getPosY
 1275              	.LVL137:
 201:Core/Src/board.c ****  
 202:Core/Src/board.c ****     if(isCurrentPieceMovable(board, x, y - 1))
 1276              		.loc 1 202 5 is_stmt 1 view .LVU249
 1277              		.loc 1 202 8 is_stmt 0 view .LVU250
 1278 0012 451E     		subs	r5, r0, #1
 1279 0014 2A46     		mov	r2, r5
 1280 0016 3146     		mov	r1, r6
 1281 0018 2046     		mov	r0, r4
 1282              	.LVL138:
 1283              		.loc 1 202 8 view .LVU251
 1284 001a FFF7FEFF 		bl	isCurrentPieceMovable
 1285              	.LVL139:
 1286              		.loc 1 202 7 view .LVU252
 1287 001e 00B9     		cbnz	r0, .L65
 1288              	.L62:
 203:Core/Src/board.c ****     {
 204:Core/Src/board.c ****         clearPiece(board, board->currentPiece);
 205:Core/Src/board.c ****         setPosY(board->currentPiece, y - 1);
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 28


 206:Core/Src/board.c ****  
 207:Core/Src/board.c ****         drawPiece(board, board->currentPiece);
 208:Core/Src/board.c ****     }
 209:Core/Src/board.c **** }
 1289              		.loc 1 209 1 view .LVU253
 1290 0020 70BD     		pop	{r4, r5, r6, pc}
 1291              	.LVL140:
 1292              	.L65:
 204:Core/Src/board.c ****         setPosY(board->currentPiece, y - 1);
 1293              		.loc 1 204 9 is_stmt 1 view .LVU254
 1294 0022 2168     		ldr	r1, [r4]
 1295 0024 2046     		mov	r0, r4
 1296 0026 FFF7FEFF 		bl	clearPiece
 1297              	.LVL141:
 205:Core/Src/board.c ****  
 1298              		.loc 1 205 9 view .LVU255
 1299 002a 2946     		mov	r1, r5
 1300 002c 2068     		ldr	r0, [r4]
 1301 002e FFF7FEFF 		bl	setPosY
 1302              	.LVL142:
 207:Core/Src/board.c ****     }
 1303              		.loc 1 207 9 view .LVU256
 1304 0032 2168     		ldr	r1, [r4]
 1305 0034 2046     		mov	r0, r4
 1306 0036 FFF7FEFF 		bl	drawPiece
 1307              	.LVL143:
 1308              		.loc 1 209 1 is_stmt 0 view .LVU257
 1309 003a F1E7     		b	.L62
 1310              		.cfi_endproc
 1311              	.LFE750:
 1313              		.section	.text.moveCurrentPieceRight,"ax",%progbits
 1314              		.align	1
 1315              		.global	moveCurrentPieceRight
 1316              		.syntax unified
 1317              		.thumb
 1318              		.thumb_func
 1319              		.fpu fpv4-sp-d16
 1321              	moveCurrentPieceRight:
 1322              	.LVL144:
 1323              	.LFB751:
 210:Core/Src/board.c ****  
 211:Core/Src/board.c **** void moveCurrentPieceRight(Board * board)
 212:Core/Src/board.c **** {
 1324              		.loc 1 212 1 is_stmt 1 view -0
 1325              		.cfi_startproc
 1326              		@ args = 0, pretend = 0, frame = 0
 1327              		@ frame_needed = 0, uses_anonymous_args = 0
 1328              		.loc 1 212 1 is_stmt 0 view .LVU259
 1329 0000 70B5     		push	{r4, r5, r6, lr}
 1330              	.LCFI27:
 1331              		.cfi_def_cfa_offset 16
 1332              		.cfi_offset 4, -16
 1333              		.cfi_offset 5, -12
 1334              		.cfi_offset 6, -8
 1335              		.cfi_offset 14, -4
 1336 0002 0446     		mov	r4, r0
 213:Core/Src/board.c ****     int x = getPosX(board->currentPiece);
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 29


 1337              		.loc 1 213 5 is_stmt 1 view .LVU260
 1338              		.loc 1 213 13 is_stmt 0 view .LVU261
 1339 0004 0068     		ldr	r0, [r0]
 1340              	.LVL145:
 1341              		.loc 1 213 13 view .LVU262
 1342 0006 FFF7FEFF 		bl	getPosX
 1343              	.LVL146:
 1344 000a 0646     		mov	r6, r0
 1345              	.LVL147:
 214:Core/Src/board.c ****     int y = getPosY(board->currentPiece);
 1346              		.loc 1 214 5 is_stmt 1 view .LVU263
 1347              		.loc 1 214 13 is_stmt 0 view .LVU264
 1348 000c 2068     		ldr	r0, [r4]
 1349              	.LVL148:
 1350              		.loc 1 214 13 view .LVU265
 1351 000e FFF7FEFF 		bl	getPosY
 1352              	.LVL149:
 215:Core/Src/board.c ****  
 216:Core/Src/board.c ****     if(isCurrentPieceMovable(board, x, y + 1))
 1353              		.loc 1 216 5 is_stmt 1 view .LVU266
 1354              		.loc 1 216 8 is_stmt 0 view .LVU267
 1355 0012 451C     		adds	r5, r0, #1
 1356 0014 2A46     		mov	r2, r5
 1357 0016 3146     		mov	r1, r6
 1358 0018 2046     		mov	r0, r4
 1359              	.LVL150:
 1360              		.loc 1 216 8 view .LVU268
 1361 001a FFF7FEFF 		bl	isCurrentPieceMovable
 1362              	.LVL151:
 1363              		.loc 1 216 7 view .LVU269
 1364 001e 00B9     		cbnz	r0, .L69
 1365              	.L66:
 217:Core/Src/board.c ****     {
 218:Core/Src/board.c ****         clearPiece(board, board->currentPiece);
 219:Core/Src/board.c ****         setPosY(board->currentPiece, y + 1);
 220:Core/Src/board.c ****  
 221:Core/Src/board.c ****         drawPiece(board, board->currentPiece);
 222:Core/Src/board.c ****     }
 223:Core/Src/board.c **** }
 1366              		.loc 1 223 1 view .LVU270
 1367 0020 70BD     		pop	{r4, r5, r6, pc}
 1368              	.LVL152:
 1369              	.L69:
 218:Core/Src/board.c ****         setPosY(board->currentPiece, y + 1);
 1370              		.loc 1 218 9 is_stmt 1 view .LVU271
 1371 0022 2168     		ldr	r1, [r4]
 1372 0024 2046     		mov	r0, r4
 1373 0026 FFF7FEFF 		bl	clearPiece
 1374              	.LVL153:
 219:Core/Src/board.c ****  
 1375              		.loc 1 219 9 view .LVU272
 1376 002a 2946     		mov	r1, r5
 1377 002c 2068     		ldr	r0, [r4]
 1378 002e FFF7FEFF 		bl	setPosY
 1379              	.LVL154:
 221:Core/Src/board.c ****     }
 1380              		.loc 1 221 9 view .LVU273
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 30


 1381 0032 2168     		ldr	r1, [r4]
 1382 0034 2046     		mov	r0, r4
 1383 0036 FFF7FEFF 		bl	drawPiece
 1384              	.LVL155:
 1385              		.loc 1 223 1 is_stmt 0 view .LVU274
 1386 003a F1E7     		b	.L66
 1387              		.cfi_endproc
 1388              	.LFE751:
 1390              		.section	.text.rotateCurrentPieceLeft,"ax",%progbits
 1391              		.align	1
 1392              		.global	rotateCurrentPieceLeft
 1393              		.syntax unified
 1394              		.thumb
 1395              		.thumb_func
 1396              		.fpu fpv4-sp-d16
 1398              	rotateCurrentPieceLeft:
 1399              	.LVL156:
 1400              	.LFB752:
 224:Core/Src/board.c ****  
 225:Core/Src/board.c **** void rotateCurrentPieceLeft(Board * board)
 226:Core/Src/board.c **** {
 1401              		.loc 1 226 1 is_stmt 1 view -0
 1402              		.cfi_startproc
 1403              		@ args = 0, pretend = 0, frame = 0
 1404              		@ frame_needed = 0, uses_anonymous_args = 0
 1405              		.loc 1 226 1 is_stmt 0 view .LVU276
 1406 0000 38B5     		push	{r3, r4, r5, lr}
 1407              	.LCFI28:
 1408              		.cfi_def_cfa_offset 16
 1409              		.cfi_offset 3, -16
 1410              		.cfi_offset 4, -12
 1411              		.cfi_offset 5, -8
 1412              		.cfi_offset 14, -4
 1413 0002 0546     		mov	r5, r0
 227:Core/Src/board.c ****     int o = getOrientation(board->currentPiece);
 1414              		.loc 1 227 5 is_stmt 1 view .LVU277
 1415              		.loc 1 227 13 is_stmt 0 view .LVU278
 1416 0004 0068     		ldr	r0, [r0]
 1417              	.LVL157:
 1418              		.loc 1 227 13 view .LVU279
 1419 0006 FFF7FEFF 		bl	getOrientation
 1420              	.LVL158:
 228:Core/Src/board.c ****  
 229:Core/Src/board.c ****     if(o > 0)
 1421              		.loc 1 229 5 is_stmt 1 view .LVU280
 1422              		.loc 1 229 7 is_stmt 0 view .LVU281
 1423 000a 041E     		subs	r4, r0, #0
 1424 000c 06DD     		ble	.L73
 230:Core/Src/board.c ****         o--;
 1425              		.loc 1 230 9 is_stmt 1 view .LVU282
 1426              		.loc 1 230 10 is_stmt 0 view .LVU283
 1427 000e 013C     		subs	r4, r4, #1
 1428              	.LVL159:
 1429              	.L71:
 231:Core/Src/board.c ****     else
 232:Core/Src/board.c ****         o = NB_ROTATIONS - 1;
 233:Core/Src/board.c ****  
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 31


 234:Core/Src/board.c ****     if(isCurrentPieceRotable(board, o))
 1430              		.loc 1 234 5 is_stmt 1 view .LVU284
 1431              		.loc 1 234 8 is_stmt 0 view .LVU285
 1432 0010 2146     		mov	r1, r4
 1433 0012 2846     		mov	r0, r5
 1434 0014 FFF7FEFF 		bl	isCurrentPieceRotable
 1435              	.LVL160:
 1436              		.loc 1 234 7 view .LVU286
 1437 0018 10B9     		cbnz	r0, .L75
 1438              	.L70:
 235:Core/Src/board.c ****     {
 236:Core/Src/board.c ****         clearPiece(board, board->currentPiece);
 237:Core/Src/board.c ****  
 238:Core/Src/board.c ****         setOrientation(board->currentPiece, o);
 239:Core/Src/board.c ****         drawPiece(board, board->currentPiece);
 240:Core/Src/board.c ****     }
 241:Core/Src/board.c **** }
 1439              		.loc 1 241 1 view .LVU287
 1440 001a 38BD     		pop	{r3, r4, r5, pc}
 1441              	.LVL161:
 1442              	.L73:
 232:Core/Src/board.c ****  
 1443              		.loc 1 232 11 view .LVU288
 1444 001c 0324     		movs	r4, #3
 1445 001e F7E7     		b	.L71
 1446              	.LVL162:
 1447              	.L75:
 236:Core/Src/board.c ****  
 1448              		.loc 1 236 9 is_stmt 1 view .LVU289
 1449 0020 2968     		ldr	r1, [r5]
 1450 0022 2846     		mov	r0, r5
 1451 0024 FFF7FEFF 		bl	clearPiece
 1452              	.LVL163:
 238:Core/Src/board.c ****         drawPiece(board, board->currentPiece);
 1453              		.loc 1 238 9 view .LVU290
 1454 0028 2146     		mov	r1, r4
 1455 002a 2868     		ldr	r0, [r5]
 1456 002c FFF7FEFF 		bl	setOrientation
 1457              	.LVL164:
 239:Core/Src/board.c ****     }
 1458              		.loc 1 239 9 view .LVU291
 1459 0030 2968     		ldr	r1, [r5]
 1460 0032 2846     		mov	r0, r5
 1461 0034 FFF7FEFF 		bl	drawPiece
 1462              	.LVL165:
 1463              		.loc 1 241 1 is_stmt 0 view .LVU292
 1464 0038 EFE7     		b	.L70
 1465              		.cfi_endproc
 1466              	.LFE752:
 1468              		.section	.text.rotateCurrentPieceRight,"ax",%progbits
 1469              		.align	1
 1470              		.global	rotateCurrentPieceRight
 1471              		.syntax unified
 1472              		.thumb
 1473              		.thumb_func
 1474              		.fpu fpv4-sp-d16
 1476              	rotateCurrentPieceRight:
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 32


 1477              	.LVL166:
 1478              	.LFB753:
 242:Core/Src/board.c ****  
 243:Core/Src/board.c **** void rotateCurrentPieceRight(Board * board)
 244:Core/Src/board.c **** {
 1479              		.loc 1 244 1 is_stmt 1 view -0
 1480              		.cfi_startproc
 1481              		@ args = 0, pretend = 0, frame = 0
 1482              		@ frame_needed = 0, uses_anonymous_args = 0
 1483              		.loc 1 244 1 is_stmt 0 view .LVU294
 1484 0000 38B5     		push	{r3, r4, r5, lr}
 1485              	.LCFI29:
 1486              		.cfi_def_cfa_offset 16
 1487              		.cfi_offset 3, -16
 1488              		.cfi_offset 4, -12
 1489              		.cfi_offset 5, -8
 1490              		.cfi_offset 14, -4
 1491 0002 0546     		mov	r5, r0
 245:Core/Src/board.c ****     int o = getOrientation(board->currentPiece);
 1492              		.loc 1 245 5 is_stmt 1 view .LVU295
 1493              		.loc 1 245 13 is_stmt 0 view .LVU296
 1494 0004 0068     		ldr	r0, [r0]
 1495              	.LVL167:
 1496              		.loc 1 245 13 view .LVU297
 1497 0006 FFF7FEFF 		bl	getOrientation
 1498              	.LVL168:
 246:Core/Src/board.c ****  
 247:Core/Src/board.c ****     if(o < NB_ROTATIONS - 1)
 1499              		.loc 1 247 5 is_stmt 1 view .LVU298
 1500              		.loc 1 247 7 is_stmt 0 view .LVU299
 1501 000a 0228     		cmp	r0, #2
 1502 000c 06DC     		bgt	.L79
 248:Core/Src/board.c ****         o++;
 1503              		.loc 1 248 9 is_stmt 1 view .LVU300
 1504              		.loc 1 248 10 is_stmt 0 view .LVU301
 1505 000e 441C     		adds	r4, r0, #1
 1506              	.LVL169:
 1507              	.L77:
 249:Core/Src/board.c ****     else
 250:Core/Src/board.c ****         o = 0;
 251:Core/Src/board.c ****  
 252:Core/Src/board.c ****     if(isCurrentPieceRotable(board, o))
 1508              		.loc 1 252 5 is_stmt 1 view .LVU302
 1509              		.loc 1 252 8 is_stmt 0 view .LVU303
 1510 0010 2146     		mov	r1, r4
 1511 0012 2846     		mov	r0, r5
 1512 0014 FFF7FEFF 		bl	isCurrentPieceRotable
 1513              	.LVL170:
 1514              		.loc 1 252 7 view .LVU304
 1515 0018 10B9     		cbnz	r0, .L81
 1516              	.L76:
 253:Core/Src/board.c ****     {
 254:Core/Src/board.c ****         clearPiece(board, board->currentPiece);
 255:Core/Src/board.c ****         setOrientation(board->currentPiece, o);
 256:Core/Src/board.c ****  
 257:Core/Src/board.c ****         drawPiece(board, board->currentPiece);
 258:Core/Src/board.c ****     }
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 33


 259:Core/Src/board.c **** }
 1517              		.loc 1 259 1 view .LVU305
 1518 001a 38BD     		pop	{r3, r4, r5, pc}
 1519              	.LVL171:
 1520              	.L79:
 250:Core/Src/board.c ****  
 1521              		.loc 1 250 11 view .LVU306
 1522 001c 0024     		movs	r4, #0
 1523 001e F7E7     		b	.L77
 1524              	.LVL172:
 1525              	.L81:
 254:Core/Src/board.c ****         setOrientation(board->currentPiece, o);
 1526              		.loc 1 254 9 is_stmt 1 view .LVU307
 1527 0020 2968     		ldr	r1, [r5]
 1528 0022 2846     		mov	r0, r5
 1529 0024 FFF7FEFF 		bl	clearPiece
 1530              	.LVL173:
 255:Core/Src/board.c ****  
 1531              		.loc 1 255 9 view .LVU308
 1532 0028 2146     		mov	r1, r4
 1533 002a 2868     		ldr	r0, [r5]
 1534 002c FFF7FEFF 		bl	setOrientation
 1535              	.LVL174:
 257:Core/Src/board.c ****     }
 1536              		.loc 1 257 9 view .LVU309
 1537 0030 2968     		ldr	r1, [r5]
 1538 0032 2846     		mov	r0, r5
 1539 0034 FFF7FEFF 		bl	drawPiece
 1540              	.LVL175:
 1541              		.loc 1 259 1 is_stmt 0 view .LVU310
 1542 0038 EFE7     		b	.L76
 1543              		.cfi_endproc
 1544              	.LFE753:
 1546              		.section	.text.deleteLine,"ax",%progbits
 1547              		.align	1
 1548              		.global	deleteLine
 1549              		.syntax unified
 1550              		.thumb
 1551              		.thumb_func
 1552              		.fpu fpv4-sp-d16
 1554              	deleteLine:
 1555              	.LVL176:
 1556              	.LFB754:
 260:Core/Src/board.c ****  
 261:Core/Src/board.c **** void deleteLine(Board * board, int y)
 262:Core/Src/board.c **** {
 1557              		.loc 1 262 1 is_stmt 1 view -0
 1558              		.cfi_startproc
 1559              		@ args = 0, pretend = 0, frame = 0
 1560              		@ frame_needed = 0, uses_anonymous_args = 0
 1561              		.loc 1 262 1 is_stmt 0 view .LVU312
 1562 0000 38B5     		push	{r3, r4, r5, lr}
 1563              	.LCFI30:
 1564              		.cfi_def_cfa_offset 16
 1565              		.cfi_offset 3, -16
 1566              		.cfi_offset 4, -12
 1567              		.cfi_offset 5, -8
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 34


 1568              		.cfi_offset 14, -4
 1569 0002 0546     		mov	r5, r0
 1570 0004 0C46     		mov	r4, r1
 263:Core/Src/board.c ****     clearPiece(board, board->currentPiece);
 1571              		.loc 1 263 5 is_stmt 1 view .LVU313
 1572 0006 0168     		ldr	r1, [r0]
 1573              	.LVL177:
 1574              		.loc 1 263 5 is_stmt 0 view .LVU314
 1575 0008 FFF7FEFF 		bl	clearPiece
 1576              	.LVL178:
 264:Core/Src/board.c ****  
 265:Core/Src/board.c ****     for(int j = y; j > 0; --j)
 1577              		.loc 1 265 5 is_stmt 1 view .LVU315
 1578              	.LBB14:
 1579              		.loc 1 265 9 view .LVU316
 1580              		.loc 1 265 5 is_stmt 0 view .LVU317
 1581 000c 12E0     		b	.L83
 1582              	.LVL179:
 1583              	.L84:
 1584              	.LBB15:
 266:Core/Src/board.c ****     {
 267:Core/Src/board.c ****         for(int i = 0; i < BOARD_WIDTH; ++i)
 268:Core/Src/board.c ****             board->area[i][j] = board->area[i][j-1];
 1585              		.loc 1 268 13 is_stmt 1 discriminator 3 view .LVU318
 1586              		.loc 1 268 49 is_stmt 0 discriminator 3 view .LVU319
 1587 000e 631E     		subs	r3, r4, #1
 1588              		.loc 1 268 47 discriminator 3 view .LVU320
 1589 0010 02EB8201 		add	r1, r2, r2, lsl #2
 1590 0014 03EB8103 		add	r3, r3, r1, lsl #2
 1591 0018 05EB8303 		add	r3, r5, r3, lsl #2
 1592 001c 5968     		ldr	r1, [r3, #4]
 1593              		.loc 1 268 31 discriminator 3 view .LVU321
 1594 001e 02EB8203 		add	r3, r2, r2, lsl #2
 1595 0022 04EB8303 		add	r3, r4, r3, lsl #2
 1596 0026 05EB8303 		add	r3, r5, r3, lsl #2
 1597 002a 5960     		str	r1, [r3, #4]
 267:Core/Src/board.c ****             board->area[i][j] = board->area[i][j-1];
 1598              		.loc 1 267 41 is_stmt 1 discriminator 3 view .LVU322
 1599 002c 0132     		adds	r2, r2, #1
 1600              	.LVL180:
 1601              	.L85:
 267:Core/Src/board.c ****             board->area[i][j] = board->area[i][j-1];
 1602              		.loc 1 267 24 discriminator 1 view .LVU323
 267:Core/Src/board.c ****             board->area[i][j] = board->area[i][j-1];
 1603              		.loc 1 267 9 is_stmt 0 discriminator 1 view .LVU324
 1604 002e 092A     		cmp	r2, #9
 1605 0030 EDDD     		ble	.L84
 1606              	.LBE15:
 265:Core/Src/board.c ****     {
 1607              		.loc 1 265 27 is_stmt 1 discriminator 2 view .LVU325
 1608 0032 013C     		subs	r4, r4, #1
 1609              	.LVL181:
 1610              	.L83:
 265:Core/Src/board.c ****     {
 1611              		.loc 1 265 20 discriminator 1 view .LVU326
 265:Core/Src/board.c ****     {
 1612              		.loc 1 265 5 is_stmt 0 discriminator 1 view .LVU327
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 35


 1613 0034 002C     		cmp	r4, #0
 1614 0036 01DD     		ble	.L88
 1615              	.LBB16:
 267:Core/Src/board.c ****             board->area[i][j] = board->area[i][j-1];
 1616              		.loc 1 267 17 view .LVU328
 1617 0038 0022     		movs	r2, #0
 1618 003a F8E7     		b	.L85
 1619              	.L88:
 1620              	.LBE16:
 1621              	.LBE14:
 269:Core/Src/board.c ****     }
 270:Core/Src/board.c ****  
 271:Core/Src/board.c ****     drawPiece(board, board->currentPiece);
 1622              		.loc 1 271 5 is_stmt 1 view .LVU329
 1623 003c 2968     		ldr	r1, [r5]
 1624 003e 2846     		mov	r0, r5
 1625 0040 FFF7FEFF 		bl	drawPiece
 1626              	.LVL182:
 272:Core/Src/board.c **** }
 1627              		.loc 1 272 1 is_stmt 0 view .LVU330
 1628 0044 38BD     		pop	{r3, r4, r5, pc}
 1629              		.loc 1 272 1 view .LVU331
 1630              		.cfi_endproc
 1631              	.LFE754:
 1633              		.section	.text.deletePossibleLines,"ax",%progbits
 1634              		.align	1
 1635              		.global	deletePossibleLines
 1636              		.syntax unified
 1637              		.thumb
 1638              		.thumb_func
 1639              		.fpu fpv4-sp-d16
 1641              	deletePossibleLines:
 1642              	.LVL183:
 1643              	.LFB755:
 273:Core/Src/board.c ****  
 274:Core/Src/board.c **** int deletePossibleLines(Board * board)
 275:Core/Src/board.c **** {
 1644              		.loc 1 275 1 is_stmt 1 view -0
 1645              		.cfi_startproc
 1646              		@ args = 0, pretend = 0, frame = 0
 1647              		@ frame_needed = 0, uses_anonymous_args = 0
 1648              		.loc 1 275 1 is_stmt 0 view .LVU333
 1649 0000 70B5     		push	{r4, r5, r6, lr}
 1650              	.LCFI31:
 1651              		.cfi_def_cfa_offset 16
 1652              		.cfi_offset 4, -16
 1653              		.cfi_offset 5, -12
 1654              		.cfi_offset 6, -8
 1655              		.cfi_offset 14, -4
 1656 0002 0546     		mov	r5, r0
 276:Core/Src/board.c ****     int nbLinesDeleted = 0;
 1657              		.loc 1 276 5 is_stmt 1 view .LVU334
 1658              	.LVL184:
 277:Core/Src/board.c ****  
 278:Core/Src/board.c ****     for(int j = 0; j < BOARD_HEIGHT; ++j)
 1659              		.loc 1 278 5 view .LVU335
 1660              	.LBB17:
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 36


 1661              		.loc 1 278 9 view .LVU336
 1662              		.loc 1 278 13 is_stmt 0 view .LVU337
 1663 0004 0024     		movs	r4, #0
 1664              	.LBE17:
 276:Core/Src/board.c ****     int nbLinesDeleted = 0;
 1665              		.loc 1 276 9 view .LVU338
 1666 0006 2646     		mov	r6, r4
 1667              	.LBB20:
 1668              		.loc 1 278 5 view .LVU339
 1669 0008 0EE0     		b	.L90
 1670              	.LVL185:
 1671              	.L92:
 1672              	.LBB18:
 279:Core/Src/board.c ****     {
 280:Core/Src/board.c ****         int i = 0;
 281:Core/Src/board.c ****  
 282:Core/Src/board.c ****         for(; i < BOARD_WIDTH && board->area[i][j] != FREE; ++i);
 1673              		.loc 1 282 65 is_stmt 1 discriminator 3 view .LVU340
 1674              		.loc 1 282 61 discriminator 3 view .LVU341
 1675 000a 0132     		adds	r2, r2, #1
 1676              	.LVL186:
 1677              	.L94:
 1678              		.loc 1 282 15 discriminator 1 view .LVU342
 1679              		.loc 1 282 9 is_stmt 0 discriminator 1 view .LVU343
 1680 000c 092A     		cmp	r2, #9
 1681 000e 08DC     		bgt	.L91
 1682              		.loc 1 282 48 discriminator 2 view .LVU344
 1683 0010 02EB8203 		add	r3, r2, r2, lsl #2
 1684 0014 04EB8303 		add	r3, r4, r3, lsl #2
 1685 0018 05EB8303 		add	r3, r5, r3, lsl #2
 1686 001c 5B68     		ldr	r3, [r3, #4]
 1687              		.loc 1 282 31 discriminator 2 view .LVU345
 1688 001e 002B     		cmp	r3, #0
 1689 0020 F3D1     		bne	.L92
 1690              	.L91:
 283:Core/Src/board.c ****  
 284:Core/Src/board.c ****         if(i == BOARD_WIDTH)
 1691              		.loc 1 284 9 is_stmt 1 view .LVU346
 1692              		.loc 1 284 11 is_stmt 0 view .LVU347
 1693 0022 0A2A     		cmp	r2, #10
 1694 0024 04D0     		beq	.L97
 1695              	.LVL187:
 1696              	.L93:
 1697              		.loc 1 284 11 view .LVU348
 1698              	.LBE18:
 278:Core/Src/board.c ****     {
 1699              		.loc 1 278 38 is_stmt 1 discriminator 2 view .LVU349
 1700 0026 0134     		adds	r4, r4, #1
 1701              	.LVL188:
 1702              	.L90:
 278:Core/Src/board.c ****     {
 1703              		.loc 1 278 20 discriminator 1 view .LVU350
 278:Core/Src/board.c ****     {
 1704              		.loc 1 278 5 is_stmt 0 discriminator 1 view .LVU351
 1705 0028 132C     		cmp	r4, #19
 1706 002a 07DC     		bgt	.L98
 1707              	.LBB19:
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 37


 280:Core/Src/board.c ****  
 1708              		.loc 1 280 13 view .LVU352
 1709 002c 0022     		movs	r2, #0
 1710 002e EDE7     		b	.L94
 1711              	.LVL189:
 1712              	.L97:
 285:Core/Src/board.c ****         {
 286:Core/Src/board.c ****             nbLinesDeleted++;
 1713              		.loc 1 286 13 is_stmt 1 view .LVU353
 1714              		.loc 1 286 27 is_stmt 0 view .LVU354
 1715 0030 0136     		adds	r6, r6, #1
 1716              	.LVL190:
 287:Core/Src/board.c ****             deleteLine(board, j);
 1717              		.loc 1 287 13 is_stmt 1 view .LVU355
 1718 0032 2146     		mov	r1, r4
 1719 0034 2846     		mov	r0, r5
 1720 0036 FFF7FEFF 		bl	deleteLine
 1721              	.LVL191:
 1722              		.loc 1 287 13 is_stmt 0 view .LVU356
 1723 003a F4E7     		b	.L93
 1724              	.L98:
 1725              		.loc 1 287 13 view .LVU357
 1726              	.LBE19:
 1727              	.LBE20:
 288:Core/Src/board.c ****         }
 289:Core/Src/board.c ****     }
 290:Core/Src/board.c ****  
 291:Core/Src/board.c ****     return nbLinesDeleted;
 1728              		.loc 1 291 5 is_stmt 1 view .LVU358
 292:Core/Src/board.c **** }
 1729              		.loc 1 292 1 is_stmt 0 view .LVU359
 1730 003c 3046     		mov	r0, r6
 1731 003e 70BD     		pop	{r4, r5, r6, pc}
 1732              		.loc 1 292 1 view .LVU360
 1733              		.cfi_endproc
 1734              	.LFE755:
 1736              		.section	.text.dropCurrentPiece,"ax",%progbits
 1737              		.align	1
 1738              		.global	dropCurrentPiece
 1739              		.syntax unified
 1740              		.thumb
 1741              		.thumb_func
 1742              		.fpu fpv4-sp-d16
 1744              	dropCurrentPiece:
 1745              	.LVL192:
 1746              	.LFB756:
 293:Core/Src/board.c ****  
 294:Core/Src/board.c **** void dropCurrentPiece(Board * board)
 295:Core/Src/board.c **** {
 1747              		.loc 1 295 1 is_stmt 1 view -0
 1748              		.cfi_startproc
 1749              		@ args = 0, pretend = 0, frame = 0
 1750              		@ frame_needed = 0, uses_anonymous_args = 0
 1751              		.loc 1 295 1 is_stmt 0 view .LVU362
 1752 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1753              	.LCFI32:
 1754              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 38


 1755              		.cfi_offset 3, -24
 1756              		.cfi_offset 4, -20
 1757              		.cfi_offset 5, -16
 1758              		.cfi_offset 6, -12
 1759              		.cfi_offset 7, -8
 1760              		.cfi_offset 14, -4
 1761 0002 0546     		mov	r5, r0
 296:Core/Src/board.c ****     int x = getPosX(board->currentPiece);
 1762              		.loc 1 296 5 is_stmt 1 view .LVU363
 1763              		.loc 1 296 13 is_stmt 0 view .LVU364
 1764 0004 0068     		ldr	r0, [r0]
 1765              	.LVL193:
 1766              		.loc 1 296 13 view .LVU365
 1767 0006 FFF7FEFF 		bl	getPosX
 1768              	.LVL194:
 1769 000a 0446     		mov	r4, r0
 1770              	.LVL195:
 297:Core/Src/board.c ****     int y = getPosY(board->currentPiece);
 1771              		.loc 1 297 5 is_stmt 1 view .LVU366
 1772              		.loc 1 297 13 is_stmt 0 view .LVU367
 1773 000c 2868     		ldr	r0, [r5]
 1774              	.LVL196:
 1775              		.loc 1 297 13 view .LVU368
 1776 000e FFF7FEFF 		bl	getPosY
 1777              	.LVL197:
 1778 0012 0746     		mov	r7, r0
 1779              	.LVL198:
 298:Core/Src/board.c ****  
 299:Core/Src/board.c ****     while(isCurrentPieceMovable(board, x++, y))
 1780              		.loc 1 299 5 is_stmt 1 view .LVU369
 1781              		.loc 1 299 10 is_stmt 0 view .LVU370
 1782 0014 03E0     		b	.L100
 1783              	.LVL199:
 1784              	.L101:
 300:Core/Src/board.c ****         moveCurrentPieceDown(board);
 1785              		.loc 1 300 9 is_stmt 1 view .LVU371
 1786 0016 2846     		mov	r0, r5
 1787 0018 FFF7FEFF 		bl	moveCurrentPieceDown
 1788              	.LVL200:
 299:Core/Src/board.c ****         moveCurrentPieceDown(board);
 1789              		.loc 1 299 11 is_stmt 0 view .LVU372
 1790 001c 3446     		mov	r4, r6
 1791              	.LVL201:
 1792              	.L100:
 299:Core/Src/board.c ****         moveCurrentPieceDown(board);
 1793              		.loc 1 299 10 is_stmt 1 view .LVU373
 299:Core/Src/board.c ****         moveCurrentPieceDown(board);
 1794              		.loc 1 299 11 is_stmt 0 view .LVU374
 1795 001e 661C     		adds	r6, r4, #1
 1796              	.LVL202:
 299:Core/Src/board.c ****         moveCurrentPieceDown(board);
 1797              		.loc 1 299 11 view .LVU375
 1798 0020 3A46     		mov	r2, r7
 1799 0022 2146     		mov	r1, r4
 1800 0024 2846     		mov	r0, r5
 1801 0026 FFF7FEFF 		bl	isCurrentPieceMovable
 1802              	.LVL203:
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 39


 299:Core/Src/board.c ****         moveCurrentPieceDown(board);
 1803              		.loc 1 299 10 view .LVU376
 1804 002a 0028     		cmp	r0, #0
 1805 002c F3D1     		bne	.L101
 301:Core/Src/board.c **** }
 1806              		.loc 1 301 1 view .LVU377
 1807 002e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1808              		.loc 1 301 1 view .LVU378
 1809              		.cfi_endproc
 1810              	.LFE756:
 1812              		.section	.text.isCurrentPieceFallen,"ax",%progbits
 1813              		.align	1
 1814              		.global	isCurrentPieceFallen
 1815              		.syntax unified
 1816              		.thumb
 1817              		.thumb_func
 1818              		.fpu fpv4-sp-d16
 1820              	isCurrentPieceFallen:
 1821              	.LVL204:
 1822              	.LFB757:
 302:Core/Src/board.c ****  
 303:Core/Src/board.c **** bool isCurrentPieceFallen(Board * board)
 304:Core/Src/board.c **** {
 1823              		.loc 1 304 1 is_stmt 1 view -0
 1824              		.cfi_startproc
 1825              		@ args = 0, pretend = 0, frame = 0
 1826              		@ frame_needed = 0, uses_anonymous_args = 0
 1827              		.loc 1 304 1 is_stmt 0 view .LVU380
 1828 0000 38B5     		push	{r3, r4, r5, lr}
 1829              	.LCFI33:
 1830              		.cfi_def_cfa_offset 16
 1831              		.cfi_offset 3, -16
 1832              		.cfi_offset 4, -12
 1833              		.cfi_offset 5, -8
 1834              		.cfi_offset 14, -4
 1835 0002 0446     		mov	r4, r0
 305:Core/Src/board.c ****     int x = getPosX(board->currentPiece);
 1836              		.loc 1 305 5 is_stmt 1 view .LVU381
 1837              		.loc 1 305 13 is_stmt 0 view .LVU382
 1838 0004 0068     		ldr	r0, [r0]
 1839              	.LVL205:
 1840              		.loc 1 305 13 view .LVU383
 1841 0006 FFF7FEFF 		bl	getPosX
 1842              	.LVL206:
 1843 000a 0546     		mov	r5, r0
 1844              	.LVL207:
 306:Core/Src/board.c ****     int y = getPosY(board->currentPiece);
 1845              		.loc 1 306 5 is_stmt 1 view .LVU384
 1846              		.loc 1 306 13 is_stmt 0 view .LVU385
 1847 000c 2068     		ldr	r0, [r4]
 1848              	.LVL208:
 1849              		.loc 1 306 13 view .LVU386
 1850 000e FFF7FEFF 		bl	getPosY
 1851              	.LVL209:
 1852 0012 0246     		mov	r2, r0
 1853              	.LVL210:
 307:Core/Src/board.c ****  
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 40


 308:Core/Src/board.c ****     if(isCurrentPieceMovable(board, x + 1, y))
 1854              		.loc 1 308 5 is_stmt 1 view .LVU387
 1855              		.loc 1 308 8 is_stmt 0 view .LVU388
 1856 0014 691C     		adds	r1, r5, #1
 1857 0016 2046     		mov	r0, r4
 1858              	.LVL211:
 1859              		.loc 1 308 8 view .LVU389
 1860 0018 FFF7FEFF 		bl	isCurrentPieceMovable
 1861              	.LVL212:
 1862              		.loc 1 308 7 view .LVU390
 1863 001c 08B9     		cbnz	r0, .L105
 309:Core/Src/board.c ****         return false;
 310:Core/Src/board.c ****  
 311:Core/Src/board.c ****     return true;
 1864              		.loc 1 311 12 view .LVU391
 1865 001e 0120     		movs	r0, #1
 1866              	.L103:
 312:Core/Src/board.c **** }
 1867              		.loc 1 312 1 view .LVU392
 1868 0020 38BD     		pop	{r3, r4, r5, pc}
 1869              	.LVL213:
 1870              	.L105:
 309:Core/Src/board.c ****         return false;
 1871              		.loc 1 309 16 view .LVU393
 1872 0022 0020     		movs	r0, #0
 1873 0024 FCE7     		b	.L103
 1874              		.cfi_endproc
 1875              	.LFE757:
 1877              		.section	.text.moveCurrentPieceDownBot,"ax",%progbits
 1878              		.align	1
 1879              		.global	moveCurrentPieceDownBot
 1880              		.syntax unified
 1881              		.thumb
 1882              		.thumb_func
 1883              		.fpu fpv4-sp-d16
 1885              	moveCurrentPieceDownBot:
 1886              	.LVL214:
 1887              	.LFB749:
 188:Core/Src/board.c ****     if(isCurrentPieceFallen(board)){
 1888              		.loc 1 188 1 is_stmt 1 view -0
 1889              		.cfi_startproc
 1890              		@ args = 0, pretend = 0, frame = 0
 1891              		@ frame_needed = 0, uses_anonymous_args = 0
 188:Core/Src/board.c ****     if(isCurrentPieceFallen(board)){
 1892              		.loc 1 188 1 is_stmt 0 view .LVU395
 1893 0000 10B5     		push	{r4, lr}
 1894              	.LCFI34:
 1895              		.cfi_def_cfa_offset 8
 1896              		.cfi_offset 4, -8
 1897              		.cfi_offset 14, -4
 1898 0002 0446     		mov	r4, r0
 189:Core/Src/board.c ****         return 0;
 1899              		.loc 1 189 5 is_stmt 1 view .LVU396
 189:Core/Src/board.c ****         return 0;
 1900              		.loc 1 189 8 is_stmt 0 view .LVU397
 1901 0004 FFF7FEFF 		bl	isCurrentPieceFallen
 1902              	.LVL215:
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 41


 189:Core/Src/board.c ****         return 0;
 1903              		.loc 1 189 7 view .LVU398
 1904 0008 08B1     		cbz	r0, .L111
 190:Core/Src/board.c ****     }
 1905              		.loc 1 190 16 view .LVU399
 1906 000a 0020     		movs	r0, #0
 1907              	.L107:
 195:Core/Src/board.c ****  
 1908              		.loc 1 195 1 view .LVU400
 1909 000c 10BD     		pop	{r4, pc}
 1910              	.LVL216:
 1911              	.L111:
 193:Core/Src/board.c ****     return 1;
 1912              		.loc 1 193 5 is_stmt 1 view .LVU401
 1913 000e 2046     		mov	r0, r4
 1914 0010 FFF7FEFF 		bl	moveCurrentPieceDown
 1915              	.LVL217:
 194:Core/Src/board.c **** }
 1916              		.loc 1 194 5 view .LVU402
 194:Core/Src/board.c **** }
 1917              		.loc 1 194 12 is_stmt 0 view .LVU403
 1918 0014 0120     		movs	r0, #1
 1919 0016 F9E7     		b	.L107
 1920              		.cfi_endproc
 1921              	.LFE749:
 1923              		.section	.text.isGameOver,"ax",%progbits
 1924              		.align	1
 1925              		.global	isGameOver
 1926              		.syntax unified
 1927              		.thumb
 1928              		.thumb_func
 1929              		.fpu fpv4-sp-d16
 1931              	isGameOver:
 1932              	.LVL218:
 1933              	.LFB758:
 313:Core/Src/board.c ****  
 314:Core/Src/board.c **** int isGameOver(Board * board)
 315:Core/Src/board.c **** {
 1934              		.loc 1 315 1 is_stmt 1 view -0
 1935              		.cfi_startproc
 1936              		@ args = 0, pretend = 0, frame = 0
 1937              		@ frame_needed = 0, uses_anonymous_args = 0
 1938              		@ link register save eliminated.
 316:Core/Src/board.c ****     for(int i = 0; i < BOARD_WIDTH; ++i)
 1939              		.loc 1 316 5 view .LVU405
 1940              	.LBB21:
 1941              		.loc 1 316 9 view .LVU406
 1942              		.loc 1 316 13 is_stmt 0 view .LVU407
 1943 0000 0023     		movs	r3, #0
 1944              	.LVL219:
 1945              	.L113:
 1946              		.loc 1 316 20 is_stmt 1 discriminator 1 view .LVU408
 1947              		.loc 1 316 5 is_stmt 0 discriminator 1 view .LVU409
 1948 0002 092B     		cmp	r3, #9
 1949 0004 07DC     		bgt	.L117
 317:Core/Src/board.c ****     {
 318:Core/Src/board.c ****         if(board->area[i][0] != FREE)
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 42


 1950              		.loc 1 318 9 is_stmt 1 view .LVU410
 1951              		.loc 1 318 26 is_stmt 0 view .LVU411
 1952 0006 03EB8302 		add	r2, r3, r3, lsl #2
 1953 000a 00EB0212 		add	r2, r0, r2, lsl #4
 1954 000e 5268     		ldr	r2, [r2, #4]
 1955              		.loc 1 318 11 view .LVU412
 1956 0010 1AB9     		cbnz	r2, .L116
 316:Core/Src/board.c ****     for(int i = 0; i < BOARD_WIDTH; ++i)
 1957              		.loc 1 316 37 is_stmt 1 discriminator 2 view .LVU413
 1958 0012 0133     		adds	r3, r3, #1
 1959              	.LVL220:
 316:Core/Src/board.c ****     for(int i = 0; i < BOARD_WIDTH; ++i)
 1960              		.loc 1 316 37 is_stmt 0 discriminator 2 view .LVU414
 1961 0014 F5E7     		b	.L113
 1962              	.L117:
 316:Core/Src/board.c ****     for(int i = 0; i < BOARD_WIDTH; ++i)
 1963              		.loc 1 316 37 discriminator 2 view .LVU415
 1964              	.LBE21:
 319:Core/Src/board.c ****             return 1;
 320:Core/Src/board.c ****     }
 321:Core/Src/board.c ****  
 322:Core/Src/board.c ****     return 0;
 1965              		.loc 1 322 12 view .LVU416
 1966 0016 0020     		movs	r0, #0
 1967              	.LVL221:
 1968              	.LBB22:
 1969              		.loc 1 322 12 view .LVU417
 1970 0018 7047     		bx	lr
 1971              	.LVL222:
 1972              	.L116:
 319:Core/Src/board.c ****             return 1;
 1973              		.loc 1 319 20 view .LVU418
 1974 001a 0120     		movs	r0, #1
 1975              	.LVL223:
 319:Core/Src/board.c ****             return 1;
 1976              		.loc 1 319 20 view .LVU419
 1977              	.LBE22:
 323:Core/Src/board.c **** }
 1978              		.loc 1 323 1 view .LVU420
 1979 001c 7047     		bx	lr
 1980              		.cfi_endproc
 1981              	.LFE758:
 1983              		.section	.text.print,"ax",%progbits
 1984              		.align	1
 1985              		.global	print
 1986              		.syntax unified
 1987              		.thumb
 1988              		.thumb_func
 1989              		.fpu fpv4-sp-d16
 1991              	print:
 1992              	.LVL224:
 1993              	.LFB759:
 324:Core/Src/board.c **** 
 325:Core/Src/board.c **** void print(Board * board)
 326:Core/Src/board.c **** {   
 1994              		.loc 1 326 1 is_stmt 1 view -0
 1995              		.cfi_startproc
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 43


 1996              		@ args = 0, pretend = 0, frame = 0
 1997              		@ frame_needed = 0, uses_anonymous_args = 0
 1998              		.loc 1 326 1 is_stmt 0 view .LVU422
 1999 0000 70B5     		push	{r4, r5, r6, lr}
 2000              	.LCFI35:
 2001              		.cfi_def_cfa_offset 16
 2002              		.cfi_offset 4, -16
 2003              		.cfi_offset 5, -12
 2004              		.cfi_offset 6, -8
 2005              		.cfi_offset 14, -4
 2006 0002 82B0     		sub	sp, sp, #8
 2007              	.LCFI36:
 2008              		.cfi_def_cfa_offset 24
 2009 0004 0646     		mov	r6, r0
 327:Core/Src/board.c ****     static int previousArea[BOARD_WIDTH][BOARD_HEIGHT] = {{FREE}};
 2010              		.loc 1 327 5 is_stmt 1 view .LVU423
 328:Core/Src/board.c ****     uint16_t color;
 2011              		.loc 1 328 5 view .LVU424
 329:Core/Src/board.c ****     for(int j = 0; j < BOARD_HEIGHT; ++j)
 2012              		.loc 1 329 5 view .LVU425
 2013              	.LBB23:
 2014              		.loc 1 329 9 view .LVU426
 2015              	.LVL225:
 2016              		.loc 1 329 13 is_stmt 0 view .LVU427
 2017 0006 0025     		movs	r5, #0
 2018              		.loc 1 329 5 view .LVU428
 2019 0008 5EE0     		b	.L119
 2020              	.LVL226:
 2021              	.L130:
 2022              	.LBB24:
 330:Core/Src/board.c ****     {
 331:Core/Src/board.c ****         for(int i = 0; i < BOARD_WIDTH; ++i)
 332:Core/Src/board.c ****         {
 333:Core/Src/board.c ****             if( board->area[i][j] != previousArea[i][j]){
 2023              		.loc 1 333 15 view .LVU429
 2024 000a 0022     		movs	r2, #0
 2025              	.L129:
 2026              	.LVL227:
 334:Core/Src/board.c ****                 switch(board->area[i][j]){
 335:Core/Src/board.c ****                     case FREE:
 336:Core/Src/board.c ****                         color = BLACK;
 337:Core/Src/board.c ****                         break;
 338:Core/Src/board.c ****                     case CYA:
 339:Core/Src/board.c ****                         color = CYAN;
 340:Core/Src/board.c ****                         break;
 341:Core/Src/board.c ****                     case ORANG:
 342:Core/Src/board.c ****                         color = ORANGE;
 343:Core/Src/board.c ****                         break;
 344:Core/Src/board.c ****                     case RE:
 345:Core/Src/board.c ****                         color = RED;
 346:Core/Src/board.c ****                         break;
 347:Core/Src/board.c ****                     case PURPL:
 348:Core/Src/board.c ****                         color = PURPLE;
 349:Core/Src/board.c ****                         break;
 350:Core/Src/board.c ****                     case GREE:
 351:Core/Src/board.c ****                         color = GREEN;
 352:Core/Src/board.c ****                         break;
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 44


 353:Core/Src/board.c ****                     case YELLO:
 354:Core/Src/board.c ****                         color = YELLOW;
 355:Core/Src/board.c ****                         break;
 356:Core/Src/board.c ****                     case BLU:
 357:Core/Src/board.c ****                         color = BLUE;
 358:Core/Src/board.c ****                         break;
 359:Core/Src/board.c ****                     default:
 360:Core/Src/board.c ****                         color = WHITE;
 361:Core/Src/board.c ****                         break;
 362:Core/Src/board.c ****                 }
 363:Core/Src/board.c ****                 fillRect(TFTWIDTH -1 -DECALAGE_HAUT -(j*TAILLE_CASE), i*TAILLE_CASE + DECALAGE_GAUC
 2027              		.loc 1 363 17 is_stmt 1 view .LVU430
 2028              		.loc 1 363 53 is_stmt 0 view .LVU431
 2029 000c 314B     		ldr	r3, .L138
 2030 000e 1888     		ldrh	r0, [r3]
 2031 0010 C5EB0533 		rsb	r3, r5, r5, lsl #12
 2032 0014 05EB8303 		add	r3, r5, r3, lsl #2
 2033 0018 05EB8303 		add	r3, r5, r3, lsl #2
 2034 001c 13FA80F0 		uxtah	r0, r3, r0
 2035 0020 1538     		subs	r0, r0, #21
 2036              		.loc 1 363 85 view .LVU432
 2037 0022 04EB8401 		add	r1, r4, r4, lsl #2
 2038 0026 04EB4101 		add	r1, r4, r1, lsl #1
 2039 002a 1431     		adds	r1, r1, #20
 2040              		.loc 1 363 17 view .LVU433
 2041 002c 0092     		str	r2, [sp]
 2042 002e 0B23     		movs	r3, #11
 2043 0030 1A46     		mov	r2, r3
 2044              	.LVL228:
 2045              		.loc 1 363 17 view .LVU434
 2046 0032 09B2     		sxth	r1, r1
 2047 0034 00B2     		sxth	r0, r0
 2048 0036 FFF7FEFF 		bl	fillRect
 2049              	.LVL229:
 2050              	.L120:
 364:Core/Src/board.c ****             }
 365:Core/Src/board.c ****             previousArea[i][j] = board->area[i][j];
 2051              		.loc 1 365 13 is_stmt 1 discriminator 2 view .LVU435
 2052              		.loc 1 365 48 is_stmt 0 discriminator 2 view .LVU436
 2053 003a 04EB8403 		add	r3, r4, r4, lsl #2
 2054 003e 05EB8303 		add	r3, r5, r3, lsl #2
 2055 0042 06EB8302 		add	r2, r6, r3, lsl #2
 2056 0046 5168     		ldr	r1, [r2, #4]
 2057              		.loc 1 365 32 discriminator 2 view .LVU437
 2058 0048 234A     		ldr	r2, .L138+4
 2059 004a 42F82310 		str	r1, [r2, r3, lsl #2]
 331:Core/Src/board.c ****         {
 2060              		.loc 1 331 41 is_stmt 1 discriminator 2 view .LVU438
 2061 004e 0134     		adds	r4, r4, #1
 2062              	.LVL230:
 2063              	.L132:
 331:Core/Src/board.c ****         {
 2064              		.loc 1 331 24 discriminator 1 view .LVU439
 331:Core/Src/board.c ****         {
 2065              		.loc 1 331 9 is_stmt 0 discriminator 1 view .LVU440
 2066 0050 092C     		cmp	r4, #9
 2067 0052 38DC     		bgt	.L136
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 45


 333:Core/Src/board.c ****                 switch(board->area[i][j]){
 2068              		.loc 1 333 13 is_stmt 1 view .LVU441
 333:Core/Src/board.c ****                 switch(board->area[i][j]){
 2069              		.loc 1 333 31 is_stmt 0 view .LVU442
 2070 0054 04EB8403 		add	r3, r4, r4, lsl #2
 2071 0058 05EB8303 		add	r3, r5, r3, lsl #2
 2072 005c 06EB8302 		add	r2, r6, r3, lsl #2
 2073 0060 5268     		ldr	r2, [r2, #4]
 333:Core/Src/board.c ****                 switch(board->area[i][j]){
 2074              		.loc 1 333 53 view .LVU443
 2075 0062 1D49     		ldr	r1, .L138+4
 2076 0064 51F82330 		ldr	r3, [r1, r3, lsl #2]
 333:Core/Src/board.c ****                 switch(board->area[i][j]){
 2077              		.loc 1 333 15 view .LVU444
 2078 0068 9A42     		cmp	r2, r3
 2079 006a E6D0     		beq	.L120
 334:Core/Src/board.c ****                     case FREE:
 2080              		.loc 1 334 17 is_stmt 1 view .LVU445
 2081 006c 072A     		cmp	r2, #7
 2082 006e 24D8     		bhi	.L121
 2083 0070 01A3     		adr	r3, .L123
 2084 0072 53F822F0 		ldr	pc, [r3, r2, lsl #2]
 2085 0076 00BF     		.p2align 2
 2086              	.L123:
 2087 0078 0B000000 		.word	.L130+1
 2088 007c C1000000 		.word	.L133+1
 2089 0080 B7000000 		.word	.L128+1
 2090 0084 99000000 		.word	.L127+1
 2091 0088 B1000000 		.word	.L126+1
 2092 008c AB000000 		.word	.L125+1
 2093 0090 A5000000 		.word	.L124+1
 2094 0094 9F000000 		.word	.L122+1
 2095              		.p2align 1
 2096              	.L127:
 342:Core/Src/board.c ****                         break;
 2097              		.loc 1 342 25 view .LVU446
 2098              	.LVL231:
 343:Core/Src/board.c ****                     case RE:
 2099              		.loc 1 343 25 view .LVU447
 342:Core/Src/board.c ****                         break;
 2100              		.loc 1 342 31 is_stmt 0 view .LVU448
 2101 0098 4FF62052 		movw	r2, #64800
 343:Core/Src/board.c ****                     case RE:
 2102              		.loc 1 343 25 view .LVU449
 2103 009c B6E7     		b	.L129
 2104              	.LVL232:
 2105              	.L122:
 345:Core/Src/board.c ****                         break;
 2106              		.loc 1 345 25 is_stmt 1 view .LVU450
 346:Core/Src/board.c ****                     case PURPL:
 2107              		.loc 1 346 25 view .LVU451
 345:Core/Src/board.c ****                         break;
 2108              		.loc 1 345 31 is_stmt 0 view .LVU452
 2109 009e 4FF47842 		mov	r2, #63488
 346:Core/Src/board.c ****                     case PURPL:
 2110              		.loc 1 346 25 view .LVU453
 2111 00a2 B3E7     		b	.L129
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 46


 2112              	.LVL233:
 2113              	.L124:
 348:Core/Src/board.c ****                         break;
 2114              		.loc 1 348 25 is_stmt 1 view .LVU454
 349:Core/Src/board.c ****                     case GREE:
 2115              		.loc 1 349 25 view .LVU455
 348:Core/Src/board.c ****                         break;
 2116              		.loc 1 348 31 is_stmt 0 view .LVU456
 2117 00a4 47F60F02 		movw	r2, #30735
 349:Core/Src/board.c ****                     case GREE:
 2118              		.loc 1 349 25 view .LVU457
 2119 00a8 B0E7     		b	.L129
 2120              	.LVL234:
 2121              	.L125:
 351:Core/Src/board.c ****                         break;
 2122              		.loc 1 351 25 is_stmt 1 view .LVU458
 352:Core/Src/board.c ****                     case YELLO:
 2123              		.loc 1 352 25 view .LVU459
 351:Core/Src/board.c ****                         break;
 2124              		.loc 1 351 31 is_stmt 0 view .LVU460
 2125 00aa 4FF4FC62 		mov	r2, #2016
 352:Core/Src/board.c ****                     case YELLO:
 2126              		.loc 1 352 25 view .LVU461
 2127 00ae ADE7     		b	.L129
 2128              	.LVL235:
 2129              	.L126:
 354:Core/Src/board.c ****                         break;
 2130              		.loc 1 354 25 is_stmt 1 view .LVU462
 355:Core/Src/board.c ****                     case BLU:
 2131              		.loc 1 355 25 view .LVU463
 354:Core/Src/board.c ****                         break;
 2132              		.loc 1 354 31 is_stmt 0 view .LVU464
 2133 00b0 4FF6E072 		movw	r2, #65504
 355:Core/Src/board.c ****                     case BLU:
 2134              		.loc 1 355 25 view .LVU465
 2135 00b4 AAE7     		b	.L129
 2136              	.LVL236:
 2137              	.L128:
 357:Core/Src/board.c ****                         break;
 2138              		.loc 1 357 25 is_stmt 1 view .LVU466
 358:Core/Src/board.c ****                     default:
 2139              		.loc 1 358 25 view .LVU467
 357:Core/Src/board.c ****                         break;
 2140              		.loc 1 357 31 is_stmt 0 view .LVU468
 2141 00b6 1F22     		movs	r2, #31
 358:Core/Src/board.c ****                     default:
 2142              		.loc 1 358 25 view .LVU469
 2143 00b8 A8E7     		b	.L129
 2144              	.LVL237:
 2145              	.L121:
 360:Core/Src/board.c ****                         break;
 2146              		.loc 1 360 25 is_stmt 1 view .LVU470
 361:Core/Src/board.c ****                 }
 2147              		.loc 1 361 25 view .LVU471
 360:Core/Src/board.c ****                         break;
 2148              		.loc 1 360 31 is_stmt 0 view .LVU472
 2149 00ba 4FF6FF72 		movw	r2, #65535
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 47


 361:Core/Src/board.c ****                 }
 2150              		.loc 1 361 25 view .LVU473
 2151 00be A5E7     		b	.L129
 2152              	.LVL238:
 2153              	.L133:
 339:Core/Src/board.c ****                         break;
 2154              		.loc 1 339 31 view .LVU474
 2155 00c0 40F2FF72 		movw	r2, #2047
 2156 00c4 A2E7     		b	.L129
 2157              	.L136:
 339:Core/Src/board.c ****                         break;
 2158              		.loc 1 339 31 view .LVU475
 2159              	.LBE24:
 329:Core/Src/board.c ****     {
 2160              		.loc 1 329 38 is_stmt 1 discriminator 2 view .LVU476
 2161 00c6 0135     		adds	r5, r5, #1
 2162              	.LVL239:
 2163              	.L119:
 329:Core/Src/board.c ****     {
 2164              		.loc 1 329 20 discriminator 1 view .LVU477
 329:Core/Src/board.c ****     {
 2165              		.loc 1 329 5 is_stmt 0 discriminator 1 view .LVU478
 2166 00c8 132D     		cmp	r5, #19
 2167 00ca 01DC     		bgt	.L137
 2168              	.LBB25:
 331:Core/Src/board.c ****         {
 2169              		.loc 1 331 17 view .LVU479
 2170 00cc 0024     		movs	r4, #0
 2171 00ce BFE7     		b	.L132
 2172              	.L137:
 2173              	.LBE25:
 2174              	.LBE23:
 366:Core/Src/board.c ****         } 
 367:Core/Src/board.c ****     }
 368:Core/Src/board.c ****     
 369:Core/Src/board.c **** }
 2175              		.loc 1 369 1 view .LVU480
 2176 00d0 02B0     		add	sp, sp, #8
 2177              	.LCFI37:
 2178              		.cfi_def_cfa_offset 16
 2179              		@ sp needed
 2180 00d2 70BD     		pop	{r4, r5, r6, pc}
 2181              	.LVL240:
 2182              	.L139:
 2183              		.loc 1 369 1 view .LVU481
 2184              		.align	2
 2185              	.L138:
 2186 00d4 00000000 		.word	TFTWIDTH
 2187 00d8 00000000 		.word	.LANCHOR1
 2188              		.cfi_endproc
 2189              	.LFE759:
 2191              		.section	.text.printBorders,"ax",%progbits
 2192              		.align	1
 2193              		.global	printBorders
 2194              		.syntax unified
 2195              		.thumb
 2196              		.thumb_func
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 48


 2197              		.fpu fpv4-sp-d16
 2199              	printBorders:
 2200              	.LFB760:
 370:Core/Src/board.c **** 
 371:Core/Src/board.c **** void printBorders(){
 2201              		.loc 1 371 20 is_stmt 1 view -0
 2202              		.cfi_startproc
 2203              		@ args = 0, pretend = 0, frame = 0
 2204              		@ frame_needed = 0, uses_anonymous_args = 0
 2205 0000 70B5     		push	{r4, r5, r6, lr}
 2206              	.LCFI38:
 2207              		.cfi_def_cfa_offset 16
 2208              		.cfi_offset 4, -16
 2209              		.cfi_offset 5, -12
 2210              		.cfi_offset 6, -8
 2211              		.cfi_offset 14, -4
 2212 0002 82B0     		sub	sp, sp, #8
 2213              	.LCFI39:
 2214              		.cfi_def_cfa_offset 24
 372:Core/Src/board.c ****     fillRect(TFTWIDTH-DECALAGE_HAUT-((BOARD_HEIGHT-1)*TAILLE_CASE)-3,DECALAGE_GAUCHE-2,TAILLE_CASE*
 2215              		.loc 1 372 5 view .LVU483
 2216              		.loc 1 372 67 is_stmt 0 view .LVU484
 2217 0004 164D     		ldr	r5, .L142
 2218 0006 2888     		ldrh	r0, [r5]
 2219 0008 80B2     		uxth	r0, r0
 2220 000a E838     		subs	r0, r0, #232
 2221              		.loc 1 372 5 view .LVU485
 2222 000c 4FF6FF76 		movw	r6, #65535
 2223 0010 0096     		str	r6, [sp]
 2224 0012 7223     		movs	r3, #114
 2225 0014 E022     		movs	r2, #224
 2226 0016 1221     		movs	r1, #18
 2227 0018 00B2     		sxth	r0, r0
 2228 001a FFF7FEFF 		bl	fillRect
 2229              	.LVL241:
 373:Core/Src/board.c ****     fillRect(TFTWIDTH-DECALAGE_HAUT-((BOARD_HEIGHT-1)*TAILLE_CASE)-1,DECALAGE_GAUCHE,TAILLE_CASE*BO
 2230              		.loc 1 373 5 is_stmt 1 view .LVU486
 2231              		.loc 1 373 67 is_stmt 0 view .LVU487
 2232 001e 2888     		ldrh	r0, [r5]
 2233 0020 80B2     		uxth	r0, r0
 2234 0022 E638     		subs	r0, r0, #230
 2235              		.loc 1 373 5 view .LVU488
 2236 0024 0024     		movs	r4, #0
 2237 0026 0094     		str	r4, [sp]
 2238 0028 6E23     		movs	r3, #110
 2239 002a DC22     		movs	r2, #220
 2240 002c 1421     		movs	r1, #20
 2241 002e 00B2     		sxth	r0, r0
 2242 0030 FFF7FEFF 		bl	fillRect
 2243              	.LVL242:
 374:Core/Src/board.c **** 
 375:Core/Src/board.c ****     fillRect(TFTWIDTH - 80, BOARD_WIDTH*TAILLE_CASE  + DECALAGE_GAUCHE + 15, 72, 72,WHITE);
 2244              		.loc 1 375 5 is_stmt 1 view .LVU489
 2245              		.loc 1 375 23 is_stmt 0 view .LVU490
 2246 0034 2888     		ldrh	r0, [r5]
 2247 0036 80B2     		uxth	r0, r0
 2248 0038 5038     		subs	r0, r0, #80
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 49


 2249              		.loc 1 375 5 view .LVU491
 2250 003a 0096     		str	r6, [sp]
 2251 003c 4823     		movs	r3, #72
 2252 003e 1A46     		mov	r2, r3
 2253 0040 9121     		movs	r1, #145
 2254 0042 00B2     		sxth	r0, r0
 2255 0044 FFF7FEFF 		bl	fillRect
 2256              	.LVL243:
 376:Core/Src/board.c ****     fillRect(TFTWIDTH - 78, BOARD_WIDTH*TAILLE_CASE + DECALAGE_GAUCHE + 17 , 68, 68,BLACK);
 2257              		.loc 1 376 5 is_stmt 1 view .LVU492
 2258              		.loc 1 376 23 is_stmt 0 view .LVU493
 2259 0048 2888     		ldrh	r0, [r5]
 2260 004a 80B2     		uxth	r0, r0
 2261 004c 4E38     		subs	r0, r0, #78
 2262              		.loc 1 376 5 view .LVU494
 2263 004e 0094     		str	r4, [sp]
 2264 0050 4423     		movs	r3, #68
 2265 0052 1A46     		mov	r2, r3
 2266 0054 9321     		movs	r1, #147
 2267 0056 00B2     		sxth	r0, r0
 2268 0058 FFF7FEFF 		bl	fillRect
 2269              	.LVL244:
 377:Core/Src/board.c **** }
 2270              		.loc 1 377 1 view .LVU495
 2271 005c 02B0     		add	sp, sp, #8
 2272              	.LCFI40:
 2273              		.cfi_def_cfa_offset 16
 2274              		@ sp needed
 2275 005e 70BD     		pop	{r4, r5, r6, pc}
 2276              	.L143:
 2277              		.align	2
 2278              	.L142:
 2279 0060 00000000 		.word	TFTWIDTH
 2280              		.cfi_endproc
 2281              	.LFE760:
 2283              		.section	.text.printNextPiece,"ax",%progbits
 2284              		.align	1
 2285              		.global	printNextPiece
 2286              		.syntax unified
 2287              		.thumb
 2288              		.thumb_func
 2289              		.fpu fpv4-sp-d16
 2291              	printNextPiece:
 2292              	.LVL245:
 2293              	.LFB761:
 378:Core/Src/board.c **** 
 379:Core/Src/board.c **** void printNextPiece(int id){
 2294              		.loc 1 379 28 is_stmt 1 view -0
 2295              		.cfi_startproc
 2296              		@ args = 0, pretend = 0, frame = 0
 2297              		@ frame_needed = 0, uses_anonymous_args = 0
 2298              		.loc 1 379 28 is_stmt 0 view .LVU497
 2299 0000 30B5     		push	{r4, r5, lr}
 2300              	.LCFI41:
 2301              		.cfi_def_cfa_offset 12
 2302              		.cfi_offset 4, -12
 2303              		.cfi_offset 5, -8
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 50


 2304              		.cfi_offset 14, -4
 2305 0002 83B0     		sub	sp, sp, #12
 2306              	.LCFI42:
 2307              		.cfi_def_cfa_offset 24
 2308 0004 0446     		mov	r4, r0
 380:Core/Src/board.c ****     fillRect(TFTWIDTH - 78, BOARD_WIDTH*TAILLE_CASE + DECALAGE_GAUCHE + 17 , 68, 68,BLACK);
 2309              		.loc 1 380 5 is_stmt 1 view .LVU498
 2310              		.loc 1 380 23 is_stmt 0 view .LVU499
 2311 0006 564B     		ldr	r3, .L155
 2312 0008 B3F800C0 		ldrh	ip, [r3]
 2313 000c 1FFA8CFC 		uxth	ip, ip
 2314 0010 ACF14E0C 		sub	ip, ip, #78
 2315              		.loc 1 380 5 view .LVU500
 2316 0014 0023     		movs	r3, #0
 2317 0016 0093     		str	r3, [sp]
 2318 0018 4423     		movs	r3, #68
 2319 001a 1A46     		mov	r2, r3
 2320 001c 9321     		movs	r1, #147
 2321 001e 0FFA8CF0 		sxth	r0, ip
 2322              	.LVL246:
 2323              		.loc 1 380 5 view .LVU501
 2324 0022 FFF7FEFF 		bl	fillRect
 2325              	.LVL247:
 381:Core/Src/board.c ****     switch(id){
 2326              		.loc 1 381 5 is_stmt 1 view .LVU502
 2327 0026 062C     		cmp	r4, #6
 2328 0028 12D8     		bhi	.L144
 2329 002a DFE804F0 		tbb	[pc, r4]
 2330              	.L147:
 2331 002e 73       		.byte	(.L153-.L147)/2
 2332 002f 04       		.byte	(.L152-.L147)/2
 2333 0030 5B       		.byte	(.L151-.L147)/2
 2334 0031 2B       		.byte	(.L150-.L147)/2
 2335 0032 13       		.byte	(.L149-.L147)/2
 2336 0033 81       		.byte	(.L148-.L147)/2
 2337 0034 43       		.byte	(.L146-.L147)/2
 2338 0035 00       		.p2align 1
 2339              	.L152:
 382:Core/Src/board.c ****         case I:
 383:Core/Src/board.c ****             fillRect(TFTWIDTH - 80 + 30, BOARD_WIDTH*TAILLE_CASE + DECALAGE_GAUCHE + 15 + 12, 12, 4
 2340              		.loc 1 383 13 view .LVU503
 2341              		.loc 1 383 36 is_stmt 0 view .LVU504
 2342 0036 4A4B     		ldr	r3, .L155
 2343 0038 1888     		ldrh	r0, [r3]
 2344 003a 80B2     		uxth	r0, r0
 2345 003c 3238     		subs	r0, r0, #50
 2346              		.loc 1 383 13 view .LVU505
 2347 003e 40F2FF73 		movw	r3, #2047
 2348 0042 0093     		str	r3, [sp]
 2349 0044 3023     		movs	r3, #48
 2350 0046 0C22     		movs	r2, #12
 2351 0048 9D21     		movs	r1, #157
 2352 004a 00B2     		sxth	r0, r0
 2353 004c FFF7FEFF 		bl	fillRect
 2354              	.LVL248:
 384:Core/Src/board.c ****             break;
 2355              		.loc 1 384 13 is_stmt 1 view .LVU506
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 51


 2356              	.L144:
 385:Core/Src/board.c ****         case L:
 386:Core/Src/board.c ****             fillRect(TFTWIDTH - 80 + 36, BOARD_WIDTH*TAILLE_CASE + DECALAGE_GAUCHE + 15 + 18, 12, 3
 387:Core/Src/board.c ****             fillRect(TFTWIDTH - 80 + 24, BOARD_WIDTH*TAILLE_CASE + DECALAGE_GAUCHE + 15 + 18, 12, 1
 388:Core/Src/board.c ****             break;
 389:Core/Src/board.c ****         case Z:
 390:Core/Src/board.c ****             fillRect(TFTWIDTH - 80 + 36, BOARD_WIDTH*TAILLE_CASE + DECALAGE_GAUCHE + 15 + 18, 12, 2
 391:Core/Src/board.c ****             fillRect(TFTWIDTH - 80 + 24, BOARD_WIDTH*TAILLE_CASE  + DECALAGE_GAUCHE + 15 + 30, 12, 
 392:Core/Src/board.c ****             break;
 393:Core/Src/board.c ****         case T:
 394:Core/Src/board.c ****             fillRect(TFTWIDTH - 80 + 36, BOARD_WIDTH*TAILLE_CASE + DECALAGE_GAUCHE + 15 + 18, 12, 3
 395:Core/Src/board.c ****             fillRect(TFTWIDTH - 80 + 24, BOARD_WIDTH*TAILLE_CASE  + DECALAGE_GAUCHE + 15 + 30, 12, 
 396:Core/Src/board.c ****             break;
 397:Core/Src/board.c ****         case S:
 398:Core/Src/board.c ****             fillRect(TFTWIDTH - 80 + 24, BOARD_WIDTH*TAILLE_CASE + DECALAGE_GAUCHE + 15 + 18, 12, 2
 399:Core/Src/board.c ****             fillRect(TFTWIDTH - 80 + 36, BOARD_WIDTH*TAILLE_CASE  + DECALAGE_GAUCHE + 15 + 30, 12, 
 400:Core/Src/board.c ****             break;
 401:Core/Src/board.c ****         case O:
 402:Core/Src/board.c ****             fillRect(TFTWIDTH - 80 + 24, BOARD_WIDTH*TAILLE_CASE + DECALAGE_GAUCHE + 15 + 24, 24, 2
 403:Core/Src/board.c ****             break;
 404:Core/Src/board.c ****         case J:
 405:Core/Src/board.c ****             fillRect(TFTWIDTH - 80 +  36, BOARD_WIDTH*TAILLE_CASE + DECALAGE_GAUCHE + 15 + 18, 12, 
 406:Core/Src/board.c ****             fillRect(TFTWIDTH - 80 +  24, BOARD_WIDTH*TAILLE_CASE + DECALAGE_GAUCHE + 15 + 42, 12, 
 407:Core/Src/board.c ****             break;
 408:Core/Src/board.c ****         default:
 409:Core/Src/board.c ****             break;
 410:Core/Src/board.c ****     }
 411:Core/Src/board.c **** }
 2357              		.loc 1 411 1 is_stmt 0 view .LVU507
 2358 0050 03B0     		add	sp, sp, #12
 2359              	.LCFI43:
 2360              		.cfi_remember_state
 2361              		.cfi_def_cfa_offset 12
 2362              		@ sp needed
 2363 0052 30BD     		pop	{r4, r5, pc}
 2364              	.LVL249:
 2365              	.L149:
 2366              	.LCFI44:
 2367              		.cfi_restore_state
 386:Core/Src/board.c ****             fillRect(TFTWIDTH - 80 + 24, BOARD_WIDTH*TAILLE_CASE + DECALAGE_GAUCHE + 15 + 18, 12, 1
 2368              		.loc 1 386 13 is_stmt 1 view .LVU508
 386:Core/Src/board.c ****             fillRect(TFTWIDTH - 80 + 24, BOARD_WIDTH*TAILLE_CASE + DECALAGE_GAUCHE + 15 + 18, 12, 1
 2369              		.loc 1 386 36 is_stmt 0 view .LVU509
 2370 0054 424D     		ldr	r5, .L155
 2371 0056 2888     		ldrh	r0, [r5]
 2372 0058 80B2     		uxth	r0, r0
 2373 005a 2C38     		subs	r0, r0, #44
 386:Core/Src/board.c ****             fillRect(TFTWIDTH - 80 + 24, BOARD_WIDTH*TAILLE_CASE + DECALAGE_GAUCHE + 15 + 18, 12, 1
 2374              		.loc 1 386 13 view .LVU510
 2375 005c 4FF62054 		movw	r4, #64800
 2376              	.LVL250:
 386:Core/Src/board.c ****             fillRect(TFTWIDTH - 80 + 24, BOARD_WIDTH*TAILLE_CASE + DECALAGE_GAUCHE + 15 + 18, 12, 1
 2377              		.loc 1 386 13 view .LVU511
 2378 0060 0094     		str	r4, [sp]
 2379 0062 2423     		movs	r3, #36
 2380 0064 0C22     		movs	r2, #12
 2381 0066 A321     		movs	r1, #163
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 52


 2382 0068 00B2     		sxth	r0, r0
 2383 006a FFF7FEFF 		bl	fillRect
 2384              	.LVL251:
 387:Core/Src/board.c ****             break;
 2385              		.loc 1 387 13 is_stmt 1 view .LVU512
 387:Core/Src/board.c ****             break;
 2386              		.loc 1 387 36 is_stmt 0 view .LVU513
 2387 006e 2888     		ldrh	r0, [r5]
 2388 0070 80B2     		uxth	r0, r0
 2389 0072 3838     		subs	r0, r0, #56
 387:Core/Src/board.c ****             break;
 2390              		.loc 1 387 13 view .LVU514
 2391 0074 0094     		str	r4, [sp]
 2392 0076 0C23     		movs	r3, #12
 2393 0078 1A46     		mov	r2, r3
 2394 007a A321     		movs	r1, #163
 2395 007c 00B2     		sxth	r0, r0
 2396 007e FFF7FEFF 		bl	fillRect
 2397              	.LVL252:
 388:Core/Src/board.c ****         case Z:
 2398              		.loc 1 388 13 is_stmt 1 view .LVU515
 2399 0082 E5E7     		b	.L144
 2400              	.LVL253:
 2401              	.L150:
 390:Core/Src/board.c ****             fillRect(TFTWIDTH - 80 + 24, BOARD_WIDTH*TAILLE_CASE  + DECALAGE_GAUCHE + 15 + 30, 12, 
 2402              		.loc 1 390 13 view .LVU516
 390:Core/Src/board.c ****             fillRect(TFTWIDTH - 80 + 24, BOARD_WIDTH*TAILLE_CASE  + DECALAGE_GAUCHE + 15 + 30, 12, 
 2403              		.loc 1 390 36 is_stmt 0 view .LVU517
 2404 0084 364D     		ldr	r5, .L155
 2405 0086 2888     		ldrh	r0, [r5]
 2406 0088 80B2     		uxth	r0, r0
 2407 008a 2C38     		subs	r0, r0, #44
 390:Core/Src/board.c ****             fillRect(TFTWIDTH - 80 + 24, BOARD_WIDTH*TAILLE_CASE  + DECALAGE_GAUCHE + 15 + 30, 12, 
 2408              		.loc 1 390 13 view .LVU518
 2409 008c 4FF47844 		mov	r4, #63488
 2410              	.LVL254:
 390:Core/Src/board.c ****             fillRect(TFTWIDTH - 80 + 24, BOARD_WIDTH*TAILLE_CASE  + DECALAGE_GAUCHE + 15 + 30, 12, 
 2411              		.loc 1 390 13 view .LVU519
 2412 0090 0094     		str	r4, [sp]
 2413 0092 1823     		movs	r3, #24
 2414 0094 0C22     		movs	r2, #12
 2415 0096 A321     		movs	r1, #163
 2416 0098 00B2     		sxth	r0, r0
 2417 009a FFF7FEFF 		bl	fillRect
 2418              	.LVL255:
 391:Core/Src/board.c ****             break;
 2419              		.loc 1 391 13 is_stmt 1 view .LVU520
 391:Core/Src/board.c ****             break;
 2420              		.loc 1 391 36 is_stmt 0 view .LVU521
 2421 009e 2888     		ldrh	r0, [r5]
 2422 00a0 80B2     		uxth	r0, r0
 2423 00a2 3838     		subs	r0, r0, #56
 391:Core/Src/board.c ****             break;
 2424              		.loc 1 391 13 view .LVU522
 2425 00a4 0094     		str	r4, [sp]
 2426 00a6 1823     		movs	r3, #24
 2427 00a8 0C22     		movs	r2, #12
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 53


 2428 00aa AF21     		movs	r1, #175
 2429 00ac 00B2     		sxth	r0, r0
 2430 00ae FFF7FEFF 		bl	fillRect
 2431              	.LVL256:
 392:Core/Src/board.c ****         case T:
 2432              		.loc 1 392 13 is_stmt 1 view .LVU523
 2433 00b2 CDE7     		b	.L144
 2434              	.LVL257:
 2435              	.L146:
 394:Core/Src/board.c ****             fillRect(TFTWIDTH - 80 + 24, BOARD_WIDTH*TAILLE_CASE  + DECALAGE_GAUCHE + 15 + 30, 12, 
 2436              		.loc 1 394 13 view .LVU524
 394:Core/Src/board.c ****             fillRect(TFTWIDTH - 80 + 24, BOARD_WIDTH*TAILLE_CASE  + DECALAGE_GAUCHE + 15 + 30, 12, 
 2437              		.loc 1 394 36 is_stmt 0 view .LVU525
 2438 00b4 2A4D     		ldr	r5, .L155
 2439 00b6 2888     		ldrh	r0, [r5]
 2440 00b8 80B2     		uxth	r0, r0
 2441 00ba 2C38     		subs	r0, r0, #44
 394:Core/Src/board.c ****             fillRect(TFTWIDTH - 80 + 24, BOARD_WIDTH*TAILLE_CASE  + DECALAGE_GAUCHE + 15 + 30, 12, 
 2442              		.loc 1 394 13 view .LVU526
 2443 00bc 47F60F04 		movw	r4, #30735
 2444              	.LVL258:
 394:Core/Src/board.c ****             fillRect(TFTWIDTH - 80 + 24, BOARD_WIDTH*TAILLE_CASE  + DECALAGE_GAUCHE + 15 + 30, 12, 
 2445              		.loc 1 394 13 view .LVU527
 2446 00c0 0094     		str	r4, [sp]
 2447 00c2 2423     		movs	r3, #36
 2448 00c4 0C22     		movs	r2, #12
 2449 00c6 A321     		movs	r1, #163
 2450 00c8 00B2     		sxth	r0, r0
 2451 00ca FFF7FEFF 		bl	fillRect
 2452              	.LVL259:
 395:Core/Src/board.c ****             break;
 2453              		.loc 1 395 13 is_stmt 1 view .LVU528
 395:Core/Src/board.c ****             break;
 2454              		.loc 1 395 36 is_stmt 0 view .LVU529
 2455 00ce 2888     		ldrh	r0, [r5]
 2456 00d0 80B2     		uxth	r0, r0
 2457 00d2 3838     		subs	r0, r0, #56
 395:Core/Src/board.c ****             break;
 2458              		.loc 1 395 13 view .LVU530
 2459 00d4 0094     		str	r4, [sp]
 2460 00d6 0C23     		movs	r3, #12
 2461 00d8 1A46     		mov	r2, r3
 2462 00da AF21     		movs	r1, #175
 2463 00dc 00B2     		sxth	r0, r0
 2464 00de FFF7FEFF 		bl	fillRect
 2465              	.LVL260:
 396:Core/Src/board.c ****         case S:
 2466              		.loc 1 396 13 is_stmt 1 view .LVU531
 2467 00e2 B5E7     		b	.L144
 2468              	.LVL261:
 2469              	.L151:
 398:Core/Src/board.c ****             fillRect(TFTWIDTH - 80 + 36, BOARD_WIDTH*TAILLE_CASE  + DECALAGE_GAUCHE + 15 + 30, 12, 
 2470              		.loc 1 398 13 view .LVU532
 398:Core/Src/board.c ****             fillRect(TFTWIDTH - 80 + 36, BOARD_WIDTH*TAILLE_CASE  + DECALAGE_GAUCHE + 15 + 30, 12, 
 2471              		.loc 1 398 36 is_stmt 0 view .LVU533
 2472 00e4 1E4D     		ldr	r5, .L155
 2473 00e6 2888     		ldrh	r0, [r5]
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 54


 2474 00e8 80B2     		uxth	r0, r0
 2475 00ea 3838     		subs	r0, r0, #56
 398:Core/Src/board.c ****             fillRect(TFTWIDTH - 80 + 36, BOARD_WIDTH*TAILLE_CASE  + DECALAGE_GAUCHE + 15 + 30, 12, 
 2476              		.loc 1 398 13 view .LVU534
 2477 00ec 4FF4FC64 		mov	r4, #2016
 2478              	.LVL262:
 398:Core/Src/board.c ****             fillRect(TFTWIDTH - 80 + 36, BOARD_WIDTH*TAILLE_CASE  + DECALAGE_GAUCHE + 15 + 30, 12, 
 2479              		.loc 1 398 13 view .LVU535
 2480 00f0 0094     		str	r4, [sp]
 2481 00f2 1823     		movs	r3, #24
 2482 00f4 0C22     		movs	r2, #12
 2483 00f6 A321     		movs	r1, #163
 2484 00f8 00B2     		sxth	r0, r0
 2485 00fa FFF7FEFF 		bl	fillRect
 2486              	.LVL263:
 399:Core/Src/board.c ****             break;
 2487              		.loc 1 399 13 is_stmt 1 view .LVU536
 399:Core/Src/board.c ****             break;
 2488              		.loc 1 399 36 is_stmt 0 view .LVU537
 2489 00fe 2888     		ldrh	r0, [r5]
 2490 0100 80B2     		uxth	r0, r0
 2491 0102 2C38     		subs	r0, r0, #44
 399:Core/Src/board.c ****             break;
 2492              		.loc 1 399 13 view .LVU538
 2493 0104 0094     		str	r4, [sp]
 2494 0106 1823     		movs	r3, #24
 2495 0108 0C22     		movs	r2, #12
 2496 010a AF21     		movs	r1, #175
 2497 010c 00B2     		sxth	r0, r0
 2498 010e FFF7FEFF 		bl	fillRect
 2499              	.LVL264:
 400:Core/Src/board.c ****         case O:
 2500              		.loc 1 400 13 is_stmt 1 view .LVU539
 2501 0112 9DE7     		b	.L144
 2502              	.LVL265:
 2503              	.L153:
 402:Core/Src/board.c ****             break;
 2504              		.loc 1 402 13 view .LVU540
 402:Core/Src/board.c ****             break;
 2505              		.loc 1 402 36 is_stmt 0 view .LVU541
 2506 0114 124B     		ldr	r3, .L155
 2507 0116 1888     		ldrh	r0, [r3]
 2508 0118 80B2     		uxth	r0, r0
 2509 011a 3838     		subs	r0, r0, #56
 402:Core/Src/board.c ****             break;
 2510              		.loc 1 402 13 view .LVU542
 2511 011c 4FF6E073 		movw	r3, #65504
 2512 0120 0093     		str	r3, [sp]
 2513 0122 1823     		movs	r3, #24
 2514 0124 1A46     		mov	r2, r3
 2515 0126 A921     		movs	r1, #169
 2516 0128 00B2     		sxth	r0, r0
 2517 012a FFF7FEFF 		bl	fillRect
 2518              	.LVL266:
 403:Core/Src/board.c ****         case J:
 2519              		.loc 1 403 13 is_stmt 1 view .LVU543
 2520 012e 8FE7     		b	.L144
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 55


 2521              	.L148:
 405:Core/Src/board.c ****             fillRect(TFTWIDTH - 80 +  24, BOARD_WIDTH*TAILLE_CASE + DECALAGE_GAUCHE + 15 + 42, 12, 
 2522              		.loc 1 405 13 view .LVU544
 405:Core/Src/board.c ****             fillRect(TFTWIDTH - 80 +  24, BOARD_WIDTH*TAILLE_CASE + DECALAGE_GAUCHE + 15 + 42, 12, 
 2523              		.loc 1 405 36 is_stmt 0 view .LVU545
 2524 0130 0B4D     		ldr	r5, .L155
 2525 0132 2888     		ldrh	r0, [r5]
 2526 0134 80B2     		uxth	r0, r0
 2527 0136 2C38     		subs	r0, r0, #44
 405:Core/Src/board.c ****             fillRect(TFTWIDTH - 80 +  24, BOARD_WIDTH*TAILLE_CASE + DECALAGE_GAUCHE + 15 + 42, 12, 
 2528              		.loc 1 405 13 view .LVU546
 2529 0138 1F24     		movs	r4, #31
 2530              	.LVL267:
 405:Core/Src/board.c ****             fillRect(TFTWIDTH - 80 +  24, BOARD_WIDTH*TAILLE_CASE + DECALAGE_GAUCHE + 15 + 42, 12, 
 2531              		.loc 1 405 13 view .LVU547
 2532 013a 0094     		str	r4, [sp]
 2533 013c 2423     		movs	r3, #36
 2534 013e 0C22     		movs	r2, #12
 2535 0140 A321     		movs	r1, #163
 2536 0142 00B2     		sxth	r0, r0
 2537 0144 FFF7FEFF 		bl	fillRect
 2538              	.LVL268:
 406:Core/Src/board.c ****             break;
 2539              		.loc 1 406 13 is_stmt 1 view .LVU548
 406:Core/Src/board.c ****             break;
 2540              		.loc 1 406 36 is_stmt 0 view .LVU549
 2541 0148 2888     		ldrh	r0, [r5]
 2542 014a 80B2     		uxth	r0, r0
 2543 014c 3838     		subs	r0, r0, #56
 406:Core/Src/board.c ****             break;
 2544              		.loc 1 406 13 view .LVU550
 2545 014e 0094     		str	r4, [sp]
 2546 0150 0C23     		movs	r3, #12
 2547 0152 1A46     		mov	r2, r3
 2548 0154 BB21     		movs	r1, #187
 2549 0156 00B2     		sxth	r0, r0
 2550 0158 FFF7FEFF 		bl	fillRect
 2551              	.LVL269:
 407:Core/Src/board.c ****         default:
 2552              		.loc 1 407 13 is_stmt 1 view .LVU551
 2553              		.loc 1 411 1 is_stmt 0 view .LVU552
 2554 015c 78E7     		b	.L144
 2555              	.L156:
 2556 015e 00BF     		.align	2
 2557              	.L155:
 2558 0160 00000000 		.word	TFTWIDTH
 2559              		.cfi_endproc
 2560              	.LFE761:
 2562              		.section	.text.clear,"ax",%progbits
 2563              		.align	1
 2564              		.global	clear
 2565              		.syntax unified
 2566              		.thumb
 2567              		.thumb_func
 2568              		.fpu fpv4-sp-d16
 2570              	clear:
 2571              	.LVL270:
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 56


 2572              	.LFB762:
 412:Core/Src/board.c **** 
 413:Core/Src/board.c **** 
 414:Core/Src/board.c **** void clear(Board * board)
 415:Core/Src/board.c **** {
 2573              		.loc 1 415 1 is_stmt 1 view -0
 2574              		.cfi_startproc
 2575              		@ args = 0, pretend = 0, frame = 0
 2576              		@ frame_needed = 0, uses_anonymous_args = 0
 2577              		@ link register save eliminated.
 2578              		.loc 1 415 1 is_stmt 0 view .LVU554
 2579 0000 8446     		mov	ip, r0
 416:Core/Src/board.c ****     for(int i = 0; i < BOARD_WIDTH; ++i)
 2580              		.loc 1 416 5 is_stmt 1 view .LVU555
 2581              	.LBB26:
 2582              		.loc 1 416 9 view .LVU556
 2583              	.LVL271:
 2584              		.loc 1 416 13 is_stmt 0 view .LVU557
 2585 0002 0021     		movs	r1, #0
 2586              		.loc 1 416 5 view .LVU558
 2587 0004 0BE0     		b	.L158
 2588              	.LVL272:
 2589              	.L159:
 2590              	.LBB27:
 417:Core/Src/board.c ****     {
 418:Core/Src/board.c ****         for(int j = 0; j < BOARD_HEIGHT; ++j)
 419:Core/Src/board.c ****             board->area[i][j] = FREE;
 2591              		.loc 1 419 13 is_stmt 1 discriminator 3 view .LVU559
 2592              		.loc 1 419 31 is_stmt 0 discriminator 3 view .LVU560
 2593 0006 01EB8103 		add	r3, r1, r1, lsl #2
 2594 000a 02EB8303 		add	r3, r2, r3, lsl #2
 2595 000e 0CEB8303 		add	r3, ip, r3, lsl #2
 2596 0012 0020     		movs	r0, #0
 2597 0014 5860     		str	r0, [r3, #4]
 418:Core/Src/board.c ****             board->area[i][j] = FREE;
 2598              		.loc 1 418 42 is_stmt 1 discriminator 3 view .LVU561
 2599 0016 0132     		adds	r2, r2, #1
 2600              	.LVL273:
 2601              	.L160:
 418:Core/Src/board.c ****             board->area[i][j] = FREE;
 2602              		.loc 1 418 24 discriminator 1 view .LVU562
 418:Core/Src/board.c ****             board->area[i][j] = FREE;
 2603              		.loc 1 418 9 is_stmt 0 discriminator 1 view .LVU563
 2604 0018 132A     		cmp	r2, #19
 2605 001a F4DD     		ble	.L159
 2606              	.LBE27:
 416:Core/Src/board.c ****     for(int i = 0; i < BOARD_WIDTH; ++i)
 2607              		.loc 1 416 37 is_stmt 1 discriminator 2 view .LVU564
 2608 001c 0131     		adds	r1, r1, #1
 2609              	.LVL274:
 2610              	.L158:
 416:Core/Src/board.c ****     for(int i = 0; i < BOARD_WIDTH; ++i)
 2611              		.loc 1 416 20 discriminator 1 view .LVU565
 416:Core/Src/board.c ****     for(int i = 0; i < BOARD_WIDTH; ++i)
 2612              		.loc 1 416 5 is_stmt 0 discriminator 1 view .LVU566
 2613 001e 0929     		cmp	r1, #9
 2614 0020 01DC     		bgt	.L162
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 57


 2615              	.LBB28:
 418:Core/Src/board.c ****             board->area[i][j] = FREE;
 2616              		.loc 1 418 17 view .LVU567
 2617 0022 0022     		movs	r2, #0
 2618 0024 F8E7     		b	.L160
 2619              	.L162:
 2620              	.LBE28:
 2621              	.LBE26:
 420:Core/Src/board.c ****     }
 421:Core/Src/board.c **** }...
 2622              		.loc 1 421 1 view .LVU568
 2623 0026 7047     		bx	lr
 2624              		.cfi_endproc
 2625              	.LFE762:
 2627              		.section	.bss.previousArea.0,"aw",%nobits
 2628              		.align	2
 2629              		.set	.LANCHOR1,. + 0
 2632              	previousArea.0:
 2633 0000 00000000 		.space	800
 2633      00000000 
 2633      00000000 
 2633      00000000 
 2633      00000000 
 2634              		.section	.rodata.PIECES,"a"
 2635              		.align	2
 2636              		.set	.LANCHOR0,. + 0
 2639              	PIECES:
 2640 0000 00000000 		.word	0
 2641 0004 00000000 		.word	0
 2642 0008 00000000 		.word	0
 2643 000c 00000000 		.word	0
 2644 0010 00000000 		.word	0
 2645 0014 01000000 		.word	1
 2646 0018 02000000 		.word	2
 2647 001c 00000000 		.word	0
 2648 0020 00000000 		.word	0
 2649 0024 01000000 		.word	1
 2650 0028 01000000 		.word	1
 2651 002c 00000000 		.word	0
 2652 0030 00000000 		.word	0
 2653 0034 00000000 		.word	0
 2654 0038 00000000 		.word	0
 2655 003c 00000000 		.word	0
 2656 0040 00000000 		.word	0
 2657 0044 00000000 		.word	0
 2658 0048 00000000 		.word	0
 2659 004c 00000000 		.word	0
 2660 0050 00000000 		.word	0
 2661 0054 01000000 		.word	1
 2662 0058 02000000 		.word	2
 2663 005c 00000000 		.word	0
 2664 0060 00000000 		.word	0
 2665 0064 01000000 		.word	1
 2666 0068 01000000 		.word	1
 2667 006c 00000000 		.word	0
 2668 0070 00000000 		.word	0
 2669 0074 00000000 		.word	0
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 58


 2670 0078 00000000 		.word	0
 2671 007c 00000000 		.word	0
 2672 0080 00000000 		.word	0
 2673 0084 00000000 		.word	0
 2674 0088 00000000 		.word	0
 2675 008c 00000000 		.word	0
 2676 0090 00000000 		.word	0
 2677 0094 01000000 		.word	1
 2678 0098 02000000 		.word	2
 2679 009c 00000000 		.word	0
 2680 00a0 00000000 		.word	0
 2681 00a4 01000000 		.word	1
 2682 00a8 01000000 		.word	1
 2683 00ac 00000000 		.word	0
 2684 00b0 00000000 		.word	0
 2685 00b4 00000000 		.word	0
 2686 00b8 00000000 		.word	0
 2687 00bc 00000000 		.word	0
 2688 00c0 00000000 		.word	0
 2689 00c4 00000000 		.word	0
 2690 00c8 00000000 		.word	0
 2691 00cc 00000000 		.word	0
 2692 00d0 00000000 		.word	0
 2693 00d4 01000000 		.word	1
 2694 00d8 02000000 		.word	2
 2695 00dc 00000000 		.word	0
 2696 00e0 00000000 		.word	0
 2697 00e4 01000000 		.word	1
 2698 00e8 01000000 		.word	1
 2699 00ec 00000000 		.word	0
 2700 00f0 00000000 		.word	0
 2701 00f4 00000000 		.word	0
 2702 00f8 00000000 		.word	0
 2703 00fc 00000000 		.word	0
 2704 0100 00000000 		.word	0
 2705 0104 00000000 		.word	0
 2706 0108 00000000 		.word	0
 2707 010c 00000000 		.word	0
 2708 0110 01000000 		.word	1
 2709 0114 01000000 		.word	1
 2710 0118 02000000 		.word	2
 2711 011c 01000000 		.word	1
 2712 0120 00000000 		.word	0
 2713 0124 00000000 		.word	0
 2714 0128 00000000 		.word	0
 2715 012c 00000000 		.word	0
 2716 0130 00000000 		.word	0
 2717 0134 00000000 		.word	0
 2718 0138 00000000 		.word	0
 2719 013c 00000000 		.word	0
 2720 0140 00000000 		.word	0
 2721 0144 00000000 		.word	0
 2722 0148 01000000 		.word	1
 2723 014c 00000000 		.word	0
 2724 0150 00000000 		.word	0
 2725 0154 00000000 		.word	0
 2726 0158 02000000 		.word	2
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 59


 2727 015c 00000000 		.word	0
 2728 0160 00000000 		.word	0
 2729 0164 00000000 		.word	0
 2730 0168 01000000 		.word	1
 2731 016c 00000000 		.word	0
 2732 0170 00000000 		.word	0
 2733 0174 00000000 		.word	0
 2734 0178 01000000 		.word	1
 2735 017c 00000000 		.word	0
 2736 0180 00000000 		.word	0
 2737 0184 00000000 		.word	0
 2738 0188 00000000 		.word	0
 2739 018c 00000000 		.word	0
 2740 0190 01000000 		.word	1
 2741 0194 01000000 		.word	1
 2742 0198 02000000 		.word	2
 2743 019c 01000000 		.word	1
 2744 01a0 00000000 		.word	0
 2745 01a4 00000000 		.word	0
 2746 01a8 00000000 		.word	0
 2747 01ac 00000000 		.word	0
 2748 01b0 00000000 		.word	0
 2749 01b4 00000000 		.word	0
 2750 01b8 00000000 		.word	0
 2751 01bc 00000000 		.word	0
 2752 01c0 00000000 		.word	0
 2753 01c4 00000000 		.word	0
 2754 01c8 01000000 		.word	1
 2755 01cc 00000000 		.word	0
 2756 01d0 00000000 		.word	0
 2757 01d4 00000000 		.word	0
 2758 01d8 02000000 		.word	2
 2759 01dc 00000000 		.word	0
 2760 01e0 00000000 		.word	0
 2761 01e4 00000000 		.word	0
 2762 01e8 01000000 		.word	1
 2763 01ec 00000000 		.word	0
 2764 01f0 00000000 		.word	0
 2765 01f4 00000000 		.word	0
 2766 01f8 01000000 		.word	1
 2767 01fc 00000000 		.word	0
 2768 0200 00000000 		.word	0
 2769 0204 00000000 		.word	0
 2770 0208 00000000 		.word	0
 2771 020c 00000000 		.word	0
 2772 0210 00000000 		.word	0
 2773 0214 00000000 		.word	0
 2774 0218 02000000 		.word	2
 2775 021c 01000000 		.word	1
 2776 0220 00000000 		.word	0
 2777 0224 01000000 		.word	1
 2778 0228 01000000 		.word	1
 2779 022c 00000000 		.word	0
 2780 0230 00000000 		.word	0
 2781 0234 00000000 		.word	0
 2782 0238 00000000 		.word	0
 2783 023c 00000000 		.word	0
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 60


 2784 0240 00000000 		.word	0
 2785 0244 00000000 		.word	0
 2786 0248 01000000 		.word	1
 2787 024c 00000000 		.word	0
 2788 0250 00000000 		.word	0
 2789 0254 00000000 		.word	0
 2790 0258 02000000 		.word	2
 2791 025c 01000000 		.word	1
 2792 0260 00000000 		.word	0
 2793 0264 00000000 		.word	0
 2794 0268 00000000 		.word	0
 2795 026c 01000000 		.word	1
 2796 0270 00000000 		.word	0
 2797 0274 00000000 		.word	0
 2798 0278 00000000 		.word	0
 2799 027c 00000000 		.word	0
 2800 0280 00000000 		.word	0
 2801 0284 00000000 		.word	0
 2802 0288 00000000 		.word	0
 2803 028c 00000000 		.word	0
 2804 0290 00000000 		.word	0
 2805 0294 00000000 		.word	0
 2806 0298 02000000 		.word	2
 2807 029c 01000000 		.word	1
 2808 02a0 00000000 		.word	0
 2809 02a4 01000000 		.word	1
 2810 02a8 01000000 		.word	1
 2811 02ac 00000000 		.word	0
 2812 02b0 00000000 		.word	0
 2813 02b4 00000000 		.word	0
 2814 02b8 00000000 		.word	0
 2815 02bc 00000000 		.word	0
 2816 02c0 00000000 		.word	0
 2817 02c4 00000000 		.word	0
 2818 02c8 01000000 		.word	1
 2819 02cc 00000000 		.word	0
 2820 02d0 00000000 		.word	0
 2821 02d4 00000000 		.word	0
 2822 02d8 02000000 		.word	2
 2823 02dc 01000000 		.word	1
 2824 02e0 00000000 		.word	0
 2825 02e4 00000000 		.word	0
 2826 02e8 00000000 		.word	0
 2827 02ec 01000000 		.word	1
 2828 02f0 00000000 		.word	0
 2829 02f4 00000000 		.word	0
 2830 02f8 00000000 		.word	0
 2831 02fc 00000000 		.word	0
 2832 0300 00000000 		.word	0
 2833 0304 00000000 		.word	0
 2834 0308 00000000 		.word	0
 2835 030c 00000000 		.word	0
 2836 0310 00000000 		.word	0
 2837 0314 01000000 		.word	1
 2838 0318 02000000 		.word	2
 2839 031c 00000000 		.word	0
 2840 0320 00000000 		.word	0
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 61


 2841 0324 00000000 		.word	0
 2842 0328 01000000 		.word	1
 2843 032c 01000000 		.word	1
 2844 0330 00000000 		.word	0
 2845 0334 00000000 		.word	0
 2846 0338 00000000 		.word	0
 2847 033c 00000000 		.word	0
 2848 0340 00000000 		.word	0
 2849 0344 00000000 		.word	0
 2850 0348 00000000 		.word	0
 2851 034c 01000000 		.word	1
 2852 0350 00000000 		.word	0
 2853 0354 00000000 		.word	0
 2854 0358 02000000 		.word	2
 2855 035c 01000000 		.word	1
 2856 0360 00000000 		.word	0
 2857 0364 00000000 		.word	0
 2858 0368 01000000 		.word	1
 2859 036c 00000000 		.word	0
 2860 0370 00000000 		.word	0
 2861 0374 00000000 		.word	0
 2862 0378 00000000 		.word	0
 2863 037c 00000000 		.word	0
 2864 0380 00000000 		.word	0
 2865 0384 00000000 		.word	0
 2866 0388 00000000 		.word	0
 2867 038c 00000000 		.word	0
 2868 0390 00000000 		.word	0
 2869 0394 01000000 		.word	1
 2870 0398 02000000 		.word	2
 2871 039c 00000000 		.word	0
 2872 03a0 00000000 		.word	0
 2873 03a4 00000000 		.word	0
 2874 03a8 01000000 		.word	1
 2875 03ac 01000000 		.word	1
 2876 03b0 00000000 		.word	0
 2877 03b4 00000000 		.word	0
 2878 03b8 00000000 		.word	0
 2879 03bc 00000000 		.word	0
 2880 03c0 00000000 		.word	0
 2881 03c4 00000000 		.word	0
 2882 03c8 00000000 		.word	0
 2883 03cc 01000000 		.word	1
 2884 03d0 00000000 		.word	0
 2885 03d4 00000000 		.word	0
 2886 03d8 02000000 		.word	2
 2887 03dc 01000000 		.word	1
 2888 03e0 00000000 		.word	0
 2889 03e4 00000000 		.word	0
 2890 03e8 01000000 		.word	1
 2891 03ec 00000000 		.word	0
 2892 03f0 00000000 		.word	0
 2893 03f4 00000000 		.word	0
 2894 03f8 00000000 		.word	0
 2895 03fc 00000000 		.word	0
 2896 0400 00000000 		.word	0
 2897 0404 00000000 		.word	0
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 62


 2898 0408 00000000 		.word	0
 2899 040c 00000000 		.word	0
 2900 0410 00000000 		.word	0
 2901 0414 01000000 		.word	1
 2902 0418 02000000 		.word	2
 2903 041c 01000000 		.word	1
 2904 0420 00000000 		.word	0
 2905 0424 01000000 		.word	1
 2906 0428 00000000 		.word	0
 2907 042c 00000000 		.word	0
 2908 0430 00000000 		.word	0
 2909 0434 00000000 		.word	0
 2910 0438 00000000 		.word	0
 2911 043c 00000000 		.word	0
 2912 0440 00000000 		.word	0
 2913 0444 00000000 		.word	0
 2914 0448 01000000 		.word	1
 2915 044c 00000000 		.word	0
 2916 0450 00000000 		.word	0
 2917 0454 00000000 		.word	0
 2918 0458 02000000 		.word	2
 2919 045c 00000000 		.word	0
 2920 0460 00000000 		.word	0
 2921 0464 00000000 		.word	0
 2922 0468 01000000 		.word	1
 2923 046c 01000000 		.word	1
 2924 0470 00000000 		.word	0
 2925 0474 00000000 		.word	0
 2926 0478 00000000 		.word	0
 2927 047c 00000000 		.word	0
 2928 0480 00000000 		.word	0
 2929 0484 00000000 		.word	0
 2930 0488 00000000 		.word	0
 2931 048c 01000000 		.word	1
 2932 0490 00000000 		.word	0
 2933 0494 01000000 		.word	1
 2934 0498 02000000 		.word	2
 2935 049c 01000000 		.word	1
 2936 04a0 00000000 		.word	0
 2937 04a4 00000000 		.word	0
 2938 04a8 00000000 		.word	0
 2939 04ac 00000000 		.word	0
 2940 04b0 00000000 		.word	0
 2941 04b4 00000000 		.word	0
 2942 04b8 00000000 		.word	0
 2943 04bc 00000000 		.word	0
 2944 04c0 00000000 		.word	0
 2945 04c4 01000000 		.word	1
 2946 04c8 01000000 		.word	1
 2947 04cc 00000000 		.word	0
 2948 04d0 00000000 		.word	0
 2949 04d4 00000000 		.word	0
 2950 04d8 02000000 		.word	2
 2951 04dc 00000000 		.word	0
 2952 04e0 00000000 		.word	0
 2953 04e4 00000000 		.word	0
 2954 04e8 01000000 		.word	1
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 63


 2955 04ec 00000000 		.word	0
 2956 04f0 00000000 		.word	0
 2957 04f4 00000000 		.word	0
 2958 04f8 00000000 		.word	0
 2959 04fc 00000000 		.word	0
 2960 0500 00000000 		.word	0
 2961 0504 00000000 		.word	0
 2962 0508 00000000 		.word	0
 2963 050c 00000000 		.word	0
 2964 0510 00000000 		.word	0
 2965 0514 01000000 		.word	1
 2966 0518 02000000 		.word	2
 2967 051c 01000000 		.word	1
 2968 0520 00000000 		.word	0
 2969 0524 00000000 		.word	0
 2970 0528 00000000 		.word	0
 2971 052c 01000000 		.word	1
 2972 0530 00000000 		.word	0
 2973 0534 00000000 		.word	0
 2974 0538 00000000 		.word	0
 2975 053c 00000000 		.word	0
 2976 0540 00000000 		.word	0
 2977 0544 00000000 		.word	0
 2978 0548 01000000 		.word	1
 2979 054c 01000000 		.word	1
 2980 0550 00000000 		.word	0
 2981 0554 00000000 		.word	0
 2982 0558 02000000 		.word	2
 2983 055c 00000000 		.word	0
 2984 0560 00000000 		.word	0
 2985 0564 00000000 		.word	0
 2986 0568 01000000 		.word	1
 2987 056c 00000000 		.word	0
 2988 0570 00000000 		.word	0
 2989 0574 00000000 		.word	0
 2990 0578 00000000 		.word	0
 2991 057c 00000000 		.word	0
 2992 0580 00000000 		.word	0
 2993 0584 01000000 		.word	1
 2994 0588 00000000 		.word	0
 2995 058c 00000000 		.word	0
 2996 0590 00000000 		.word	0
 2997 0594 01000000 		.word	1
 2998 0598 02000000 		.word	2
 2999 059c 01000000 		.word	1
 3000 05a0 00000000 		.word	0
 3001 05a4 00000000 		.word	0
 3002 05a8 00000000 		.word	0
 3003 05ac 00000000 		.word	0
 3004 05b0 00000000 		.word	0
 3005 05b4 00000000 		.word	0
 3006 05b8 00000000 		.word	0
 3007 05bc 00000000 		.word	0
 3008 05c0 00000000 		.word	0
 3009 05c4 00000000 		.word	0
 3010 05c8 01000000 		.word	1
 3011 05cc 00000000 		.word	0
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 64


 3012 05d0 00000000 		.word	0
 3013 05d4 00000000 		.word	0
 3014 05d8 02000000 		.word	2
 3015 05dc 00000000 		.word	0
 3016 05e0 00000000 		.word	0
 3017 05e4 01000000 		.word	1
 3018 05e8 01000000 		.word	1
 3019 05ec 00000000 		.word	0
 3020 05f0 00000000 		.word	0
 3021 05f4 00000000 		.word	0
 3022 05f8 00000000 		.word	0
 3023 05fc 00000000 		.word	0
 3024 0600 00000000 		.word	0
 3025 0604 00000000 		.word	0
 3026 0608 00000000 		.word	0
 3027 060c 00000000 		.word	0
 3028 0610 00000000 		.word	0
 3029 0614 01000000 		.word	1
 3030 0618 02000000 		.word	2
 3031 061c 01000000 		.word	1
 3032 0620 00000000 		.word	0
 3033 0624 00000000 		.word	0
 3034 0628 01000000 		.word	1
 3035 062c 00000000 		.word	0
 3036 0630 00000000 		.word	0
 3037 0634 00000000 		.word	0
 3038 0638 00000000 		.word	0
 3039 063c 00000000 		.word	0
 3040 0640 00000000 		.word	0
 3041 0644 00000000 		.word	0
 3042 0648 01000000 		.word	1
 3043 064c 00000000 		.word	0
 3044 0650 00000000 		.word	0
 3045 0654 00000000 		.word	0
 3046 0658 02000000 		.word	2
 3047 065c 01000000 		.word	1
 3048 0660 00000000 		.word	0
 3049 0664 00000000 		.word	0
 3050 0668 01000000 		.word	1
 3051 066c 00000000 		.word	0
 3052 0670 00000000 		.word	0
 3053 0674 00000000 		.word	0
 3054 0678 00000000 		.word	0
 3055 067c 00000000 		.word	0
 3056 0680 00000000 		.word	0
 3057 0684 00000000 		.word	0
 3058 0688 01000000 		.word	1
 3059 068c 00000000 		.word	0
 3060 0690 00000000 		.word	0
 3061 0694 01000000 		.word	1
 3062 0698 02000000 		.word	2
 3063 069c 01000000 		.word	1
 3064 06a0 00000000 		.word	0
 3065 06a4 00000000 		.word	0
 3066 06a8 00000000 		.word	0
 3067 06ac 00000000 		.word	0
 3068 06b0 00000000 		.word	0
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 65


 3069 06b4 00000000 		.word	0
 3070 06b8 00000000 		.word	0
 3071 06bc 00000000 		.word	0
 3072 06c0 00000000 		.word	0
 3073 06c4 00000000 		.word	0
 3074 06c8 01000000 		.word	1
 3075 06cc 00000000 		.word	0
 3076 06d0 00000000 		.word	0
 3077 06d4 01000000 		.word	1
 3078 06d8 02000000 		.word	2
 3079 06dc 00000000 		.word	0
 3080 06e0 00000000 		.word	0
 3081 06e4 00000000 		.word	0
 3082 06e8 01000000 		.word	1
 3083 06ec 00000000 		.word	0
 3084 06f0 00000000 		.word	0
 3085 06f4 00000000 		.word	0
 3086 06f8 00000000 		.word	0
 3087 06fc 00000000 		.word	0
 3088              		.text
 3089              	.Letext0:
 3090              		.file 2 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-m
 3091              		.file 3 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-m
 3092              		.file 4 "Core/Src/../Inc/piece.h"
 3093              		.file 5 "Core/Src/../Inc/board.h"
 3094              		.file 6 "Core/Src/../Inc/shapes.h"
 3095              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_dma.h"
 3096              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h"
 3097              		.file 9 "Core/Src/../Inc/../Inc/../Inc/5x5_font.h"
 3098              		.file 10 "Core/Src/../Inc/../Inc/ILI9341_Driver.h"
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 66


DEFINED SYMBOLS
                            *ABS*:00000000 board.c
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:18     .text.flood:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:26     .text.flood:00000000 flood
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:176    .text.flood:000000d8 $d
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:181    .text.floodB:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:188    .text.floodB:00000000 floodB
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:355    .text.floodB:000000ec $d
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:360    .text.floodFill:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:367    .text.floodFill:00000000 floodFill
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:451    .text.initBoard:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:458    .text.initBoard:00000000 initBoard
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:516    .text.drawPiece:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:523    .text.drawPiece:00000000 drawPiece
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:588    .text.drawPiece:00000032 $d
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:700    .text.clearPiece:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:707    .text.clearPiece:00000000 clearPiece
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:790    .text.setCurrentPiece:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:797    .text.setCurrentPiece:00000000 setCurrentPiece
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:814    .text.newPiece:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:821    .text.newPiece:00000000 newPiece
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:869    .text.getCurrentPiece:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:876    .text.getCurrentPiece:00000000 getCurrentPiece
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:894    .text.isCurrentPieceMovable:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:901    .text.isCurrentPieceMovable:00000000 isCurrentPieceMovable
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:1026   .text.isCurrentPieceRotable:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:1033   .text.isCurrentPieceRotable:00000000 isCurrentPieceRotable
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:1157   .text.moveCurrentPieceDown:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:1164   .text.moveCurrentPieceDown:00000000 moveCurrentPieceDown
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:1237   .text.moveCurrentPieceLeft:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:1244   .text.moveCurrentPieceLeft:00000000 moveCurrentPieceLeft
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:1314   .text.moveCurrentPieceRight:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:1321   .text.moveCurrentPieceRight:00000000 moveCurrentPieceRight
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:1391   .text.rotateCurrentPieceLeft:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:1398   .text.rotateCurrentPieceLeft:00000000 rotateCurrentPieceLeft
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:1469   .text.rotateCurrentPieceRight:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:1476   .text.rotateCurrentPieceRight:00000000 rotateCurrentPieceRight
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:1547   .text.deleteLine:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:1554   .text.deleteLine:00000000 deleteLine
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:1634   .text.deletePossibleLines:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:1641   .text.deletePossibleLines:00000000 deletePossibleLines
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:1737   .text.dropCurrentPiece:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:1744   .text.dropCurrentPiece:00000000 dropCurrentPiece
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:1813   .text.isCurrentPieceFallen:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:1820   .text.isCurrentPieceFallen:00000000 isCurrentPieceFallen
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:1878   .text.moveCurrentPieceDownBot:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:1885   .text.moveCurrentPieceDownBot:00000000 moveCurrentPieceDownBot
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:1924   .text.isGameOver:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:1931   .text.isGameOver:00000000 isGameOver
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:1984   .text.print:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:1991   .text.print:00000000 print
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:2087   .text.print:00000078 $d
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:2095   .text.print:00000098 $t
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:2186   .text.print:000000d4 $d
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:2192   .text.printBorders:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:2199   .text.printBorders:00000000 printBorders
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:2279   .text.printBorders:00000060 $d
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s 			page 67


C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:2284   .text.printNextPiece:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:2291   .text.printNextPiece:00000000 printNextPiece
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:2331   .text.printNextPiece:0000002e $d
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:2558   .text.printNextPiece:00000160 $d
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:2563   .text.clear:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:2570   .text.clear:00000000 clear
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:2628   .bss.previousArea.0:00000000 $d
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:2632   .bss.previousArea.0:00000000 previousArea.0
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:2635   .rodata.PIECES:00000000 $d
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:2639   .rodata.PIECES:00000000 PIECES
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:595    .text.drawPiece:00000039 $d
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:595    .text.drawPiece:0000003a $t
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:2338   .text.printNextPiece:00000035 $d
C:\Users\Paul\AppData\Local\Temp\ccOGX8Gc.s:2338   .text.printNextPiece:00000036 $t

UNDEFINED SYMBOLS
getPosX
getPosY
getKind
getOrientation
setColor
getColor
setPosX
setPosY
setOrientation
fillRect
TFTWIDTH
