ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"board.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.flood,"ax",%progbits
  18              		.align	1
  19              		.global	flood
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	flood:
  27              	.LVL0:
  28              	.LFB737:
  29              		.file 1 "Core/Src/board.c"
   1:Core/Src/board.c **** /* board.cpp */
   2:Core/Src/board.c **** #include "../Inc/board.h"
   3:Core/Src/board.c **** #include "../Inc/main.h"
   4:Core/Src/board.c ****  
   5:Core/Src/board.c **** void flood(Board * board, int i, int j, int px, int py, int k, int o, int value, bool visited[][SIZ
   6:Core/Src/board.c **** {
  30              		.loc 1 6 1 view -0
  31              		.cfi_startproc
  32              		@ args = 20, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 6 1 is_stmt 0 view .LVU1
  35 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 24
  38              		.cfi_offset 4, -24
  39              		.cfi_offset 5, -20
  40              		.cfi_offset 6, -16
  41              		.cfi_offset 7, -12
  42              		.cfi_offset 8, -8
  43              		.cfi_offset 14, -4
  44 0004 86B0     		sub	sp, sp, #24
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 48
  47 0006 0C9D     		ldr	r5, [sp, #48]
   7:Core/Src/board.c ****     if(px < 0 || px >= SIZE || py < 0 || py >= SIZE || visited[px][py] || PIECES[k][o][px][py] == F
  48              		.loc 1 7 5 is_stmt 1 view .LVU2
  49              		.loc 1 7 7 is_stmt 0 view .LVU3
  50 0008 032B     		cmp	r3, #3
  51 000a 19D8     		bhi	.L1
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 2


  52 000c 8046     		mov	r8, r0
  53 000e 0F46     		mov	r7, r1
  54 0010 1646     		mov	r6, r2
  55 0012 1C46     		mov	r4, r3
  56              		.loc 1 7 29 discriminator 1 view .LVU4
  57 0014 002D     		cmp	r5, #0
  58 0016 13DB     		blt	.L1
  59              		.loc 1 7 39 discriminator 2 view .LVU5
  60 0018 032D     		cmp	r5, #3
  61 001a 11DC     		bgt	.L1
  62              		.loc 1 7 63 discriminator 3 view .LVU6
  63 001c 109B     		ldr	r3, [sp, #64]
  64              	.LVL1:
  65              		.loc 1 7 63 discriminator 3 view .LVU7
  66 001e 03EB0412 		add	r2, r3, r4, lsl #4
  67              	.LVL2:
  68              		.loc 1 7 67 discriminator 3 view .LVU8
  69 0022 52F82530 		ldr	r3, [r2, r5, lsl #2]
  70              		.loc 1 7 53 discriminator 3 view .LVU9
  71 0026 5BB9     		cbnz	r3, .L1
  72              		.loc 1 7 91 discriminator 4 view .LVU10
  73 0028 0E9B     		ldr	r3, [sp, #56]
  74 002a 0D99     		ldr	r1, [sp, #52]
  75              	.LVL3:
  76              		.loc 1 7 91 discriminator 4 view .LVU11
  77 002c 03EB8103 		add	r3, r3, r1, lsl #2
  78 0030 04EB8303 		add	r3, r4, r3, lsl #2
  79 0034 05EB8303 		add	r3, r5, r3, lsl #2
  80 0038 2749     		ldr	r1, .L5
  81 003a 51F82330 		ldr	r3, [r1, r3, lsl #2]
  82              		.loc 1 7 72 discriminator 4 view .LVU12
  83 003e 13B9     		cbnz	r3, .L4
  84              	.LVL4:
  85              	.L1:
   8:Core/Src/board.c ****         return;
   9:Core/Src/board.c ****     visited[px][py] = true;
  10:Core/Src/board.c **** 
  11:Core/Src/board.c ****     board->area[j][i] = value;
  12:Core/Src/board.c ****     flood(board, i, j - 1, px, py - 1, k, o, value, visited);
  13:Core/Src/board.c ****     flood(board, i + 1, j, px + 1, py, k, o, value, visited);
  14:Core/Src/board.c ****     flood(board, i, j + 1, px, py + 1, k, o, value, visited);
  15:Core/Src/board.c ****     flood(board, i - 1, j, px - 1, py, k, o, value, visited);
  16:Core/Src/board.c **** }
  86              		.loc 1 16 1 view .LVU13
  87 0040 06B0     		add	sp, sp, #24
  88              	.LCFI2:
  89              		.cfi_remember_state
  90              		.cfi_def_cfa_offset 24
  91              		@ sp needed
  92 0042 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
  93              	.LVL5:
  94              	.L4:
  95              	.LCFI3:
  96              		.cfi_restore_state
   9:Core/Src/board.c **** 
  97              		.loc 1 9 5 is_stmt 1 view .LVU14
   9:Core/Src/board.c **** 
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 3


  98              		.loc 1 9 21 is_stmt 0 view .LVU15
  99 0046 0123     		movs	r3, #1
 100 0048 42F82530 		str	r3, [r2, r5, lsl #2]
  11:Core/Src/board.c ****     flood(board, i, j - 1, px, py - 1, k, o, value, visited);
 101              		.loc 1 11 5 is_stmt 1 view .LVU16
  11:Core/Src/board.c ****     flood(board, i, j - 1, px, py - 1, k, o, value, visited);
 102              		.loc 1 11 23 is_stmt 0 view .LVU17
 103 004c 06EB8603 		add	r3, r6, r6, lsl #2
 104 0050 07EB8303 		add	r3, r7, r3, lsl #2
 105 0054 00EB8303 		add	r3, r0, r3, lsl #2
 106 0058 0F9A     		ldr	r2, [sp, #60]
 107 005a 5A60     		str	r2, [r3, #4]
  12:Core/Src/board.c ****     flood(board, i + 1, j, px + 1, py, k, o, value, visited);
 108              		.loc 1 12 5 is_stmt 1 view .LVU18
 109 005c 109B     		ldr	r3, [sp, #64]
 110 005e 0493     		str	r3, [sp, #16]
 111 0060 0392     		str	r2, [sp, #12]
 112 0062 0E9B     		ldr	r3, [sp, #56]
 113 0064 0293     		str	r3, [sp, #8]
 114 0066 0D9B     		ldr	r3, [sp, #52]
 115 0068 0193     		str	r3, [sp, #4]
 116 006a 6B1E     		subs	r3, r5, #1
 117 006c 0093     		str	r3, [sp]
 118 006e 2346     		mov	r3, r4
 119 0070 721E     		subs	r2, r6, #1
 120 0072 3946     		mov	r1, r7
 121 0074 FFF7FEFF 		bl	flood
 122              	.LVL6:
  13:Core/Src/board.c ****     flood(board, i, j + 1, px, py + 1, k, o, value, visited);
 123              		.loc 1 13 5 view .LVU19
 124 0078 109B     		ldr	r3, [sp, #64]
 125 007a 0493     		str	r3, [sp, #16]
 126 007c 0F9B     		ldr	r3, [sp, #60]
 127 007e 0393     		str	r3, [sp, #12]
 128 0080 0E9B     		ldr	r3, [sp, #56]
 129 0082 0293     		str	r3, [sp, #8]
 130 0084 0D9B     		ldr	r3, [sp, #52]
 131 0086 0193     		str	r3, [sp, #4]
 132 0088 0095     		str	r5, [sp]
 133 008a 631C     		adds	r3, r4, #1
 134 008c 3246     		mov	r2, r6
 135 008e 791C     		adds	r1, r7, #1
 136 0090 4046     		mov	r0, r8
 137 0092 FFF7FEFF 		bl	flood
 138              	.LVL7:
  14:Core/Src/board.c ****     flood(board, i - 1, j, px - 1, py, k, o, value, visited);
 139              		.loc 1 14 5 view .LVU20
 140 0096 109B     		ldr	r3, [sp, #64]
 141 0098 0493     		str	r3, [sp, #16]
 142 009a 0F9B     		ldr	r3, [sp, #60]
 143 009c 0393     		str	r3, [sp, #12]
 144 009e 0E9B     		ldr	r3, [sp, #56]
 145 00a0 0293     		str	r3, [sp, #8]
 146 00a2 0D9B     		ldr	r3, [sp, #52]
 147 00a4 0193     		str	r3, [sp, #4]
 148 00a6 6B1C     		adds	r3, r5, #1
 149 00a8 0093     		str	r3, [sp]
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 4


 150 00aa 2346     		mov	r3, r4
 151 00ac 721C     		adds	r2, r6, #1
 152 00ae 3946     		mov	r1, r7
 153 00b0 4046     		mov	r0, r8
 154 00b2 FFF7FEFF 		bl	flood
 155              	.LVL8:
  15:Core/Src/board.c **** }
 156              		.loc 1 15 5 view .LVU21
 157 00b6 109B     		ldr	r3, [sp, #64]
 158 00b8 0493     		str	r3, [sp, #16]
 159 00ba 0F9B     		ldr	r3, [sp, #60]
 160 00bc 0393     		str	r3, [sp, #12]
 161 00be 0E9B     		ldr	r3, [sp, #56]
 162 00c0 0293     		str	r3, [sp, #8]
 163 00c2 0D9B     		ldr	r3, [sp, #52]
 164 00c4 0193     		str	r3, [sp, #4]
 165 00c6 0095     		str	r5, [sp]
 166 00c8 631E     		subs	r3, r4, #1
 167 00ca 3246     		mov	r2, r6
 168 00cc 791E     		subs	r1, r7, #1
 169 00ce 4046     		mov	r0, r8
 170 00d0 FFF7FEFF 		bl	flood
 171              	.LVL9:
 172 00d4 B4E7     		b	.L1
 173              	.L6:
 174 00d6 00BF     		.align	2
 175              	.L5:
 176 00d8 00000000 		.word	.LANCHOR0
 177              		.cfi_endproc
 178              	.LFE737:
 180              		.section	.text.floodB,"ax",%progbits
 181              		.align	1
 182              		.global	floodB
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 186              		.fpu fpv4-sp-d16
 188              	floodB:
 189              	.LVL10:
 190              	.LFB738:
  17:Core/Src/board.c ****  
  18:Core/Src/board.c **** void floodB(Board * board, int i, int j, int px, int py, int k, int o, bool * flag, bool visited[][
  19:Core/Src/board.c **** {
 191              		.loc 1 19 1 view -0
 192              		.cfi_startproc
 193              		@ args = 20, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              		.loc 1 19 1 is_stmt 0 view .LVU23
 196 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 197              	.LCFI4:
 198              		.cfi_def_cfa_offset 24
 199              		.cfi_offset 4, -24
 200              		.cfi_offset 5, -20
 201              		.cfi_offset 6, -16
 202              		.cfi_offset 7, -12
 203              		.cfi_offset 8, -8
 204              		.cfi_offset 14, -4
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 5


 205 0004 86B0     		sub	sp, sp, #24
 206              	.LCFI5:
 207              		.cfi_def_cfa_offset 48
 208 0006 0C9D     		ldr	r5, [sp, #48]
  20:Core/Src/board.c ****     if(px < 0 || px >= SIZE || py < 0 || py >= SIZE || visited[px][py] || PIECES[k][o][px][py] == F
 209              		.loc 1 20 5 is_stmt 1 view .LVU24
 210              		.loc 1 20 7 is_stmt 0 view .LVU25
 211 0008 032B     		cmp	r3, #3
 212 000a 2DD8     		bhi	.L7
 213 000c 8046     		mov	r8, r0
 214 000e 0F46     		mov	r7, r1
 215 0010 1646     		mov	r6, r2
 216 0012 1C46     		mov	r4, r3
 217              		.loc 1 20 29 discriminator 1 view .LVU26
 218 0014 002D     		cmp	r5, #0
 219 0016 27DB     		blt	.L7
 220              		.loc 1 20 39 discriminator 2 view .LVU27
 221 0018 032D     		cmp	r5, #3
 222 001a 25DC     		bgt	.L7
 223              		.loc 1 20 63 discriminator 3 view .LVU28
 224 001c 109B     		ldr	r3, [sp, #64]
 225              	.LVL11:
 226              		.loc 1 20 63 discriminator 3 view .LVU29
 227 001e 03EB0412 		add	r2, r3, r4, lsl #4
 228              	.LVL12:
 229              		.loc 1 20 67 discriminator 3 view .LVU30
 230 0022 52F82530 		ldr	r3, [r2, r5, lsl #2]
 231              		.loc 1 20 53 discriminator 3 view .LVU31
 232 0026 FBB9     		cbnz	r3, .L7
 233              		.loc 1 20 91 discriminator 4 view .LVU32
 234 0028 0E9B     		ldr	r3, [sp, #56]
 235 002a 0D99     		ldr	r1, [sp, #52]
 236              	.LVL13:
 237              		.loc 1 20 91 discriminator 4 view .LVU33
 238 002c 03EB8103 		add	r3, r3, r1, lsl #2
 239 0030 04EB8303 		add	r3, r4, r3, lsl #2
 240 0034 05EB8303 		add	r3, r5, r3, lsl #2
 241 0038 2C49     		ldr	r1, .L12
 242 003a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 243              		.loc 1 20 72 discriminator 4 view .LVU34
 244 003e 9BB1     		cbz	r3, .L7
  21:Core/Src/board.c ****         return;
  22:Core/Src/board.c ****  
  23:Core/Src/board.c ****     visited[px][py] = true;
 245              		.loc 1 23 5 is_stmt 1 view .LVU35
 246              		.loc 1 23 21 is_stmt 0 view .LVU36
 247 0040 0123     		movs	r3, #1
 248 0042 42F82530 		str	r3, [r2, r5, lsl #2]
  24:Core/Src/board.c ****  
  25:Core/Src/board.c ****     if(i < 0 || i >= BOARD_HEIGHT || j < 0 || j >= BOARD_WIDTH || board->area[j][i] != FREE )
 249              		.loc 1 25 5 is_stmt 1 view .LVU37
 250              		.loc 1 25 7 is_stmt 0 view .LVU38
 251 0046 132F     		cmp	r7, #19
 252 0048 0BD8     		bhi	.L9
 253              		.loc 1 25 35 discriminator 1 view .LVU39
 254 004a 002E     		cmp	r6, #0
 255 004c 09DB     		blt	.L9
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 6


 256              		.loc 1 25 44 discriminator 2 view .LVU40
 257 004e 092E     		cmp	r6, #9
 258 0050 07DC     		bgt	.L9
 259              		.loc 1 25 81 discriminator 3 view .LVU41
 260 0052 06EB8603 		add	r3, r6, r6, lsl #2
 261 0056 07EB8303 		add	r3, r7, r3, lsl #2
 262 005a 00EB8303 		add	r3, r0, r3, lsl #2
 263 005e 5B68     		ldr	r3, [r3, #4]
 264              		.loc 1 25 64 discriminator 3 view .LVU42
 265 0060 2BB1     		cbz	r3, .L10
 266              	.L9:
  26:Core/Src/board.c ****     {
  27:Core/Src/board.c ****         *flag = false;
 267              		.loc 1 27 9 is_stmt 1 view .LVU43
 268              		.loc 1 27 15 is_stmt 0 view .LVU44
 269 0062 0023     		movs	r3, #0
 270 0064 0F9A     		ldr	r2, [sp, #60]
 271 0066 1360     		str	r3, [r2]
  28:Core/Src/board.c ****         return;
 272              		.loc 1 28 9 is_stmt 1 view .LVU45
 273              	.LVL14:
 274              	.L7:
  29:Core/Src/board.c ****     }
  30:Core/Src/board.c ****  
  31:Core/Src/board.c ****     floodB(board, i, j - 1, px, py - 1, k, o, flag, visited);
  32:Core/Src/board.c ****     floodB(board, i + 1, j, px + 1, py, k, o, flag, visited);
  33:Core/Src/board.c ****     floodB(board, i, j + 1, px, py + 1, k, o, flag, visited);
  34:Core/Src/board.c ****     floodB(board, i - 1, j, px - 1, py, k, o, flag, visited);
  35:Core/Src/board.c **** }
 275              		.loc 1 35 1 is_stmt 0 view .LVU46
 276 0068 06B0     		add	sp, sp, #24
 277              	.LCFI6:
 278              		.cfi_remember_state
 279              		.cfi_def_cfa_offset 24
 280              		@ sp needed
 281 006a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 282              	.LVL15:
 283              	.L10:
 284              	.LCFI7:
 285              		.cfi_restore_state
  31:Core/Src/board.c ****     floodB(board, i + 1, j, px + 1, py, k, o, flag, visited);
 286              		.loc 1 31 5 is_stmt 1 view .LVU47
 287 006e 109B     		ldr	r3, [sp, #64]
 288 0070 0493     		str	r3, [sp, #16]
 289 0072 0F9B     		ldr	r3, [sp, #60]
 290 0074 0393     		str	r3, [sp, #12]
 291 0076 0E9B     		ldr	r3, [sp, #56]
 292 0078 0293     		str	r3, [sp, #8]
 293 007a 0D9B     		ldr	r3, [sp, #52]
 294 007c 0193     		str	r3, [sp, #4]
 295 007e 6B1E     		subs	r3, r5, #1
 296 0080 0093     		str	r3, [sp]
 297 0082 2346     		mov	r3, r4
 298 0084 721E     		subs	r2, r6, #1
 299 0086 3946     		mov	r1, r7
 300 0088 FFF7FEFF 		bl	floodB
 301              	.LVL16:
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 7


  32:Core/Src/board.c ****     floodB(board, i, j + 1, px, py + 1, k, o, flag, visited);
 302              		.loc 1 32 5 view .LVU48
 303 008c 109B     		ldr	r3, [sp, #64]
 304 008e 0493     		str	r3, [sp, #16]
 305 0090 0F9B     		ldr	r3, [sp, #60]
 306 0092 0393     		str	r3, [sp, #12]
 307 0094 0E9B     		ldr	r3, [sp, #56]
 308 0096 0293     		str	r3, [sp, #8]
 309 0098 0D9B     		ldr	r3, [sp, #52]
 310 009a 0193     		str	r3, [sp, #4]
 311 009c 0095     		str	r5, [sp]
 312 009e 631C     		adds	r3, r4, #1
 313 00a0 3246     		mov	r2, r6
 314 00a2 791C     		adds	r1, r7, #1
 315 00a4 4046     		mov	r0, r8
 316 00a6 FFF7FEFF 		bl	floodB
 317              	.LVL17:
  33:Core/Src/board.c ****     floodB(board, i - 1, j, px - 1, py, k, o, flag, visited);
 318              		.loc 1 33 5 view .LVU49
 319 00aa 109B     		ldr	r3, [sp, #64]
 320 00ac 0493     		str	r3, [sp, #16]
 321 00ae 0F9B     		ldr	r3, [sp, #60]
 322 00b0 0393     		str	r3, [sp, #12]
 323 00b2 0E9B     		ldr	r3, [sp, #56]
 324 00b4 0293     		str	r3, [sp, #8]
 325 00b6 0D9B     		ldr	r3, [sp, #52]
 326 00b8 0193     		str	r3, [sp, #4]
 327 00ba 6B1C     		adds	r3, r5, #1
 328 00bc 0093     		str	r3, [sp]
 329 00be 2346     		mov	r3, r4
 330 00c0 721C     		adds	r2, r6, #1
 331 00c2 3946     		mov	r1, r7
 332 00c4 4046     		mov	r0, r8
 333 00c6 FFF7FEFF 		bl	floodB
 334              	.LVL18:
  34:Core/Src/board.c **** }
 335              		.loc 1 34 5 view .LVU50
 336 00ca 109B     		ldr	r3, [sp, #64]
 337 00cc 0493     		str	r3, [sp, #16]
 338 00ce 0F9B     		ldr	r3, [sp, #60]
 339 00d0 0393     		str	r3, [sp, #12]
 340 00d2 0E9B     		ldr	r3, [sp, #56]
 341 00d4 0293     		str	r3, [sp, #8]
 342 00d6 0D9B     		ldr	r3, [sp, #52]
 343 00d8 0193     		str	r3, [sp, #4]
 344 00da 0095     		str	r5, [sp]
 345 00dc 631E     		subs	r3, r4, #1
 346 00de 3246     		mov	r2, r6
 347 00e0 791E     		subs	r1, r7, #1
 348 00e2 4046     		mov	r0, r8
 349 00e4 FFF7FEFF 		bl	floodB
 350              	.LVL19:
 351 00e8 BEE7     		b	.L7
 352              	.L13:
 353 00ea 00BF     		.align	2
 354              	.L12:
 355 00ec 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 8


 356              		.cfi_endproc
 357              	.LFE738:
 359              		.section	.text.floodFill,"ax",%progbits
 360              		.align	1
 361              		.global	floodFill
 362              		.syntax unified
 363              		.thumb
 364              		.thumb_func
 365              		.fpu fpv4-sp-d16
 367              	floodFill:
 368              	.LVL20:
 369              	.LFB739:
  36:Core/Src/board.c ****  
  37:Core/Src/board.c **** void floodFill(Board * board, int i, int j, int px, int py, int k, int o, int value)
  38:Core/Src/board.c **** {
 370              		.loc 1 38 1 view -0
 371              		.cfi_startproc
 372              		@ args = 16, pretend = 0, frame = 64
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374              		.loc 1 38 1 is_stmt 0 view .LVU52
 375 0000 30B5     		push	{r4, r5, lr}
 376              	.LCFI8:
 377              		.cfi_def_cfa_offset 12
 378              		.cfi_offset 4, -12
 379              		.cfi_offset 5, -8
 380              		.cfi_offset 14, -4
 381 0002 97B0     		sub	sp, sp, #92
 382              	.LCFI9:
 383              		.cfi_def_cfa_offset 104
  39:Core/Src/board.c ****     bool visited[SIZE][SIZE];
 384              		.loc 1 39 5 is_stmt 1 view .LVU53
  40:Core/Src/board.c ****  
  41:Core/Src/board.c ****     for(int l = 0; l < SIZE; ++l)
 385              		.loc 1 41 5 view .LVU54
 386              	.LBB2:
 387              		.loc 1 41 9 view .LVU55
 388              	.LVL21:
 389              		.loc 1 41 13 is_stmt 0 view .LVU56
 390 0004 0025     		movs	r5, #0
 391              		.loc 1 41 5 view .LVU57
 392 0006 0DE0     		b	.L15
 393              	.LVL22:
 394              	.L16:
 395              	.LBB3:
  42:Core/Src/board.c ****         for(int m = 0; m < SIZE; ++m)
  43:Core/Src/board.c ****             visited[l][m] = false;
 396              		.loc 1 43 13 is_stmt 1 discriminator 3 view .LVU58
 397              		.loc 1 43 27 is_stmt 0 discriminator 3 view .LVU59
 398 0008 0CEB850E 		add	lr, ip, r5, lsl #2
 399 000c 16AC     		add	r4, sp, #88
 400 000e 04EB8E0E 		add	lr, r4, lr, lsl #2
 401 0012 0024     		movs	r4, #0
 402 0014 4EF8404C 		str	r4, [lr, #-64]
  42:Core/Src/board.c ****         for(int m = 0; m < SIZE; ++m)
 403              		.loc 1 42 34 is_stmt 1 discriminator 3 view .LVU60
 404 0018 0CF1010C 		add	ip, ip, #1
 405              	.LVL23:
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 9


 406              	.L17:
  42:Core/Src/board.c ****         for(int m = 0; m < SIZE; ++m)
 407              		.loc 1 42 24 discriminator 1 view .LVU61
  42:Core/Src/board.c ****         for(int m = 0; m < SIZE; ++m)
 408              		.loc 1 42 9 is_stmt 0 discriminator 1 view .LVU62
 409 001c BCF1030F 		cmp	ip, #3
 410 0020 F2DD     		ble	.L16
 411              	.LBE3:
  41:Core/Src/board.c ****         for(int m = 0; m < SIZE; ++m)
 412              		.loc 1 41 30 is_stmt 1 discriminator 2 view .LVU63
 413 0022 0135     		adds	r5, r5, #1
 414              	.LVL24:
 415              	.L15:
  41:Core/Src/board.c ****         for(int m = 0; m < SIZE; ++m)
 416              		.loc 1 41 20 discriminator 1 view .LVU64
  41:Core/Src/board.c ****         for(int m = 0; m < SIZE; ++m)
 417              		.loc 1 41 5 is_stmt 0 discriminator 1 view .LVU65
 418 0024 032D     		cmp	r5, #3
 419 0026 02DC     		bgt	.L20
 420              	.LBB4:
  42:Core/Src/board.c ****         for(int m = 0; m < SIZE; ++m)
 421              		.loc 1 42 17 view .LVU66
 422 0028 4FF0000C 		mov	ip, #0
 423 002c F6E7     		b	.L17
 424              	.L20:
 425              	.LBE4:
 426              	.LBE2:
  44:Core/Src/board.c ****     flood(board, i, j, px, py, k, o, value, visited);
 427              		.loc 1 44 5 is_stmt 1 view .LVU67
 428 002e 06AC     		add	r4, sp, #24
 429 0030 0494     		str	r4, [sp, #16]
 430 0032 1D9C     		ldr	r4, [sp, #116]
 431 0034 0394     		str	r4, [sp, #12]
 432 0036 1C9C     		ldr	r4, [sp, #112]
 433 0038 0294     		str	r4, [sp, #8]
 434 003a 1B9C     		ldr	r4, [sp, #108]
 435 003c 0194     		str	r4, [sp, #4]
 436 003e 1A9C     		ldr	r4, [sp, #104]
 437 0040 0094     		str	r4, [sp]
 438 0042 FFF7FEFF 		bl	flood
 439              	.LVL25:
  45:Core/Src/board.c **** }
 440              		.loc 1 45 1 is_stmt 0 view .LVU68
 441 0046 17B0     		add	sp, sp, #92
 442              	.LCFI10:
 443              		.cfi_def_cfa_offset 12
 444              		@ sp needed
 445 0048 30BD     		pop	{r4, r5, pc}
 446              		.loc 1 45 1 view .LVU69
 447              		.cfi_endproc
 448              	.LFE739:
 450              		.section	.text.initBoard,"ax",%progbits
 451              		.align	1
 452              		.global	initBoard
 453              		.syntax unified
 454              		.thumb
 455              		.thumb_func
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 10


 456              		.fpu fpv4-sp-d16
 458              	initBoard:
 459              	.LVL26:
 460              	.LFB740:
  46:Core/Src/board.c ****  
  47:Core/Src/board.c **** void initBoard(Board * board)
  48:Core/Src/board.c **** {
 461              		.loc 1 48 1 is_stmt 1 view -0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 0
 464              		@ frame_needed = 0, uses_anonymous_args = 0
 465              		@ link register save eliminated.
 466              		.loc 1 48 1 is_stmt 0 view .LVU71
 467 0000 8446     		mov	ip, r0
  49:Core/Src/board.c ****     //board = malloc(sizeof(Board));
  50:Core/Src/board.c ****     //board->area = malloc(sizeof(int)*BOARD_HEIGHT*BOARD_WIDTH);
  51:Core/Src/board.c ****     for(int i = 0; i < BOARD_WIDTH; ++i)
 468              		.loc 1 51 5 is_stmt 1 view .LVU72
 469              	.LBB5:
 470              		.loc 1 51 9 view .LVU73
 471              	.LVL27:
 472              		.loc 1 51 13 is_stmt 0 view .LVU74
 473 0002 0021     		movs	r1, #0
 474              		.loc 1 51 5 view .LVU75
 475 0004 0BE0     		b	.L22
 476              	.LVL28:
 477              	.L23:
 478              	.LBB6:
  52:Core/Src/board.c ****         for(int j = 0; j < BOARD_HEIGHT; ++j)
  53:Core/Src/board.c ****             board->area[i][j] = FREE;
 479              		.loc 1 53 13 is_stmt 1 discriminator 3 view .LVU76
 480              		.loc 1 53 31 is_stmt 0 discriminator 3 view .LVU77
 481 0006 01EB8103 		add	r3, r1, r1, lsl #2
 482 000a 02EB8303 		add	r3, r2, r3, lsl #2
 483 000e 0CEB8303 		add	r3, ip, r3, lsl #2
 484 0012 0020     		movs	r0, #0
 485 0014 5860     		str	r0, [r3, #4]
  52:Core/Src/board.c ****         for(int j = 0; j < BOARD_HEIGHT; ++j)
 486              		.loc 1 52 42 is_stmt 1 discriminator 3 view .LVU78
 487 0016 0132     		adds	r2, r2, #1
 488              	.LVL29:
 489              	.L24:
  52:Core/Src/board.c ****         for(int j = 0; j < BOARD_HEIGHT; ++j)
 490              		.loc 1 52 24 discriminator 1 view .LVU79
  52:Core/Src/board.c ****         for(int j = 0; j < BOARD_HEIGHT; ++j)
 491              		.loc 1 52 9 is_stmt 0 discriminator 1 view .LVU80
 492 0018 132A     		cmp	r2, #19
 493 001a F4DD     		ble	.L23
 494              	.LBE6:
  51:Core/Src/board.c ****         for(int j = 0; j < BOARD_HEIGHT; ++j)
 495              		.loc 1 51 37 is_stmt 1 discriminator 2 view .LVU81
 496 001c 0131     		adds	r1, r1, #1
 497              	.LVL30:
 498              	.L22:
  51:Core/Src/board.c ****         for(int j = 0; j < BOARD_HEIGHT; ++j)
 499              		.loc 1 51 20 discriminator 1 view .LVU82
  51:Core/Src/board.c ****         for(int j = 0; j < BOARD_HEIGHT; ++j)
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 11


 500              		.loc 1 51 5 is_stmt 0 discriminator 1 view .LVU83
 501 001e 0929     		cmp	r1, #9
 502 0020 01DC     		bgt	.L26
 503              	.LBB7:
  52:Core/Src/board.c ****         for(int j = 0; j < BOARD_HEIGHT; ++j)
 504              		.loc 1 52 17 view .LVU84
 505 0022 0022     		movs	r2, #0
 506 0024 F8E7     		b	.L24
 507              	.L26:
 508              	.LBE7:
 509              	.LBE5:
  54:Core/Src/board.c ****     
  55:Core/Src/board.c **** }
 510              		.loc 1 55 1 view .LVU85
 511 0026 7047     		bx	lr
 512              		.cfi_endproc
 513              	.LFE740:
 515              		.section	.text.drawPiece,"ax",%progbits
 516              		.align	1
 517              		.global	drawPiece
 518              		.syntax unified
 519              		.thumb
 520              		.thumb_func
 521              		.fpu fpv4-sp-d16
 523              	drawPiece:
 524              	.LVL31:
 525              	.LFB741:
  56:Core/Src/board.c ****  
  57:Core/Src/board.c **** void drawPiece(Board * board, Piece * piece)
  58:Core/Src/board.c **** {
 526              		.loc 1 58 1 is_stmt 1 view -0
 527              		.cfi_startproc
 528              		@ args = 0, pretend = 0, frame = 0
 529              		@ frame_needed = 0, uses_anonymous_args = 0
 530              		.loc 1 58 1 is_stmt 0 view .LVU87
 531 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 532              	.LCFI11:
 533              		.cfi_def_cfa_offset 28
 534              		.cfi_offset 4, -28
 535              		.cfi_offset 5, -24
 536              		.cfi_offset 6, -20
 537              		.cfi_offset 7, -16
 538              		.cfi_offset 8, -12
 539              		.cfi_offset 9, -8
 540              		.cfi_offset 14, -4
 541 0004 85B0     		sub	sp, sp, #20
 542              	.LCFI12:
 543              		.cfi_def_cfa_offset 48
 544 0006 0646     		mov	r6, r0
 545 0008 0C46     		mov	r4, r1
  59:Core/Src/board.c ****     int i = getPosX(piece);
 546              		.loc 1 59 5 is_stmt 1 view .LVU88
 547              		.loc 1 59 13 is_stmt 0 view .LVU89
 548 000a 0846     		mov	r0, r1
 549              	.LVL32:
 550              		.loc 1 59 13 view .LVU90
 551 000c FFF7FEFF 		bl	getPosX
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 12


 552              	.LVL33:
 553              		.loc 1 59 13 view .LVU91
 554 0010 0746     		mov	r7, r0
 555              	.LVL34:
  60:Core/Src/board.c ****     int j = getPosY(piece);
 556              		.loc 1 60 5 is_stmt 1 view .LVU92
 557              		.loc 1 60 13 is_stmt 0 view .LVU93
 558 0012 2046     		mov	r0, r4
 559              	.LVL35:
 560              		.loc 1 60 13 view .LVU94
 561 0014 FFF7FEFF 		bl	getPosY
 562              	.LVL36:
 563 0018 8046     		mov	r8, r0
 564              	.LVL37:
  61:Core/Src/board.c ****  
  62:Core/Src/board.c ****     int k = getKind(piece);
 565              		.loc 1 62 5 is_stmt 1 view .LVU95
 566              		.loc 1 62 13 is_stmt 0 view .LVU96
 567 001a 2046     		mov	r0, r4
 568              	.LVL38:
 569              		.loc 1 62 13 view .LVU97
 570 001c FFF7FEFF 		bl	getKind
 571              	.LVL39:
 572 0020 0546     		mov	r5, r0
 573              	.LVL40:
  63:Core/Src/board.c ****     int o = getOrientation(piece);
 574              		.loc 1 63 5 is_stmt 1 view .LVU98
 575              		.loc 1 63 13 is_stmt 0 view .LVU99
 576 0022 2046     		mov	r0, r4
 577              	.LVL41:
 578              		.loc 1 63 13 view .LVU100
 579 0024 FFF7FEFF 		bl	getOrientation
 580              	.LVL42:
 581 0028 8146     		mov	r9, r0
 582              	.LVL43:
  64:Core/Src/board.c ****  
  65:Core/Src/board.c ****     switch(k)
 583              		.loc 1 65 5 is_stmt 1 view .LVU101
 584 002a 062D     		cmp	r5, #6
 585 002c 09D8     		bhi	.L28
 586 002e DFE805F0 		tbb	[pc, r5]
 587              	.L30:
 588 0032 24       		.byte	(.L36-.L30)/2
 589 0033 04       		.byte	(.L35-.L30)/2
 590 0034 29       		.byte	(.L34-.L30)/2
 591 0035 33       		.byte	(.L33-.L30)/2
 592 0036 1F       		.byte	(.L32-.L30)/2
 593 0037 1A       		.byte	(.L31-.L30)/2
 594 0038 2E       		.byte	(.L29-.L30)/2
 595 0039 00       		.p2align 1
 596              	.L35:
  66:Core/Src/board.c ****     {
  67:Core/Src/board.c ****         case I:
  68:Core/Src/board.c ****             setColor(piece, CYA);
 597              		.loc 1 68 13 view .LVU102
 598 003a 0121     		movs	r1, #1
 599 003c 2046     		mov	r0, r4
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 13


 600              	.LVL44:
 601              		.loc 1 68 13 is_stmt 0 view .LVU103
 602 003e FFF7FEFF 		bl	setColor
 603              	.LVL45:
  69:Core/Src/board.c ****             break;
 604              		.loc 1 69 13 is_stmt 1 view .LVU104
 605              	.L28:
  70:Core/Src/board.c ****         case J:
  71:Core/Src/board.c ****             setColor(piece, BLU);
  72:Core/Src/board.c ****             break;
  73:Core/Src/board.c ****         case L:
  74:Core/Src/board.c ****             setColor(piece, ORANG);
  75:Core/Src/board.c ****             break;
  76:Core/Src/board.c ****         case O:
  77:Core/Src/board.c ****             setColor(piece, YELLO);
  78:Core/Src/board.c ****             break;
  79:Core/Src/board.c ****         case S:
  80:Core/Src/board.c ****             setColor(piece, GREE);
  81:Core/Src/board.c ****             break;
  82:Core/Src/board.c ****         case T:
  83:Core/Src/board.c ****             setColor(piece, PURPL);
  84:Core/Src/board.c ****             break;
  85:Core/Src/board.c ****         case Z:
  86:Core/Src/board.c ****             setColor(piece, RE);
  87:Core/Src/board.c ****             break;
  88:Core/Src/board.c ****         default:
  89:Core/Src/board.c ****             break;
  90:Core/Src/board.c ****     }
  91:Core/Src/board.c ****     floodFill(board, i, j, PIVOT_X, PIVOT_Y, k, o, getColor(piece));
 606              		.loc 1 91 5 view .LVU105
 607 0042 2046     		mov	r0, r4
 608 0044 FFF7FEFF 		bl	getColor
 609              	.LVL46:
 610 0048 0390     		str	r0, [sp, #12]
 611 004a CDF80890 		str	r9, [sp, #8]
 612 004e 0195     		str	r5, [sp, #4]
 613 0050 0223     		movs	r3, #2
 614 0052 0093     		str	r3, [sp]
 615 0054 0123     		movs	r3, #1
 616 0056 4246     		mov	r2, r8
 617 0058 3946     		mov	r1, r7
 618 005a 3046     		mov	r0, r6
 619 005c FFF7FEFF 		bl	floodFill
 620              	.LVL47:
  92:Core/Src/board.c **** }
 621              		.loc 1 92 1 is_stmt 0 view .LVU106
 622 0060 05B0     		add	sp, sp, #20
 623              	.LCFI13:
 624              		.cfi_remember_state
 625              		.cfi_def_cfa_offset 28
 626              		@ sp needed
 627 0062 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 628              	.LVL48:
 629              	.L31:
 630              	.LCFI14:
 631              		.cfi_restore_state
  71:Core/Src/board.c ****             break;
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 14


 632              		.loc 1 71 13 is_stmt 1 view .LVU107
 633 0066 0221     		movs	r1, #2
 634 0068 2046     		mov	r0, r4
 635              	.LVL49:
  71:Core/Src/board.c ****             break;
 636              		.loc 1 71 13 is_stmt 0 view .LVU108
 637 006a FFF7FEFF 		bl	setColor
 638              	.LVL50:
  72:Core/Src/board.c ****         case L:
 639              		.loc 1 72 13 is_stmt 1 view .LVU109
 640 006e E8E7     		b	.L28
 641              	.LVL51:
 642              	.L32:
  74:Core/Src/board.c ****             break;
 643              		.loc 1 74 13 view .LVU110
 644 0070 0321     		movs	r1, #3
 645 0072 2046     		mov	r0, r4
 646              	.LVL52:
  74:Core/Src/board.c ****             break;
 647              		.loc 1 74 13 is_stmt 0 view .LVU111
 648 0074 FFF7FEFF 		bl	setColor
 649              	.LVL53:
  75:Core/Src/board.c ****         case O:
 650              		.loc 1 75 13 is_stmt 1 view .LVU112
 651 0078 E3E7     		b	.L28
 652              	.LVL54:
 653              	.L36:
  77:Core/Src/board.c ****             break;
 654              		.loc 1 77 13 view .LVU113
 655 007a 0421     		movs	r1, #4
 656 007c 2046     		mov	r0, r4
 657              	.LVL55:
  77:Core/Src/board.c ****             break;
 658              		.loc 1 77 13 is_stmt 0 view .LVU114
 659 007e FFF7FEFF 		bl	setColor
 660              	.LVL56:
  78:Core/Src/board.c ****         case S:
 661              		.loc 1 78 13 is_stmt 1 view .LVU115
 662 0082 DEE7     		b	.L28
 663              	.LVL57:
 664              	.L34:
  80:Core/Src/board.c ****             break;
 665              		.loc 1 80 13 view .LVU116
 666 0084 0521     		movs	r1, #5
 667 0086 2046     		mov	r0, r4
 668              	.LVL58:
  80:Core/Src/board.c ****             break;
 669              		.loc 1 80 13 is_stmt 0 view .LVU117
 670 0088 FFF7FEFF 		bl	setColor
 671              	.LVL59:
  81:Core/Src/board.c ****         case T:
 672              		.loc 1 81 13 is_stmt 1 view .LVU118
 673 008c D9E7     		b	.L28
 674              	.LVL60:
 675              	.L29:
  83:Core/Src/board.c ****             break;
 676              		.loc 1 83 13 view .LVU119
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 15


 677 008e 0621     		movs	r1, #6
 678 0090 2046     		mov	r0, r4
 679              	.LVL61:
  83:Core/Src/board.c ****             break;
 680              		.loc 1 83 13 is_stmt 0 view .LVU120
 681 0092 FFF7FEFF 		bl	setColor
 682              	.LVL62:
  84:Core/Src/board.c ****         case Z:
 683              		.loc 1 84 13 is_stmt 1 view .LVU121
 684 0096 D4E7     		b	.L28
 685              	.LVL63:
 686              	.L33:
  86:Core/Src/board.c ****             break;
 687              		.loc 1 86 13 view .LVU122
 688 0098 0721     		movs	r1, #7
 689 009a 2046     		mov	r0, r4
 690              	.LVL64:
  86:Core/Src/board.c ****             break;
 691              		.loc 1 86 13 is_stmt 0 view .LVU123
 692 009c FFF7FEFF 		bl	setColor
 693              	.LVL65:
  87:Core/Src/board.c ****         default:
 694              		.loc 1 87 13 is_stmt 1 view .LVU124
 695 00a0 CFE7     		b	.L28
 696              		.cfi_endproc
 697              	.LFE741:
 699              		.section	.text.clearPiece,"ax",%progbits
 700              		.align	1
 701              		.global	clearPiece
 702              		.syntax unified
 703              		.thumb
 704              		.thumb_func
 705              		.fpu fpv4-sp-d16
 707              	clearPiece:
 708              	.LVL66:
 709              	.LFB742:
  93:Core/Src/board.c ****  
  94:Core/Src/board.c **** void clearPiece(Board * board, Piece * piece)
  95:Core/Src/board.c **** {
 710              		.loc 1 95 1 view -0
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 0
 713              		@ frame_needed = 0, uses_anonymous_args = 0
 714              		.loc 1 95 1 is_stmt 0 view .LVU126
 715 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 716              	.LCFI15:
 717              		.cfi_def_cfa_offset 24
 718              		.cfi_offset 4, -24
 719              		.cfi_offset 5, -20
 720              		.cfi_offset 6, -16
 721              		.cfi_offset 7, -12
 722              		.cfi_offset 8, -8
 723              		.cfi_offset 14, -4
 724 0004 84B0     		sub	sp, sp, #16
 725              	.LCFI16:
 726              		.cfi_def_cfa_offset 40
 727 0006 0546     		mov	r5, r0
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 16


 728 0008 0C46     		mov	r4, r1
  96:Core/Src/board.c ****     int i = getPosX(piece);
 729              		.loc 1 96 5 is_stmt 1 view .LVU127
 730              		.loc 1 96 13 is_stmt 0 view .LVU128
 731 000a 0846     		mov	r0, r1
 732              	.LVL67:
 733              		.loc 1 96 13 view .LVU129
 734 000c FFF7FEFF 		bl	getPosX
 735              	.LVL68:
 736              		.loc 1 96 13 view .LVU130
 737 0010 0646     		mov	r6, r0
 738              	.LVL69:
  97:Core/Src/board.c ****     int j = getPosY(piece);
 739              		.loc 1 97 5 is_stmt 1 view .LVU131
 740              		.loc 1 97 13 is_stmt 0 view .LVU132
 741 0012 2046     		mov	r0, r4
 742              	.LVL70:
 743              		.loc 1 97 13 view .LVU133
 744 0014 FFF7FEFF 		bl	getPosY
 745              	.LVL71:
 746 0018 0746     		mov	r7, r0
 747              	.LVL72:
  98:Core/Src/board.c ****  
  99:Core/Src/board.c ****     int k = getKind(piece);
 748              		.loc 1 99 5 is_stmt 1 view .LVU134
 749              		.loc 1 99 13 is_stmt 0 view .LVU135
 750 001a 2046     		mov	r0, r4
 751              	.LVL73:
 752              		.loc 1 99 13 view .LVU136
 753 001c FFF7FEFF 		bl	getKind
 754              	.LVL74:
 755 0020 8046     		mov	r8, r0
 756              	.LVL75:
 100:Core/Src/board.c ****     int o = getOrientation(piece);
 757              		.loc 1 100 5 is_stmt 1 view .LVU137
 758              		.loc 1 100 13 is_stmt 0 view .LVU138
 759 0022 2046     		mov	r0, r4
 760              	.LVL76:
 761              		.loc 1 100 13 view .LVU139
 762 0024 FFF7FEFF 		bl	getOrientation
 763              	.LVL77:
 101:Core/Src/board.c ****  
 102:Core/Src/board.c ****     floodFill(board, i, j, PIVOT_X, PIVOT_Y, k, o, FREE);
 764              		.loc 1 102 5 is_stmt 1 view .LVU140
 765 0028 0023     		movs	r3, #0
 766 002a 0393     		str	r3, [sp, #12]
 767 002c 0290     		str	r0, [sp, #8]
 768 002e CDF80480 		str	r8, [sp, #4]
 769 0032 0223     		movs	r3, #2
 770 0034 0093     		str	r3, [sp]
 771 0036 0123     		movs	r3, #1
 772 0038 3A46     		mov	r2, r7
 773 003a 3146     		mov	r1, r6
 774 003c 2846     		mov	r0, r5
 775              	.LVL78:
 776              		.loc 1 102 5 is_stmt 0 view .LVU141
 777 003e FFF7FEFF 		bl	floodFill
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 17


 778              	.LVL79:
 103:Core/Src/board.c **** }
 779              		.loc 1 103 1 view .LVU142
 780 0042 04B0     		add	sp, sp, #16
 781              	.LCFI17:
 782              		.cfi_def_cfa_offset 24
 783              		@ sp needed
 784 0044 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 785              		.loc 1 103 1 view .LVU143
 786              		.cfi_endproc
 787              	.LFE742:
 789              		.section	.text.setCurrentPiece,"ax",%progbits
 790              		.align	1
 791              		.global	setCurrentPiece
 792              		.syntax unified
 793              		.thumb
 794              		.thumb_func
 795              		.fpu fpv4-sp-d16
 797              	setCurrentPiece:
 798              	.LVL80:
 799              	.LFB744:
 104:Core/Src/board.c ****  
 105:Core/Src/board.c **** void newPiece(Board * board, Piece * piece)
 106:Core/Src/board.c **** {
 107:Core/Src/board.c ****         
 108:Core/Src/board.c ****     setPosX(piece, ORIGIN_X);
 109:Core/Src/board.c ****     setPosY(piece, ORIGIN_Y);
 110:Core/Src/board.c ****  
 111:Core/Src/board.c ****     drawPiece(board, piece);
 112:Core/Src/board.c ****     setCurrentPiece(board, piece);
 113:Core/Src/board.c **** }
 114:Core/Src/board.c **** 
 115:Core/Src/board.c **** void setCurrentPiece(Board * board, Piece * piece)
 116:Core/Src/board.c **** {
 800              		.loc 1 116 1 is_stmt 1 view -0
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 0
 803              		@ frame_needed = 0, uses_anonymous_args = 0
 804              		@ link register save eliminated.
 117:Core/Src/board.c ****     board->currentPiece = piece;
 805              		.loc 1 117 5 view .LVU145
 806              		.loc 1 117 25 is_stmt 0 view .LVU146
 807 0000 0160     		str	r1, [r0]
 118:Core/Src/board.c **** }
 808              		.loc 1 118 1 view .LVU147
 809 0002 7047     		bx	lr
 810              		.cfi_endproc
 811              	.LFE744:
 813              		.section	.text.newPiece,"ax",%progbits
 814              		.align	1
 815              		.global	newPiece
 816              		.syntax unified
 817              		.thumb
 818              		.thumb_func
 819              		.fpu fpv4-sp-d16
 821              	newPiece:
 822              	.LVL81:
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 18


 823              	.LFB743:
 106:Core/Src/board.c ****         
 824              		.loc 1 106 1 is_stmt 1 view -0
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 0
 827              		@ frame_needed = 0, uses_anonymous_args = 0
 106:Core/Src/board.c ****         
 828              		.loc 1 106 1 is_stmt 0 view .LVU149
 829 0000 38B5     		push	{r3, r4, r5, lr}
 830              	.LCFI18:
 831              		.cfi_def_cfa_offset 16
 832              		.cfi_offset 3, -16
 833              		.cfi_offset 4, -12
 834              		.cfi_offset 5, -8
 835              		.cfi_offset 14, -4
 836 0002 0546     		mov	r5, r0
 837 0004 0C46     		mov	r4, r1
 108:Core/Src/board.c ****     setPosY(piece, ORIGIN_Y);
 838              		.loc 1 108 5 is_stmt 1 view .LVU150
 839 0006 0021     		movs	r1, #0
 840              	.LVL82:
 108:Core/Src/board.c ****     setPosY(piece, ORIGIN_Y);
 841              		.loc 1 108 5 is_stmt 0 view .LVU151
 842 0008 2046     		mov	r0, r4
 843              	.LVL83:
 108:Core/Src/board.c ****     setPosY(piece, ORIGIN_Y);
 844              		.loc 1 108 5 view .LVU152
 845 000a FFF7FEFF 		bl	setPosX
 846              	.LVL84:
 109:Core/Src/board.c ****  
 847              		.loc 1 109 5 is_stmt 1 view .LVU153
 848 000e 0521     		movs	r1, #5
 849 0010 2046     		mov	r0, r4
 850 0012 FFF7FEFF 		bl	setPosY
 851              	.LVL85:
 111:Core/Src/board.c ****     setCurrentPiece(board, piece);
 852              		.loc 1 111 5 view .LVU154
 853 0016 2146     		mov	r1, r4
 854 0018 2846     		mov	r0, r5
 855 001a FFF7FEFF 		bl	drawPiece
 856              	.LVL86:
 112:Core/Src/board.c **** }
 857              		.loc 1 112 5 view .LVU155
 858 001e 2146     		mov	r1, r4
 859 0020 2846     		mov	r0, r5
 860 0022 FFF7FEFF 		bl	setCurrentPiece
 861              	.LVL87:
 113:Core/Src/board.c **** 
 862              		.loc 1 113 1 is_stmt 0 view .LVU156
 863 0026 38BD     		pop	{r3, r4, r5, pc}
 113:Core/Src/board.c **** 
 864              		.loc 1 113 1 view .LVU157
 865              		.cfi_endproc
 866              	.LFE743:
 868              		.section	.text.getCurrentPiece,"ax",%progbits
 869              		.align	1
 870              		.global	getCurrentPiece
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 19


 871              		.syntax unified
 872              		.thumb
 873              		.thumb_func
 874              		.fpu fpv4-sp-d16
 876              	getCurrentPiece:
 877              	.LVL88:
 878              	.LFB745:
 119:Core/Src/board.c ****  
 120:Core/Src/board.c **** Piece * getCurrentPiece(Board * board)
 121:Core/Src/board.c **** {
 879              		.loc 1 121 1 is_stmt 1 view -0
 880              		.cfi_startproc
 881              		@ args = 0, pretend = 0, frame = 0
 882              		@ frame_needed = 0, uses_anonymous_args = 0
 883              		@ link register save eliminated.
 122:Core/Src/board.c ****     return board->currentPiece;
 884              		.loc 1 122 5 view .LVU159
 123:Core/Src/board.c **** }
 885              		.loc 1 123 1 is_stmt 0 view .LVU160
 886 0000 0068     		ldr	r0, [r0]
 887              	.LVL89:
 888              		.loc 1 123 1 view .LVU161
 889 0002 7047     		bx	lr
 890              		.cfi_endproc
 891              	.LFE745:
 893              		.section	.text.isCurrentPieceMovable,"ax",%progbits
 894              		.align	1
 895              		.global	isCurrentPieceMovable
 896              		.syntax unified
 897              		.thumb
 898              		.thumb_func
 899              		.fpu fpv4-sp-d16
 901              	isCurrentPieceMovable:
 902              	.LVL90:
 903              	.LFB746:
 124:Core/Src/board.c ****  
 125:Core/Src/board.c **** bool isCurrentPieceMovable(Board * board, int x, int y)
 126:Core/Src/board.c **** {
 904              		.loc 1 126 1 is_stmt 1 view -0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 72
 907              		@ frame_needed = 0, uses_anonymous_args = 0
 908              		.loc 1 126 1 is_stmt 0 view .LVU163
 909 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 910              	.LCFI19:
 911              		.cfi_def_cfa_offset 20
 912              		.cfi_offset 4, -20
 913              		.cfi_offset 5, -16
 914              		.cfi_offset 6, -12
 915              		.cfi_offset 7, -8
 916              		.cfi_offset 14, -4
 917 0002 99B0     		sub	sp, sp, #100
 918              	.LCFI20:
 919              		.cfi_def_cfa_offset 120
 920 0004 0446     		mov	r4, r0
 921 0006 0D46     		mov	r5, r1
 922 0008 1646     		mov	r6, r2
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 20


 127:Core/Src/board.c ****     clearPiece(board, board->currentPiece);
 923              		.loc 1 127 5 is_stmt 1 view .LVU164
 924 000a 0168     		ldr	r1, [r0]
 925              	.LVL91:
 926              		.loc 1 127 5 is_stmt 0 view .LVU165
 927 000c FFF7FEFF 		bl	clearPiece
 928              	.LVL92:
 128:Core/Src/board.c ****  
 129:Core/Src/board.c ****     bool movable = true;
 929              		.loc 1 129 5 is_stmt 1 view .LVU166
 930              		.loc 1 129 10 is_stmt 0 view .LVU167
 931 0010 0123     		movs	r3, #1
 932 0012 1793     		str	r3, [sp, #92]
 130:Core/Src/board.c ****  
 131:Core/Src/board.c ****     bool visited[SIZE][SIZE];
 933              		.loc 1 131 5 is_stmt 1 view .LVU168
 132:Core/Src/board.c ****  
 133:Core/Src/board.c ****     for(int l = 0; l < SIZE; ++l)
 934              		.loc 1 133 5 view .LVU169
 935              	.LBB8:
 936              		.loc 1 133 9 view .LVU170
 937              	.LVL93:
 938              		.loc 1 133 13 is_stmt 0 view .LVU171
 939 0014 4FF0000E 		mov	lr, #0
 940              		.loc 1 133 5 view .LVU172
 941 0018 0CE0     		b	.L45
 942              	.LVL94:
 943              	.L46:
 944              	.LBB9:
 134:Core/Src/board.c ****         for(int m = 0; m < SIZE; ++m)
 135:Core/Src/board.c ****             visited[l][m] = false;
 945              		.loc 1 135 13 is_stmt 1 discriminator 3 view .LVU173
 946              		.loc 1 135 27 is_stmt 0 discriminator 3 view .LVU174
 947 001a 03EB8E0C 		add	ip, r3, lr, lsl #2
 948 001e 18AA     		add	r2, sp, #96
 949 0020 02EB8C0C 		add	ip, r2, ip, lsl #2
 950 0024 0020     		movs	r0, #0
 951 0026 4CF8440C 		str	r0, [ip, #-68]
 134:Core/Src/board.c ****         for(int m = 0; m < SIZE; ++m)
 952              		.loc 1 134 34 is_stmt 1 discriminator 3 view .LVU175
 953 002a 0133     		adds	r3, r3, #1
 954              	.LVL95:
 955              	.L47:
 134:Core/Src/board.c ****         for(int m = 0; m < SIZE; ++m)
 956              		.loc 1 134 24 discriminator 1 view .LVU176
 134:Core/Src/board.c ****         for(int m = 0; m < SIZE; ++m)
 957              		.loc 1 134 9 is_stmt 0 discriminator 1 view .LVU177
 958 002c 032B     		cmp	r3, #3
 959 002e F4DD     		ble	.L46
 960              	.LBE9:
 133:Core/Src/board.c ****         for(int m = 0; m < SIZE; ++m)
 961              		.loc 1 133 30 is_stmt 1 discriminator 2 view .LVU178
 962 0030 0EF1010E 		add	lr, lr, #1
 963              	.LVL96:
 964              	.L45:
 133:Core/Src/board.c ****         for(int m = 0; m < SIZE; ++m)
 965              		.loc 1 133 20 discriminator 1 view .LVU179
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 21


 133:Core/Src/board.c ****         for(int m = 0; m < SIZE; ++m)
 966              		.loc 1 133 5 is_stmt 0 discriminator 1 view .LVU180
 967 0034 BEF1030F 		cmp	lr, #3
 968 0038 01DC     		bgt	.L50
 969              	.LBB10:
 134:Core/Src/board.c ****         for(int m = 0; m < SIZE; ++m)
 970              		.loc 1 134 17 view .LVU181
 971 003a 0023     		movs	r3, #0
 972 003c F6E7     		b	.L47
 973              	.L50:
 974              	.LBE10:
 975              	.LBE8:
 136:Core/Src/board.c ****  
 137:Core/Src/board.c ****     int k = getKind(board->currentPiece);
 976              		.loc 1 137 5 is_stmt 1 view .LVU182
 977              		.loc 1 137 13 is_stmt 0 view .LVU183
 978 003e 2068     		ldr	r0, [r4]
 979 0040 FFF7FEFF 		bl	getKind
 980              	.LVL97:
 981              		.loc 1 137 13 view .LVU184
 982 0044 0746     		mov	r7, r0
 983              	.LVL98:
 138:Core/Src/board.c ****     int o = getOrientation(board->currentPiece);
 984              		.loc 1 138 5 is_stmt 1 view .LVU185
 985              		.loc 1 138 13 is_stmt 0 view .LVU186
 986 0046 2068     		ldr	r0, [r4]
 987              	.LVL99:
 988              		.loc 1 138 13 view .LVU187
 989 0048 FFF7FEFF 		bl	getOrientation
 990              	.LVL100:
 139:Core/Src/board.c ****  
 140:Core/Src/board.c ****     floodB(board, x, y, PIVOT_X, PIVOT_Y, k, o, &movable, visited);
 991              		.loc 1 140 5 is_stmt 1 view .LVU188
 992 004c 07AB     		add	r3, sp, #28
 993 004e 0493     		str	r3, [sp, #16]
 994 0050 17AB     		add	r3, sp, #92
 995 0052 0393     		str	r3, [sp, #12]
 996 0054 0290     		str	r0, [sp, #8]
 997 0056 0197     		str	r7, [sp, #4]
 998 0058 0223     		movs	r3, #2
 999 005a 0093     		str	r3, [sp]
 1000 005c 0123     		movs	r3, #1
 1001 005e 3246     		mov	r2, r6
 1002 0060 2946     		mov	r1, r5
 1003 0062 2046     		mov	r0, r4
 1004              	.LVL101:
 1005              		.loc 1 140 5 is_stmt 0 view .LVU189
 1006 0064 FFF7FEFF 		bl	floodB
 1007              	.LVL102:
 141:Core/Src/board.c ****  
 142:Core/Src/board.c ****     drawPiece(board, board->currentPiece);
 1008              		.loc 1 142 5 is_stmt 1 view .LVU190
 1009 0068 2168     		ldr	r1, [r4]
 1010 006a 2046     		mov	r0, r4
 1011 006c FFF7FEFF 		bl	drawPiece
 1012              	.LVL103:
 143:Core/Src/board.c ****  
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 22


 144:Core/Src/board.c ****     return movable;
 1013              		.loc 1 144 5 view .LVU191
 145:Core/Src/board.c **** }
 1014              		.loc 1 145 1 is_stmt 0 view .LVU192
 1015 0070 1798     		ldr	r0, [sp, #92]
 1016 0072 19B0     		add	sp, sp, #100
 1017              	.LCFI21:
 1018              		.cfi_def_cfa_offset 20
 1019              		@ sp needed
 1020 0074 F0BD     		pop	{r4, r5, r6, r7, pc}
 1021              		.loc 1 145 1 view .LVU193
 1022              		.cfi_endproc
 1023              	.LFE746:
 1025              		.section	.text.isCurrentPieceRotable,"ax",%progbits
 1026              		.align	1
 1027              		.global	isCurrentPieceRotable
 1028              		.syntax unified
 1029              		.thumb
 1030              		.thumb_func
 1031              		.fpu fpv4-sp-d16
 1033              	isCurrentPieceRotable:
 1034              	.LVL104:
 1035              	.LFB747:
 146:Core/Src/board.c ****  
 147:Core/Src/board.c **** bool isCurrentPieceRotable(Board * board, int o)
 148:Core/Src/board.c **** {
 1036              		.loc 1 148 1 is_stmt 1 view -0
 1037              		.cfi_startproc
 1038              		@ args = 0, pretend = 0, frame = 72
 1039              		@ frame_needed = 0, uses_anonymous_args = 0
 1040              		.loc 1 148 1 is_stmt 0 view .LVU195
 1041 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1042              	.LCFI22:
 1043              		.cfi_def_cfa_offset 20
 1044              		.cfi_offset 4, -20
 1045              		.cfi_offset 5, -16
 1046              		.cfi_offset 6, -12
 1047              		.cfi_offset 7, -8
 1048              		.cfi_offset 14, -4
 1049 0002 99B0     		sub	sp, sp, #100
 1050              	.LCFI23:
 1051              		.cfi_def_cfa_offset 120
 1052 0004 0446     		mov	r4, r0
 1053 0006 0E46     		mov	r6, r1
 149:Core/Src/board.c ****     clearPiece(board, board->currentPiece);
 1054              		.loc 1 149 5 is_stmt 1 view .LVU196
 1055 0008 0168     		ldr	r1, [r0]
 1056              	.LVL105:
 1057              		.loc 1 149 5 is_stmt 0 view .LVU197
 1058 000a FFF7FEFF 		bl	clearPiece
 1059              	.LVL106:
 150:Core/Src/board.c ****  
 151:Core/Src/board.c ****     bool rotable = true;
 1060              		.loc 1 151 5 is_stmt 1 view .LVU198
 1061              		.loc 1 151 10 is_stmt 0 view .LVU199
 1062 000e 0123     		movs	r3, #1
 1063 0010 1793     		str	r3, [sp, #92]
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 23


 152:Core/Src/board.c ****  
 153:Core/Src/board.c ****     bool visited[SIZE][SIZE];
 1064              		.loc 1 153 5 is_stmt 1 view .LVU200
 154:Core/Src/board.c ****  
 155:Core/Src/board.c ****     for(int i = 0; i < SIZE; ++i)
 1065              		.loc 1 155 5 view .LVU201
 1066              	.LBB11:
 1067              		.loc 1 155 9 view .LVU202
 1068              	.LVL107:
 1069              		.loc 1 155 13 is_stmt 0 view .LVU203
 1070 0012 4FF0000C 		mov	ip, #0
 1071              		.loc 1 155 5 view .LVU204
 1072 0016 0CE0     		b	.L52
 1073              	.LVL108:
 1074              	.L53:
 1075              	.LBB12:
 156:Core/Src/board.c ****         for(int j = 0; j < SIZE; ++j)
 157:Core/Src/board.c ****             visited[i][j] = false;
 1076              		.loc 1 157 13 is_stmt 1 discriminator 3 view .LVU205
 1077              		.loc 1 157 27 is_stmt 0 discriminator 3 view .LVU206
 1078 0018 03EB8C02 		add	r2, r3, ip, lsl #2
 1079 001c 18A9     		add	r1, sp, #96
 1080 001e 01EB8202 		add	r2, r1, r2, lsl #2
 1081 0022 0020     		movs	r0, #0
 1082 0024 42F8440C 		str	r0, [r2, #-68]
 156:Core/Src/board.c ****         for(int j = 0; j < SIZE; ++j)
 1083              		.loc 1 156 34 is_stmt 1 discriminator 3 view .LVU207
 1084 0028 0133     		adds	r3, r3, #1
 1085              	.LVL109:
 1086              	.L54:
 156:Core/Src/board.c ****         for(int j = 0; j < SIZE; ++j)
 1087              		.loc 1 156 24 discriminator 1 view .LVU208
 156:Core/Src/board.c ****         for(int j = 0; j < SIZE; ++j)
 1088              		.loc 1 156 9 is_stmt 0 discriminator 1 view .LVU209
 1089 002a 032B     		cmp	r3, #3
 1090 002c F4DD     		ble	.L53
 1091              	.LBE12:
 155:Core/Src/board.c ****         for(int j = 0; j < SIZE; ++j)
 1092              		.loc 1 155 30 is_stmt 1 discriminator 2 view .LVU210
 1093 002e 0CF1010C 		add	ip, ip, #1
 1094              	.LVL110:
 1095              	.L52:
 155:Core/Src/board.c ****         for(int j = 0; j < SIZE; ++j)
 1096              		.loc 1 155 20 discriminator 1 view .LVU211
 155:Core/Src/board.c ****         for(int j = 0; j < SIZE; ++j)
 1097              		.loc 1 155 5 is_stmt 0 discriminator 1 view .LVU212
 1098 0032 BCF1030F 		cmp	ip, #3
 1099 0036 01DC     		bgt	.L57
 1100              	.LBB13:
 156:Core/Src/board.c ****         for(int j = 0; j < SIZE; ++j)
 1101              		.loc 1 156 17 view .LVU213
 1102 0038 0023     		movs	r3, #0
 1103 003a F6E7     		b	.L54
 1104              	.L57:
 1105              	.LBE13:
 1106              	.LBE11:
 158:Core/Src/board.c ****  
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 24


 159:Core/Src/board.c ****     int k = getKind(board->currentPiece);
 1107              		.loc 1 159 5 is_stmt 1 view .LVU214
 1108              		.loc 1 159 13 is_stmt 0 view .LVU215
 1109 003c 2068     		ldr	r0, [r4]
 1110 003e FFF7FEFF 		bl	getKind
 1111              	.LVL111:
 1112              		.loc 1 159 13 view .LVU216
 1113 0042 0746     		mov	r7, r0
 1114              	.LVL112:
 160:Core/Src/board.c ****  
 161:Core/Src/board.c ****     floodB(board, getPosX(board->currentPiece), getPosY(board->currentPiece), PIVOT_X, PIVOT_Y, k, 
 1115              		.loc 1 161 5 is_stmt 1 view .LVU217
 1116 0044 2068     		ldr	r0, [r4]
 1117              	.LVL113:
 1118              		.loc 1 161 5 is_stmt 0 view .LVU218
 1119 0046 FFF7FEFF 		bl	getPosX
 1120              	.LVL114:
 1121 004a 0546     		mov	r5, r0
 1122 004c 2068     		ldr	r0, [r4]
 1123 004e FFF7FEFF 		bl	getPosY
 1124              	.LVL115:
 1125 0052 0246     		mov	r2, r0
 1126 0054 07AB     		add	r3, sp, #28
 1127 0056 0493     		str	r3, [sp, #16]
 1128 0058 17AB     		add	r3, sp, #92
 1129 005a 0393     		str	r3, [sp, #12]
 1130 005c 0296     		str	r6, [sp, #8]
 1131 005e 0197     		str	r7, [sp, #4]
 1132 0060 0223     		movs	r3, #2
 1133 0062 0093     		str	r3, [sp]
 1134 0064 0123     		movs	r3, #1
 1135 0066 2946     		mov	r1, r5
 1136 0068 2046     		mov	r0, r4
 1137 006a FFF7FEFF 		bl	floodB
 1138              	.LVL116:
 162:Core/Src/board.c ****  
 163:Core/Src/board.c ****     drawPiece(board, board->currentPiece);
 1139              		.loc 1 163 5 is_stmt 1 view .LVU219
 1140 006e 2168     		ldr	r1, [r4]
 1141 0070 2046     		mov	r0, r4
 1142 0072 FFF7FEFF 		bl	drawPiece
 1143              	.LVL117:
 164:Core/Src/board.c ****  
 165:Core/Src/board.c ****     return rotable;
 1144              		.loc 1 165 5 view .LVU220
 166:Core/Src/board.c **** }
 1145              		.loc 1 166 1 is_stmt 0 view .LVU221
 1146 0076 1798     		ldr	r0, [sp, #92]
 1147 0078 19B0     		add	sp, sp, #100
 1148              	.LCFI24:
 1149              		.cfi_def_cfa_offset 20
 1150              		@ sp needed
 1151 007a F0BD     		pop	{r4, r5, r6, r7, pc}
 1152              		.loc 1 166 1 view .LVU222
 1153              		.cfi_endproc
 1154              	.LFE747:
 1156              		.section	.text.moveCurrentPieceDown,"ax",%progbits
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 25


 1157              		.align	1
 1158              		.global	moveCurrentPieceDown
 1159              		.syntax unified
 1160              		.thumb
 1161              		.thumb_func
 1162              		.fpu fpv4-sp-d16
 1164              	moveCurrentPieceDown:
 1165              	.LVL118:
 1166              	.LFB748:
 167:Core/Src/board.c ****  
 168:Core/Src/board.c **** void moveCurrentPieceDown(Board * board)
 169:Core/Src/board.c **** {
 1167              		.loc 1 169 1 is_stmt 1 view -0
 1168              		.cfi_startproc
 1169              		@ args = 0, pretend = 0, frame = 0
 1170              		@ frame_needed = 0, uses_anonymous_args = 0
 1171              		.loc 1 169 1 is_stmt 0 view .LVU224
 1172 0000 38B5     		push	{r3, r4, r5, lr}
 1173              	.LCFI25:
 1174              		.cfi_def_cfa_offset 16
 1175              		.cfi_offset 3, -16
 1176              		.cfi_offset 4, -12
 1177              		.cfi_offset 5, -8
 1178              		.cfi_offset 14, -4
 1179 0002 0446     		mov	r4, r0
 170:Core/Src/board.c ****     int x = getPosX(board->currentPiece);
 1180              		.loc 1 170 5 is_stmt 1 view .LVU225
 1181              		.loc 1 170 13 is_stmt 0 view .LVU226
 1182 0004 0068     		ldr	r0, [r0]
 1183              	.LVL119:
 1184              		.loc 1 170 13 view .LVU227
 1185 0006 FFF7FEFF 		bl	getPosX
 1186              	.LVL120:
 1187 000a 0546     		mov	r5, r0
 1188              	.LVL121:
 171:Core/Src/board.c ****     int y = getPosY(board->currentPiece);
 1189              		.loc 1 171 5 is_stmt 1 view .LVU228
 1190              		.loc 1 171 13 is_stmt 0 view .LVU229
 1191 000c 2068     		ldr	r0, [r4]
 1192              	.LVL122:
 1193              		.loc 1 171 13 view .LVU230
 1194 000e FFF7FEFF 		bl	getPosY
 1195              	.LVL123:
 1196 0012 0246     		mov	r2, r0
 1197              	.LVL124:
 172:Core/Src/board.c ****  
 173:Core/Src/board.c ****     if(isCurrentPieceMovable(board, x + 1, y))
 1198              		.loc 1 173 5 is_stmt 1 view .LVU231
 1199              		.loc 1 173 8 is_stmt 0 view .LVU232
 1200 0014 0135     		adds	r5, r5, #1
 1201              	.LVL125:
 1202              		.loc 1 173 8 view .LVU233
 1203 0016 2946     		mov	r1, r5
 1204 0018 2046     		mov	r0, r4
 1205              	.LVL126:
 1206              		.loc 1 173 8 view .LVU234
 1207 001a FFF7FEFF 		bl	isCurrentPieceMovable
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 26


 1208              	.LVL127:
 1209              		.loc 1 173 7 view .LVU235
 1210 001e 00B9     		cbnz	r0, .L61
 1211              	.L58:
 174:Core/Src/board.c ****     {
 175:Core/Src/board.c ****         clearPiece(board, board->currentPiece);
 176:Core/Src/board.c ****         setPosX(board->currentPiece, x + 1);
 177:Core/Src/board.c ****  
 178:Core/Src/board.c ****         drawPiece(board, board->currentPiece);
 179:Core/Src/board.c ****     }
 180:Core/Src/board.c **** }
 1212              		.loc 1 180 1 view .LVU236
 1213 0020 38BD     		pop	{r3, r4, r5, pc}
 1214              	.LVL128:
 1215              	.L61:
 175:Core/Src/board.c ****         setPosX(board->currentPiece, x + 1);
 1216              		.loc 1 175 9 is_stmt 1 view .LVU237
 1217 0022 2168     		ldr	r1, [r4]
 1218 0024 2046     		mov	r0, r4
 1219 0026 FFF7FEFF 		bl	clearPiece
 1220              	.LVL129:
 176:Core/Src/board.c ****  
 1221              		.loc 1 176 9 view .LVU238
 1222 002a 2946     		mov	r1, r5
 1223 002c 2068     		ldr	r0, [r4]
 1224 002e FFF7FEFF 		bl	setPosX
 1225              	.LVL130:
 178:Core/Src/board.c ****     }
 1226              		.loc 1 178 9 view .LVU239
 1227 0032 2168     		ldr	r1, [r4]
 1228 0034 2046     		mov	r0, r4
 1229 0036 FFF7FEFF 		bl	drawPiece
 1230              	.LVL131:
 1231              		.loc 1 180 1 is_stmt 0 view .LVU240
 1232 003a F1E7     		b	.L58
 1233              		.cfi_endproc
 1234              	.LFE748:
 1236              		.section	.text.moveCurrentPieceLeft,"ax",%progbits
 1237              		.align	1
 1238              		.global	moveCurrentPieceLeft
 1239              		.syntax unified
 1240              		.thumb
 1241              		.thumb_func
 1242              		.fpu fpv4-sp-d16
 1244              	moveCurrentPieceLeft:
 1245              	.LVL132:
 1246              	.LFB749:
 181:Core/Src/board.c ****  
 182:Core/Src/board.c **** void moveCurrentPieceLeft(Board * board)
 183:Core/Src/board.c **** {
 1247              		.loc 1 183 1 is_stmt 1 view -0
 1248              		.cfi_startproc
 1249              		@ args = 0, pretend = 0, frame = 0
 1250              		@ frame_needed = 0, uses_anonymous_args = 0
 1251              		.loc 1 183 1 is_stmt 0 view .LVU242
 1252 0000 70B5     		push	{r4, r5, r6, lr}
 1253              	.LCFI26:
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 27


 1254              		.cfi_def_cfa_offset 16
 1255              		.cfi_offset 4, -16
 1256              		.cfi_offset 5, -12
 1257              		.cfi_offset 6, -8
 1258              		.cfi_offset 14, -4
 1259 0002 0446     		mov	r4, r0
 184:Core/Src/board.c ****     int x = getPosX(board->currentPiece);
 1260              		.loc 1 184 5 is_stmt 1 view .LVU243
 1261              		.loc 1 184 13 is_stmt 0 view .LVU244
 1262 0004 0068     		ldr	r0, [r0]
 1263              	.LVL133:
 1264              		.loc 1 184 13 view .LVU245
 1265 0006 FFF7FEFF 		bl	getPosX
 1266              	.LVL134:
 1267 000a 0646     		mov	r6, r0
 1268              	.LVL135:
 185:Core/Src/board.c ****     int y = getPosY(board->currentPiece);
 1269              		.loc 1 185 5 is_stmt 1 view .LVU246
 1270              		.loc 1 185 13 is_stmt 0 view .LVU247
 1271 000c 2068     		ldr	r0, [r4]
 1272              	.LVL136:
 1273              		.loc 1 185 13 view .LVU248
 1274 000e FFF7FEFF 		bl	getPosY
 1275              	.LVL137:
 186:Core/Src/board.c ****  
 187:Core/Src/board.c ****     if(isCurrentPieceMovable(board, x, y - 1))
 1276              		.loc 1 187 5 is_stmt 1 view .LVU249
 1277              		.loc 1 187 8 is_stmt 0 view .LVU250
 1278 0012 451E     		subs	r5, r0, #1
 1279 0014 2A46     		mov	r2, r5
 1280 0016 3146     		mov	r1, r6
 1281 0018 2046     		mov	r0, r4
 1282              	.LVL138:
 1283              		.loc 1 187 8 view .LVU251
 1284 001a FFF7FEFF 		bl	isCurrentPieceMovable
 1285              	.LVL139:
 1286              		.loc 1 187 7 view .LVU252
 1287 001e 00B9     		cbnz	r0, .L65
 1288              	.L62:
 188:Core/Src/board.c ****     {
 189:Core/Src/board.c ****         clearPiece(board, board->currentPiece);
 190:Core/Src/board.c ****         setPosY(board->currentPiece, y - 1);
 191:Core/Src/board.c ****  
 192:Core/Src/board.c ****         drawPiece(board, board->currentPiece);
 193:Core/Src/board.c ****     }
 194:Core/Src/board.c **** }
 1289              		.loc 1 194 1 view .LVU253
 1290 0020 70BD     		pop	{r4, r5, r6, pc}
 1291              	.LVL140:
 1292              	.L65:
 189:Core/Src/board.c ****         setPosY(board->currentPiece, y - 1);
 1293              		.loc 1 189 9 is_stmt 1 view .LVU254
 1294 0022 2168     		ldr	r1, [r4]
 1295 0024 2046     		mov	r0, r4
 1296 0026 FFF7FEFF 		bl	clearPiece
 1297              	.LVL141:
 190:Core/Src/board.c ****  
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 28


 1298              		.loc 1 190 9 view .LVU255
 1299 002a 2946     		mov	r1, r5
 1300 002c 2068     		ldr	r0, [r4]
 1301 002e FFF7FEFF 		bl	setPosY
 1302              	.LVL142:
 192:Core/Src/board.c ****     }
 1303              		.loc 1 192 9 view .LVU256
 1304 0032 2168     		ldr	r1, [r4]
 1305 0034 2046     		mov	r0, r4
 1306 0036 FFF7FEFF 		bl	drawPiece
 1307              	.LVL143:
 1308              		.loc 1 194 1 is_stmt 0 view .LVU257
 1309 003a F1E7     		b	.L62
 1310              		.cfi_endproc
 1311              	.LFE749:
 1313              		.section	.text.moveCurrentPieceRight,"ax",%progbits
 1314              		.align	1
 1315              		.global	moveCurrentPieceRight
 1316              		.syntax unified
 1317              		.thumb
 1318              		.thumb_func
 1319              		.fpu fpv4-sp-d16
 1321              	moveCurrentPieceRight:
 1322              	.LVL144:
 1323              	.LFB750:
 195:Core/Src/board.c ****  
 196:Core/Src/board.c **** void moveCurrentPieceRight(Board * board)
 197:Core/Src/board.c **** {
 1324              		.loc 1 197 1 is_stmt 1 view -0
 1325              		.cfi_startproc
 1326              		@ args = 0, pretend = 0, frame = 0
 1327              		@ frame_needed = 0, uses_anonymous_args = 0
 1328              		.loc 1 197 1 is_stmt 0 view .LVU259
 1329 0000 70B5     		push	{r4, r5, r6, lr}
 1330              	.LCFI27:
 1331              		.cfi_def_cfa_offset 16
 1332              		.cfi_offset 4, -16
 1333              		.cfi_offset 5, -12
 1334              		.cfi_offset 6, -8
 1335              		.cfi_offset 14, -4
 1336 0002 0446     		mov	r4, r0
 198:Core/Src/board.c ****     int x = getPosX(board->currentPiece);
 1337              		.loc 1 198 5 is_stmt 1 view .LVU260
 1338              		.loc 1 198 13 is_stmt 0 view .LVU261
 1339 0004 0068     		ldr	r0, [r0]
 1340              	.LVL145:
 1341              		.loc 1 198 13 view .LVU262
 1342 0006 FFF7FEFF 		bl	getPosX
 1343              	.LVL146:
 1344 000a 0646     		mov	r6, r0
 1345              	.LVL147:
 199:Core/Src/board.c ****     int y = getPosY(board->currentPiece);
 1346              		.loc 1 199 5 is_stmt 1 view .LVU263
 1347              		.loc 1 199 13 is_stmt 0 view .LVU264
 1348 000c 2068     		ldr	r0, [r4]
 1349              	.LVL148:
 1350              		.loc 1 199 13 view .LVU265
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 29


 1351 000e FFF7FEFF 		bl	getPosY
 1352              	.LVL149:
 200:Core/Src/board.c ****  
 201:Core/Src/board.c ****     if(isCurrentPieceMovable(board, x, y + 1))
 1353              		.loc 1 201 5 is_stmt 1 view .LVU266
 1354              		.loc 1 201 8 is_stmt 0 view .LVU267
 1355 0012 451C     		adds	r5, r0, #1
 1356 0014 2A46     		mov	r2, r5
 1357 0016 3146     		mov	r1, r6
 1358 0018 2046     		mov	r0, r4
 1359              	.LVL150:
 1360              		.loc 1 201 8 view .LVU268
 1361 001a FFF7FEFF 		bl	isCurrentPieceMovable
 1362              	.LVL151:
 1363              		.loc 1 201 7 view .LVU269
 1364 001e 00B9     		cbnz	r0, .L69
 1365              	.L66:
 202:Core/Src/board.c ****     {
 203:Core/Src/board.c ****         clearPiece(board, board->currentPiece);
 204:Core/Src/board.c ****         setPosY(board->currentPiece, y + 1);
 205:Core/Src/board.c ****  
 206:Core/Src/board.c ****         drawPiece(board, board->currentPiece);
 207:Core/Src/board.c ****     }
 208:Core/Src/board.c **** }
 1366              		.loc 1 208 1 view .LVU270
 1367 0020 70BD     		pop	{r4, r5, r6, pc}
 1368              	.LVL152:
 1369              	.L69:
 203:Core/Src/board.c ****         setPosY(board->currentPiece, y + 1);
 1370              		.loc 1 203 9 is_stmt 1 view .LVU271
 1371 0022 2168     		ldr	r1, [r4]
 1372 0024 2046     		mov	r0, r4
 1373 0026 FFF7FEFF 		bl	clearPiece
 1374              	.LVL153:
 204:Core/Src/board.c ****  
 1375              		.loc 1 204 9 view .LVU272
 1376 002a 2946     		mov	r1, r5
 1377 002c 2068     		ldr	r0, [r4]
 1378 002e FFF7FEFF 		bl	setPosY
 1379              	.LVL154:
 206:Core/Src/board.c ****     }
 1380              		.loc 1 206 9 view .LVU273
 1381 0032 2168     		ldr	r1, [r4]
 1382 0034 2046     		mov	r0, r4
 1383 0036 FFF7FEFF 		bl	drawPiece
 1384              	.LVL155:
 1385              		.loc 1 208 1 is_stmt 0 view .LVU274
 1386 003a F1E7     		b	.L66
 1387              		.cfi_endproc
 1388              	.LFE750:
 1390              		.section	.text.rotateCurrentPieceLeft,"ax",%progbits
 1391              		.align	1
 1392              		.global	rotateCurrentPieceLeft
 1393              		.syntax unified
 1394              		.thumb
 1395              		.thumb_func
 1396              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 30


 1398              	rotateCurrentPieceLeft:
 1399              	.LVL156:
 1400              	.LFB751:
 209:Core/Src/board.c ****  
 210:Core/Src/board.c **** void rotateCurrentPieceLeft(Board * board)
 211:Core/Src/board.c **** {
 1401              		.loc 1 211 1 is_stmt 1 view -0
 1402              		.cfi_startproc
 1403              		@ args = 0, pretend = 0, frame = 0
 1404              		@ frame_needed = 0, uses_anonymous_args = 0
 1405              		.loc 1 211 1 is_stmt 0 view .LVU276
 1406 0000 38B5     		push	{r3, r4, r5, lr}
 1407              	.LCFI28:
 1408              		.cfi_def_cfa_offset 16
 1409              		.cfi_offset 3, -16
 1410              		.cfi_offset 4, -12
 1411              		.cfi_offset 5, -8
 1412              		.cfi_offset 14, -4
 1413 0002 0546     		mov	r5, r0
 212:Core/Src/board.c ****     int o = getOrientation(board->currentPiece);
 1414              		.loc 1 212 5 is_stmt 1 view .LVU277
 1415              		.loc 1 212 13 is_stmt 0 view .LVU278
 1416 0004 0068     		ldr	r0, [r0]
 1417              	.LVL157:
 1418              		.loc 1 212 13 view .LVU279
 1419 0006 FFF7FEFF 		bl	getOrientation
 1420              	.LVL158:
 213:Core/Src/board.c ****  
 214:Core/Src/board.c ****     if(o > 0)
 1421              		.loc 1 214 5 is_stmt 1 view .LVU280
 1422              		.loc 1 214 7 is_stmt 0 view .LVU281
 1423 000a 041E     		subs	r4, r0, #0
 1424 000c 06DD     		ble	.L73
 215:Core/Src/board.c ****         o--;
 1425              		.loc 1 215 9 is_stmt 1 view .LVU282
 1426              		.loc 1 215 10 is_stmt 0 view .LVU283
 1427 000e 013C     		subs	r4, r4, #1
 1428              	.LVL159:
 1429              	.L71:
 216:Core/Src/board.c ****     else
 217:Core/Src/board.c ****         o = NB_ROTATIONS - 1;
 218:Core/Src/board.c ****  
 219:Core/Src/board.c ****     if(isCurrentPieceRotable(board, o))
 1430              		.loc 1 219 5 is_stmt 1 view .LVU284
 1431              		.loc 1 219 8 is_stmt 0 view .LVU285
 1432 0010 2146     		mov	r1, r4
 1433 0012 2846     		mov	r0, r5
 1434 0014 FFF7FEFF 		bl	isCurrentPieceRotable
 1435              	.LVL160:
 1436              		.loc 1 219 7 view .LVU286
 1437 0018 10B9     		cbnz	r0, .L75
 1438              	.L70:
 220:Core/Src/board.c ****     {
 221:Core/Src/board.c ****         clearPiece(board, board->currentPiece);
 222:Core/Src/board.c ****  
 223:Core/Src/board.c ****         setOrientation(board->currentPiece, o);
 224:Core/Src/board.c ****         drawPiece(board, board->currentPiece);
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 31


 225:Core/Src/board.c ****     }
 226:Core/Src/board.c **** }
 1439              		.loc 1 226 1 view .LVU287
 1440 001a 38BD     		pop	{r3, r4, r5, pc}
 1441              	.LVL161:
 1442              	.L73:
 217:Core/Src/board.c ****  
 1443              		.loc 1 217 11 view .LVU288
 1444 001c 0324     		movs	r4, #3
 1445 001e F7E7     		b	.L71
 1446              	.LVL162:
 1447              	.L75:
 221:Core/Src/board.c ****  
 1448              		.loc 1 221 9 is_stmt 1 view .LVU289
 1449 0020 2968     		ldr	r1, [r5]
 1450 0022 2846     		mov	r0, r5
 1451 0024 FFF7FEFF 		bl	clearPiece
 1452              	.LVL163:
 223:Core/Src/board.c ****         drawPiece(board, board->currentPiece);
 1453              		.loc 1 223 9 view .LVU290
 1454 0028 2146     		mov	r1, r4
 1455 002a 2868     		ldr	r0, [r5]
 1456 002c FFF7FEFF 		bl	setOrientation
 1457              	.LVL164:
 224:Core/Src/board.c ****     }
 1458              		.loc 1 224 9 view .LVU291
 1459 0030 2968     		ldr	r1, [r5]
 1460 0032 2846     		mov	r0, r5
 1461 0034 FFF7FEFF 		bl	drawPiece
 1462              	.LVL165:
 1463              		.loc 1 226 1 is_stmt 0 view .LVU292
 1464 0038 EFE7     		b	.L70
 1465              		.cfi_endproc
 1466              	.LFE751:
 1468              		.section	.text.rotateCurrentPieceRight,"ax",%progbits
 1469              		.align	1
 1470              		.global	rotateCurrentPieceRight
 1471              		.syntax unified
 1472              		.thumb
 1473              		.thumb_func
 1474              		.fpu fpv4-sp-d16
 1476              	rotateCurrentPieceRight:
 1477              	.LVL166:
 1478              	.LFB752:
 227:Core/Src/board.c ****  
 228:Core/Src/board.c **** void rotateCurrentPieceRight(Board * board)
 229:Core/Src/board.c **** {
 1479              		.loc 1 229 1 is_stmt 1 view -0
 1480              		.cfi_startproc
 1481              		@ args = 0, pretend = 0, frame = 0
 1482              		@ frame_needed = 0, uses_anonymous_args = 0
 1483              		.loc 1 229 1 is_stmt 0 view .LVU294
 1484 0000 38B5     		push	{r3, r4, r5, lr}
 1485              	.LCFI29:
 1486              		.cfi_def_cfa_offset 16
 1487              		.cfi_offset 3, -16
 1488              		.cfi_offset 4, -12
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 32


 1489              		.cfi_offset 5, -8
 1490              		.cfi_offset 14, -4
 1491 0002 0546     		mov	r5, r0
 230:Core/Src/board.c ****     int o = getOrientation(board->currentPiece);
 1492              		.loc 1 230 5 is_stmt 1 view .LVU295
 1493              		.loc 1 230 13 is_stmt 0 view .LVU296
 1494 0004 0068     		ldr	r0, [r0]
 1495              	.LVL167:
 1496              		.loc 1 230 13 view .LVU297
 1497 0006 FFF7FEFF 		bl	getOrientation
 1498              	.LVL168:
 231:Core/Src/board.c ****  
 232:Core/Src/board.c ****     if(o < NB_ROTATIONS - 1)
 1499              		.loc 1 232 5 is_stmt 1 view .LVU298
 1500              		.loc 1 232 7 is_stmt 0 view .LVU299
 1501 000a 0228     		cmp	r0, #2
 1502 000c 06DC     		bgt	.L79
 233:Core/Src/board.c ****         o++;
 1503              		.loc 1 233 9 is_stmt 1 view .LVU300
 1504              		.loc 1 233 10 is_stmt 0 view .LVU301
 1505 000e 441C     		adds	r4, r0, #1
 1506              	.LVL169:
 1507              	.L77:
 234:Core/Src/board.c ****     else
 235:Core/Src/board.c ****         o = 0;
 236:Core/Src/board.c ****  
 237:Core/Src/board.c ****     if(isCurrentPieceRotable(board, o))
 1508              		.loc 1 237 5 is_stmt 1 view .LVU302
 1509              		.loc 1 237 8 is_stmt 0 view .LVU303
 1510 0010 2146     		mov	r1, r4
 1511 0012 2846     		mov	r0, r5
 1512 0014 FFF7FEFF 		bl	isCurrentPieceRotable
 1513              	.LVL170:
 1514              		.loc 1 237 7 view .LVU304
 1515 0018 10B9     		cbnz	r0, .L81
 1516              	.L76:
 238:Core/Src/board.c ****     {
 239:Core/Src/board.c ****         clearPiece(board, board->currentPiece);
 240:Core/Src/board.c ****         setOrientation(board->currentPiece, o);
 241:Core/Src/board.c ****  
 242:Core/Src/board.c ****         drawPiece(board, board->currentPiece);
 243:Core/Src/board.c ****     }
 244:Core/Src/board.c **** }
 1517              		.loc 1 244 1 view .LVU305
 1518 001a 38BD     		pop	{r3, r4, r5, pc}
 1519              	.LVL171:
 1520              	.L79:
 235:Core/Src/board.c ****  
 1521              		.loc 1 235 11 view .LVU306
 1522 001c 0024     		movs	r4, #0
 1523 001e F7E7     		b	.L77
 1524              	.LVL172:
 1525              	.L81:
 239:Core/Src/board.c ****         setOrientation(board->currentPiece, o);
 1526              		.loc 1 239 9 is_stmt 1 view .LVU307
 1527 0020 2968     		ldr	r1, [r5]
 1528 0022 2846     		mov	r0, r5
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 33


 1529 0024 FFF7FEFF 		bl	clearPiece
 1530              	.LVL173:
 240:Core/Src/board.c ****  
 1531              		.loc 1 240 9 view .LVU308
 1532 0028 2146     		mov	r1, r4
 1533 002a 2868     		ldr	r0, [r5]
 1534 002c FFF7FEFF 		bl	setOrientation
 1535              	.LVL174:
 242:Core/Src/board.c ****     }
 1536              		.loc 1 242 9 view .LVU309
 1537 0030 2968     		ldr	r1, [r5]
 1538 0032 2846     		mov	r0, r5
 1539 0034 FFF7FEFF 		bl	drawPiece
 1540              	.LVL175:
 1541              		.loc 1 244 1 is_stmt 0 view .LVU310
 1542 0038 EFE7     		b	.L76
 1543              		.cfi_endproc
 1544              	.LFE752:
 1546              		.section	.text.deleteLine,"ax",%progbits
 1547              		.align	1
 1548              		.global	deleteLine
 1549              		.syntax unified
 1550              		.thumb
 1551              		.thumb_func
 1552              		.fpu fpv4-sp-d16
 1554              	deleteLine:
 1555              	.LVL176:
 1556              	.LFB753:
 245:Core/Src/board.c ****  
 246:Core/Src/board.c **** void deleteLine(Board * board, int y)
 247:Core/Src/board.c **** {
 1557              		.loc 1 247 1 is_stmt 1 view -0
 1558              		.cfi_startproc
 1559              		@ args = 0, pretend = 0, frame = 0
 1560              		@ frame_needed = 0, uses_anonymous_args = 0
 1561              		.loc 1 247 1 is_stmt 0 view .LVU312
 1562 0000 38B5     		push	{r3, r4, r5, lr}
 1563              	.LCFI30:
 1564              		.cfi_def_cfa_offset 16
 1565              		.cfi_offset 3, -16
 1566              		.cfi_offset 4, -12
 1567              		.cfi_offset 5, -8
 1568              		.cfi_offset 14, -4
 1569 0002 0546     		mov	r5, r0
 1570 0004 0C46     		mov	r4, r1
 248:Core/Src/board.c ****     clearPiece(board, board->currentPiece);
 1571              		.loc 1 248 5 is_stmt 1 view .LVU313
 1572 0006 0168     		ldr	r1, [r0]
 1573              	.LVL177:
 1574              		.loc 1 248 5 is_stmt 0 view .LVU314
 1575 0008 FFF7FEFF 		bl	clearPiece
 1576              	.LVL178:
 249:Core/Src/board.c ****  
 250:Core/Src/board.c ****     for(int j = y; j > 0; --j)
 1577              		.loc 1 250 5 is_stmt 1 view .LVU315
 1578              	.LBB14:
 1579              		.loc 1 250 9 view .LVU316
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 34


 1580              		.loc 1 250 5 is_stmt 0 view .LVU317
 1581 000c 12E0     		b	.L83
 1582              	.LVL179:
 1583              	.L84:
 1584              	.LBB15:
 251:Core/Src/board.c ****     {
 252:Core/Src/board.c ****         for(int i = 0; i < BOARD_WIDTH; ++i)
 253:Core/Src/board.c ****             board->area[i][j] = board->area[i][j-1];
 1585              		.loc 1 253 13 is_stmt 1 discriminator 3 view .LVU318
 1586              		.loc 1 253 49 is_stmt 0 discriminator 3 view .LVU319
 1587 000e 631E     		subs	r3, r4, #1
 1588              		.loc 1 253 47 discriminator 3 view .LVU320
 1589 0010 02EB8201 		add	r1, r2, r2, lsl #2
 1590 0014 03EB8103 		add	r3, r3, r1, lsl #2
 1591 0018 05EB8303 		add	r3, r5, r3, lsl #2
 1592 001c 5968     		ldr	r1, [r3, #4]
 1593              		.loc 1 253 31 discriminator 3 view .LVU321
 1594 001e 02EB8203 		add	r3, r2, r2, lsl #2
 1595 0022 04EB8303 		add	r3, r4, r3, lsl #2
 1596 0026 05EB8303 		add	r3, r5, r3, lsl #2
 1597 002a 5960     		str	r1, [r3, #4]
 252:Core/Src/board.c ****             board->area[i][j] = board->area[i][j-1];
 1598              		.loc 1 252 41 is_stmt 1 discriminator 3 view .LVU322
 1599 002c 0132     		adds	r2, r2, #1
 1600              	.LVL180:
 1601              	.L85:
 252:Core/Src/board.c ****             board->area[i][j] = board->area[i][j-1];
 1602              		.loc 1 252 24 discriminator 1 view .LVU323
 252:Core/Src/board.c ****             board->area[i][j] = board->area[i][j-1];
 1603              		.loc 1 252 9 is_stmt 0 discriminator 1 view .LVU324
 1604 002e 092A     		cmp	r2, #9
 1605 0030 EDDD     		ble	.L84
 1606              	.LBE15:
 250:Core/Src/board.c ****     {
 1607              		.loc 1 250 27 is_stmt 1 discriminator 2 view .LVU325
 1608 0032 013C     		subs	r4, r4, #1
 1609              	.LVL181:
 1610              	.L83:
 250:Core/Src/board.c ****     {
 1611              		.loc 1 250 20 discriminator 1 view .LVU326
 250:Core/Src/board.c ****     {
 1612              		.loc 1 250 5 is_stmt 0 discriminator 1 view .LVU327
 1613 0034 002C     		cmp	r4, #0
 1614 0036 01DD     		ble	.L88
 1615              	.LBB16:
 252:Core/Src/board.c ****             board->area[i][j] = board->area[i][j-1];
 1616              		.loc 1 252 17 view .LVU328
 1617 0038 0022     		movs	r2, #0
 1618 003a F8E7     		b	.L85
 1619              	.L88:
 1620              	.LBE16:
 1621              	.LBE14:
 254:Core/Src/board.c ****     }
 255:Core/Src/board.c ****  
 256:Core/Src/board.c ****     drawPiece(board, board->currentPiece);
 1622              		.loc 1 256 5 is_stmt 1 view .LVU329
 1623 003c 2968     		ldr	r1, [r5]
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 35


 1624 003e 2846     		mov	r0, r5
 1625 0040 FFF7FEFF 		bl	drawPiece
 1626              	.LVL182:
 257:Core/Src/board.c **** }
 1627              		.loc 1 257 1 is_stmt 0 view .LVU330
 1628 0044 38BD     		pop	{r3, r4, r5, pc}
 1629              		.loc 1 257 1 view .LVU331
 1630              		.cfi_endproc
 1631              	.LFE753:
 1633              		.section	.text.deletePossibleLines,"ax",%progbits
 1634              		.align	1
 1635              		.global	deletePossibleLines
 1636              		.syntax unified
 1637              		.thumb
 1638              		.thumb_func
 1639              		.fpu fpv4-sp-d16
 1641              	deletePossibleLines:
 1642              	.LVL183:
 1643              	.LFB754:
 258:Core/Src/board.c ****  
 259:Core/Src/board.c **** int deletePossibleLines(Board * board)
 260:Core/Src/board.c **** {
 1644              		.loc 1 260 1 is_stmt 1 view -0
 1645              		.cfi_startproc
 1646              		@ args = 0, pretend = 0, frame = 0
 1647              		@ frame_needed = 0, uses_anonymous_args = 0
 1648              		.loc 1 260 1 is_stmt 0 view .LVU333
 1649 0000 70B5     		push	{r4, r5, r6, lr}
 1650              	.LCFI31:
 1651              		.cfi_def_cfa_offset 16
 1652              		.cfi_offset 4, -16
 1653              		.cfi_offset 5, -12
 1654              		.cfi_offset 6, -8
 1655              		.cfi_offset 14, -4
 1656 0002 0546     		mov	r5, r0
 261:Core/Src/board.c ****     int nbLinesDeleted = 0;
 1657              		.loc 1 261 5 is_stmt 1 view .LVU334
 1658              	.LVL184:
 262:Core/Src/board.c ****  
 263:Core/Src/board.c ****     for(int j = 0; j < BOARD_HEIGHT; ++j)
 1659              		.loc 1 263 5 view .LVU335
 1660              	.LBB17:
 1661              		.loc 1 263 9 view .LVU336
 1662              		.loc 1 263 13 is_stmt 0 view .LVU337
 1663 0004 0024     		movs	r4, #0
 1664              	.LBE17:
 261:Core/Src/board.c ****     int nbLinesDeleted = 0;
 1665              		.loc 1 261 9 view .LVU338
 1666 0006 2646     		mov	r6, r4
 1667              	.LBB20:
 1668              		.loc 1 263 5 view .LVU339
 1669 0008 0EE0     		b	.L90
 1670              	.LVL185:
 1671              	.L92:
 1672              	.LBB18:
 264:Core/Src/board.c ****     {
 265:Core/Src/board.c ****         int i = 0;
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 36


 266:Core/Src/board.c ****  
 267:Core/Src/board.c ****         for(; i < BOARD_WIDTH && board->area[i][j] != FREE; ++i);
 1673              		.loc 1 267 65 is_stmt 1 discriminator 3 view .LVU340
 1674              		.loc 1 267 61 discriminator 3 view .LVU341
 1675 000a 0132     		adds	r2, r2, #1
 1676              	.LVL186:
 1677              	.L94:
 1678              		.loc 1 267 15 discriminator 1 view .LVU342
 1679              		.loc 1 267 9 is_stmt 0 discriminator 1 view .LVU343
 1680 000c 092A     		cmp	r2, #9
 1681 000e 08DC     		bgt	.L91
 1682              		.loc 1 267 48 discriminator 2 view .LVU344
 1683 0010 02EB8203 		add	r3, r2, r2, lsl #2
 1684 0014 04EB8303 		add	r3, r4, r3, lsl #2
 1685 0018 05EB8303 		add	r3, r5, r3, lsl #2
 1686 001c 5B68     		ldr	r3, [r3, #4]
 1687              		.loc 1 267 31 discriminator 2 view .LVU345
 1688 001e 002B     		cmp	r3, #0
 1689 0020 F3D1     		bne	.L92
 1690              	.L91:
 268:Core/Src/board.c ****  
 269:Core/Src/board.c ****         if(i == BOARD_WIDTH)
 1691              		.loc 1 269 9 is_stmt 1 view .LVU346
 1692              		.loc 1 269 11 is_stmt 0 view .LVU347
 1693 0022 0A2A     		cmp	r2, #10
 1694 0024 04D0     		beq	.L97
 1695              	.LVL187:
 1696              	.L93:
 1697              		.loc 1 269 11 view .LVU348
 1698              	.LBE18:
 263:Core/Src/board.c ****     {
 1699              		.loc 1 263 38 is_stmt 1 discriminator 2 view .LVU349
 1700 0026 0134     		adds	r4, r4, #1
 1701              	.LVL188:
 1702              	.L90:
 263:Core/Src/board.c ****     {
 1703              		.loc 1 263 20 discriminator 1 view .LVU350
 263:Core/Src/board.c ****     {
 1704              		.loc 1 263 5 is_stmt 0 discriminator 1 view .LVU351
 1705 0028 132C     		cmp	r4, #19
 1706 002a 07DC     		bgt	.L98
 1707              	.LBB19:
 265:Core/Src/board.c ****  
 1708              		.loc 1 265 13 view .LVU352
 1709 002c 0022     		movs	r2, #0
 1710 002e EDE7     		b	.L94
 1711              	.LVL189:
 1712              	.L97:
 270:Core/Src/board.c ****         {
 271:Core/Src/board.c ****             nbLinesDeleted++;
 1713              		.loc 1 271 13 is_stmt 1 view .LVU353
 1714              		.loc 1 271 27 is_stmt 0 view .LVU354
 1715 0030 0136     		adds	r6, r6, #1
 1716              	.LVL190:
 272:Core/Src/board.c ****             deleteLine(board, j);
 1717              		.loc 1 272 13 is_stmt 1 view .LVU355
 1718 0032 2146     		mov	r1, r4
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 37


 1719 0034 2846     		mov	r0, r5
 1720 0036 FFF7FEFF 		bl	deleteLine
 1721              	.LVL191:
 1722              		.loc 1 272 13 is_stmt 0 view .LVU356
 1723 003a F4E7     		b	.L93
 1724              	.L98:
 1725              		.loc 1 272 13 view .LVU357
 1726              	.LBE19:
 1727              	.LBE20:
 273:Core/Src/board.c ****         }
 274:Core/Src/board.c ****     }
 275:Core/Src/board.c ****  
 276:Core/Src/board.c ****     return nbLinesDeleted;
 1728              		.loc 1 276 5 is_stmt 1 view .LVU358
 277:Core/Src/board.c **** }
 1729              		.loc 1 277 1 is_stmt 0 view .LVU359
 1730 003c 3046     		mov	r0, r6
 1731 003e 70BD     		pop	{r4, r5, r6, pc}
 1732              		.loc 1 277 1 view .LVU360
 1733              		.cfi_endproc
 1734              	.LFE754:
 1736              		.section	.text.dropCurrentPiece,"ax",%progbits
 1737              		.align	1
 1738              		.global	dropCurrentPiece
 1739              		.syntax unified
 1740              		.thumb
 1741              		.thumb_func
 1742              		.fpu fpv4-sp-d16
 1744              	dropCurrentPiece:
 1745              	.LVL192:
 1746              	.LFB755:
 278:Core/Src/board.c ****  
 279:Core/Src/board.c **** void dropCurrentPiece(Board * board)
 280:Core/Src/board.c **** {
 1747              		.loc 1 280 1 is_stmt 1 view -0
 1748              		.cfi_startproc
 1749              		@ args = 0, pretend = 0, frame = 0
 1750              		@ frame_needed = 0, uses_anonymous_args = 0
 1751              		.loc 1 280 1 is_stmt 0 view .LVU362
 1752 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1753              	.LCFI32:
 1754              		.cfi_def_cfa_offset 24
 1755              		.cfi_offset 3, -24
 1756              		.cfi_offset 4, -20
 1757              		.cfi_offset 5, -16
 1758              		.cfi_offset 6, -12
 1759              		.cfi_offset 7, -8
 1760              		.cfi_offset 14, -4
 1761 0002 0546     		mov	r5, r0
 281:Core/Src/board.c ****     int x = getPosX(board->currentPiece);
 1762              		.loc 1 281 5 is_stmt 1 view .LVU363
 1763              		.loc 1 281 13 is_stmt 0 view .LVU364
 1764 0004 0068     		ldr	r0, [r0]
 1765              	.LVL193:
 1766              		.loc 1 281 13 view .LVU365
 1767 0006 FFF7FEFF 		bl	getPosX
 1768              	.LVL194:
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 38


 1769 000a 0446     		mov	r4, r0
 1770              	.LVL195:
 282:Core/Src/board.c ****     int y = getPosY(board->currentPiece);
 1771              		.loc 1 282 5 is_stmt 1 view .LVU366
 1772              		.loc 1 282 13 is_stmt 0 view .LVU367
 1773 000c 2868     		ldr	r0, [r5]
 1774              	.LVL196:
 1775              		.loc 1 282 13 view .LVU368
 1776 000e FFF7FEFF 		bl	getPosY
 1777              	.LVL197:
 1778 0012 0746     		mov	r7, r0
 1779              	.LVL198:
 283:Core/Src/board.c ****  
 284:Core/Src/board.c ****     while(isCurrentPieceMovable(board, x++, y))
 1780              		.loc 1 284 5 is_stmt 1 view .LVU369
 1781              		.loc 1 284 10 is_stmt 0 view .LVU370
 1782 0014 03E0     		b	.L100
 1783              	.LVL199:
 1784              	.L101:
 285:Core/Src/board.c ****         moveCurrentPieceDown(board);
 1785              		.loc 1 285 9 is_stmt 1 view .LVU371
 1786 0016 2846     		mov	r0, r5
 1787 0018 FFF7FEFF 		bl	moveCurrentPieceDown
 1788              	.LVL200:
 284:Core/Src/board.c ****         moveCurrentPieceDown(board);
 1789              		.loc 1 284 11 is_stmt 0 view .LVU372
 1790 001c 3446     		mov	r4, r6
 1791              	.LVL201:
 1792              	.L100:
 284:Core/Src/board.c ****         moveCurrentPieceDown(board);
 1793              		.loc 1 284 10 is_stmt 1 view .LVU373
 284:Core/Src/board.c ****         moveCurrentPieceDown(board);
 1794              		.loc 1 284 11 is_stmt 0 view .LVU374
 1795 001e 661C     		adds	r6, r4, #1
 1796              	.LVL202:
 284:Core/Src/board.c ****         moveCurrentPieceDown(board);
 1797              		.loc 1 284 11 view .LVU375
 1798 0020 3A46     		mov	r2, r7
 1799 0022 2146     		mov	r1, r4
 1800 0024 2846     		mov	r0, r5
 1801 0026 FFF7FEFF 		bl	isCurrentPieceMovable
 1802              	.LVL203:
 284:Core/Src/board.c ****         moveCurrentPieceDown(board);
 1803              		.loc 1 284 10 view .LVU376
 1804 002a 0028     		cmp	r0, #0
 1805 002c F3D1     		bne	.L101
 286:Core/Src/board.c **** }
 1806              		.loc 1 286 1 view .LVU377
 1807 002e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1808              		.loc 1 286 1 view .LVU378
 1809              		.cfi_endproc
 1810              	.LFE755:
 1812              		.section	.text.isCurrentPieceFallen,"ax",%progbits
 1813              		.align	1
 1814              		.global	isCurrentPieceFallen
 1815              		.syntax unified
 1816              		.thumb
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 39


 1817              		.thumb_func
 1818              		.fpu fpv4-sp-d16
 1820              	isCurrentPieceFallen:
 1821              	.LVL204:
 1822              	.LFB756:
 287:Core/Src/board.c ****  
 288:Core/Src/board.c **** bool isCurrentPieceFallen(Board * board)
 289:Core/Src/board.c **** {
 1823              		.loc 1 289 1 is_stmt 1 view -0
 1824              		.cfi_startproc
 1825              		@ args = 0, pretend = 0, frame = 0
 1826              		@ frame_needed = 0, uses_anonymous_args = 0
 1827              		.loc 1 289 1 is_stmt 0 view .LVU380
 1828 0000 38B5     		push	{r3, r4, r5, lr}
 1829              	.LCFI33:
 1830              		.cfi_def_cfa_offset 16
 1831              		.cfi_offset 3, -16
 1832              		.cfi_offset 4, -12
 1833              		.cfi_offset 5, -8
 1834              		.cfi_offset 14, -4
 1835 0002 0446     		mov	r4, r0
 290:Core/Src/board.c ****     int x = getPosX(board->currentPiece);
 1836              		.loc 1 290 5 is_stmt 1 view .LVU381
 1837              		.loc 1 290 13 is_stmt 0 view .LVU382
 1838 0004 0068     		ldr	r0, [r0]
 1839              	.LVL205:
 1840              		.loc 1 290 13 view .LVU383
 1841 0006 FFF7FEFF 		bl	getPosX
 1842              	.LVL206:
 1843 000a 0546     		mov	r5, r0
 1844              	.LVL207:
 291:Core/Src/board.c ****     int y = getPosY(board->currentPiece);
 1845              		.loc 1 291 5 is_stmt 1 view .LVU384
 1846              		.loc 1 291 13 is_stmt 0 view .LVU385
 1847 000c 2068     		ldr	r0, [r4]
 1848              	.LVL208:
 1849              		.loc 1 291 13 view .LVU386
 1850 000e FFF7FEFF 		bl	getPosY
 1851              	.LVL209:
 1852 0012 0246     		mov	r2, r0
 1853              	.LVL210:
 292:Core/Src/board.c ****  
 293:Core/Src/board.c ****     if(isCurrentPieceMovable(board, x + 1, y))
 1854              		.loc 1 293 5 is_stmt 1 view .LVU387
 1855              		.loc 1 293 8 is_stmt 0 view .LVU388
 1856 0014 691C     		adds	r1, r5, #1
 1857 0016 2046     		mov	r0, r4
 1858              	.LVL211:
 1859              		.loc 1 293 8 view .LVU389
 1860 0018 FFF7FEFF 		bl	isCurrentPieceMovable
 1861              	.LVL212:
 1862              		.loc 1 293 7 view .LVU390
 1863 001c 08B9     		cbnz	r0, .L105
 294:Core/Src/board.c ****         return false;
 295:Core/Src/board.c ****  
 296:Core/Src/board.c ****     return true;
 1864              		.loc 1 296 12 view .LVU391
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 40


 1865 001e 0120     		movs	r0, #1
 1866              	.L103:
 297:Core/Src/board.c **** }
 1867              		.loc 1 297 1 view .LVU392
 1868 0020 38BD     		pop	{r3, r4, r5, pc}
 1869              	.LVL213:
 1870              	.L105:
 294:Core/Src/board.c ****         return false;
 1871              		.loc 1 294 16 view .LVU393
 1872 0022 0020     		movs	r0, #0
 1873 0024 FCE7     		b	.L103
 1874              		.cfi_endproc
 1875              	.LFE756:
 1877              		.section	.text.isGameOver,"ax",%progbits
 1878              		.align	1
 1879              		.global	isGameOver
 1880              		.syntax unified
 1881              		.thumb
 1882              		.thumb_func
 1883              		.fpu fpv4-sp-d16
 1885              	isGameOver:
 1886              	.LVL214:
 1887              	.LFB757:
 298:Core/Src/board.c ****  
 299:Core/Src/board.c **** int isGameOver(Board * board)
 300:Core/Src/board.c **** {
 1888              		.loc 1 300 1 is_stmt 1 view -0
 1889              		.cfi_startproc
 1890              		@ args = 0, pretend = 0, frame = 0
 1891              		@ frame_needed = 0, uses_anonymous_args = 0
 1892              		@ link register save eliminated.
 301:Core/Src/board.c ****     for(int i = 0; i < BOARD_WIDTH; ++i)
 1893              		.loc 1 301 5 view .LVU395
 1894              	.LBB21:
 1895              		.loc 1 301 9 view .LVU396
 1896              		.loc 1 301 13 is_stmt 0 view .LVU397
 1897 0000 0023     		movs	r3, #0
 1898              	.LVL215:
 1899              	.L108:
 1900              		.loc 1 301 20 is_stmt 1 discriminator 1 view .LVU398
 1901              		.loc 1 301 5 is_stmt 0 discriminator 1 view .LVU399
 1902 0002 092B     		cmp	r3, #9
 1903 0004 07DC     		bgt	.L112
 302:Core/Src/board.c ****     {
 303:Core/Src/board.c ****         if(board->area[i][0] != FREE)
 1904              		.loc 1 303 9 is_stmt 1 view .LVU400
 1905              		.loc 1 303 26 is_stmt 0 view .LVU401
 1906 0006 03EB8302 		add	r2, r3, r3, lsl #2
 1907 000a 00EB0212 		add	r2, r0, r2, lsl #4
 1908 000e 5268     		ldr	r2, [r2, #4]
 1909              		.loc 1 303 11 view .LVU402
 1910 0010 1AB9     		cbnz	r2, .L111
 301:Core/Src/board.c ****     for(int i = 0; i < BOARD_WIDTH; ++i)
 1911              		.loc 1 301 37 is_stmt 1 discriminator 2 view .LVU403
 1912 0012 0133     		adds	r3, r3, #1
 1913              	.LVL216:
 301:Core/Src/board.c ****     for(int i = 0; i < BOARD_WIDTH; ++i)
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 41


 1914              		.loc 1 301 37 is_stmt 0 discriminator 2 view .LVU404
 1915 0014 F5E7     		b	.L108
 1916              	.L112:
 301:Core/Src/board.c ****     for(int i = 0; i < BOARD_WIDTH; ++i)
 1917              		.loc 1 301 37 discriminator 2 view .LVU405
 1918              	.LBE21:
 304:Core/Src/board.c ****             return 1;
 305:Core/Src/board.c ****     }
 306:Core/Src/board.c ****  
 307:Core/Src/board.c ****     return 0;
 1919              		.loc 1 307 12 view .LVU406
 1920 0016 0020     		movs	r0, #0
 1921              	.LVL217:
 1922              	.LBB22:
 1923              		.loc 1 307 12 view .LVU407
 1924 0018 7047     		bx	lr
 1925              	.LVL218:
 1926              	.L111:
 304:Core/Src/board.c ****             return 1;
 1927              		.loc 1 304 20 view .LVU408
 1928 001a 0120     		movs	r0, #1
 1929              	.LVL219:
 304:Core/Src/board.c ****             return 1;
 1930              		.loc 1 304 20 view .LVU409
 1931              	.LBE22:
 308:Core/Src/board.c **** }
 1932              		.loc 1 308 1 view .LVU410
 1933 001c 7047     		bx	lr
 1934              		.cfi_endproc
 1935              	.LFE757:
 1937              		.section	.text.print,"ax",%progbits
 1938              		.align	1
 1939              		.global	print
 1940              		.syntax unified
 1941              		.thumb
 1942              		.thumb_func
 1943              		.fpu fpv4-sp-d16
 1945              	print:
 1946              	.LVL220:
 1947              	.LFB758:
 309:Core/Src/board.c **** 
 310:Core/Src/board.c **** void print(Board * board)
 311:Core/Src/board.c **** {   
 1948              		.loc 1 311 1 is_stmt 1 view -0
 1949              		.cfi_startproc
 1950              		@ args = 0, pretend = 0, frame = 0
 1951              		@ frame_needed = 0, uses_anonymous_args = 0
 1952              		.loc 1 311 1 is_stmt 0 view .LVU412
 1953 0000 70B5     		push	{r4, r5, r6, lr}
 1954              	.LCFI34:
 1955              		.cfi_def_cfa_offset 16
 1956              		.cfi_offset 4, -16
 1957              		.cfi_offset 5, -12
 1958              		.cfi_offset 6, -8
 1959              		.cfi_offset 14, -4
 1960 0002 82B0     		sub	sp, sp, #8
 1961              	.LCFI35:
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 42


 1962              		.cfi_def_cfa_offset 24
 1963 0004 0646     		mov	r6, r0
 312:Core/Src/board.c ****     int tailleCase = 10;
 1964              		.loc 1 312 5 is_stmt 1 view .LVU413
 1965              	.LVL221:
 313:Core/Src/board.c ****     int decalageGauche = 20;
 1966              		.loc 1 313 5 view .LVU414
 314:Core/Src/board.c ****     fillScreen(BLACK);
 1967              		.loc 1 314 5 view .LVU415
 1968 0006 0020     		movs	r0, #0
 1969              	.LVL222:
 1970              		.loc 1 314 5 is_stmt 0 view .LVU416
 1971 0008 FFF7FEFF 		bl	fillScreen
 1972              	.LVL223:
 315:Core/Src/board.c ****     for(int j = 0; j < BOARD_HEIGHT; ++j)
 1973              		.loc 1 315 5 is_stmt 1 view .LVU417
 1974              	.LBB23:
 1975              		.loc 1 315 9 view .LVU418
 1976              		.loc 1 315 13 is_stmt 0 view .LVU419
 1977 000c 0025     		movs	r5, #0
 1978              		.loc 1 315 5 view .LVU420
 1979 000e 4AE0     		b	.L114
 1980              	.LVL224:
 1981              	.L124:
 1982              	.LBB24:
 316:Core/Src/board.c ****     {
 317:Core/Src/board.c ****         for(int i = 0; i < BOARD_WIDTH; ++i)
 318:Core/Src/board.c ****         {
 319:Core/Src/board.c ****             if( board->area[i][j] != FREE){
 1983              		.loc 1 319 15 view .LVU421
 1984 0010 40F2FF72 		movw	r2, #2047
 1985              	.L122:
 1986              	.LVL225:
 1987              	.LBB25:
 320:Core/Src/board.c ****                 uint16_t color;
 321:Core/Src/board.c ****                 switch(board->area[i][j]){
 322:Core/Src/board.c ****                     case CYA:
 323:Core/Src/board.c ****                         color = CYAN;
 324:Core/Src/board.c ****                         break;
 325:Core/Src/board.c ****                     case ORANG:
 326:Core/Src/board.c ****                         color = ORANGE;
 327:Core/Src/board.c ****                         break;
 328:Core/Src/board.c ****                     case RE:
 329:Core/Src/board.c ****                         color = RED;
 330:Core/Src/board.c ****                         break;
 331:Core/Src/board.c ****                     case PURPL:
 332:Core/Src/board.c ****                         color = PURPLE;
 333:Core/Src/board.c ****                         break;
 334:Core/Src/board.c ****                     case GREE:
 335:Core/Src/board.c ****                         color = GREEN;
 336:Core/Src/board.c ****                         break;
 337:Core/Src/board.c ****                     case YELLO:
 338:Core/Src/board.c ****                         color = YELLOW;
 339:Core/Src/board.c ****                         break;
 340:Core/Src/board.c ****                     case BLU:
 341:Core/Src/board.c ****                         color = BLUE;
 342:Core/Src/board.c ****                         break;
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 43


 343:Core/Src/board.c ****                     default:
 344:Core/Src/board.c ****                         color = WHITE;
 345:Core/Src/board.c ****                         break;
 346:Core/Src/board.c ****                 }
 347:Core/Src/board.c ****                 fillRect(TFTWIDTH-(j*tailleCase)-1, i*tailleCase + decalageGauche, tailleCase,taill
 1988              		.loc 1 347 17 is_stmt 1 view .LVU422
 1989              		.loc 1 347 34 is_stmt 0 view .LVU423
 1990 0014 274B     		ldr	r3, .L132
 1991 0016 1888     		ldrh	r0, [r3]
 1992 0018 80B2     		uxth	r0, r0
 1993 001a 05EB8503 		add	r3, r5, r5, lsl #2
 1994 001e A0EB4300 		sub	r0, r0, r3, lsl #1
 1995 0022 80B2     		uxth	r0, r0
 1996              		.loc 1 347 49 view .LVU424
 1997 0024 0138     		subs	r0, r0, #1
 1998              		.loc 1 347 66 view .LVU425
 1999 0026 04EB8401 		add	r1, r4, r4, lsl #2
 2000 002a 4900     		lsls	r1, r1, #1
 2001 002c 1431     		adds	r1, r1, #20
 2002              		.loc 1 347 17 view .LVU426
 2003 002e 0092     		str	r2, [sp]
 2004 0030 0A23     		movs	r3, #10
 2005 0032 1A46     		mov	r2, r3
 2006              	.LVL226:
 2007              		.loc 1 347 17 view .LVU427
 2008 0034 09B2     		sxth	r1, r1
 2009 0036 00B2     		sxth	r0, r0
 2010 0038 FFF7FEFF 		bl	fillRect
 2011              	.LVL227:
 2012              	.L115:
 2013              		.loc 1 347 17 view .LVU428
 2014              	.LBE25:
 317:Core/Src/board.c ****         {
 2015              		.loc 1 317 41 is_stmt 1 discriminator 2 view .LVU429
 2016 003c 0134     		adds	r4, r4, #1
 2017              	.LVL228:
 2018              	.L126:
 317:Core/Src/board.c ****         {
 2019              		.loc 1 317 24 discriminator 1 view .LVU430
 317:Core/Src/board.c ****         {
 2020              		.loc 1 317 9 is_stmt 0 discriminator 1 view .LVU431
 2021 003e 092C     		cmp	r4, #9
 2022 0040 30DC     		bgt	.L130
 319:Core/Src/board.c ****                 uint16_t color;
 2023              		.loc 1 319 13 is_stmt 1 view .LVU432
 319:Core/Src/board.c ****                 uint16_t color;
 2024              		.loc 1 319 31 is_stmt 0 view .LVU433
 2025 0042 04EB8403 		add	r3, r4, r4, lsl #2
 2026 0046 05EB8303 		add	r3, r5, r3, lsl #2
 2027 004a 06EB8303 		add	r3, r6, r3, lsl #2
 2028 004e 5B68     		ldr	r3, [r3, #4]
 319:Core/Src/board.c ****                 uint16_t color;
 2029              		.loc 1 319 15 view .LVU434
 2030 0050 002B     		cmp	r3, #0
 2031 0052 F3D0     		beq	.L115
 2032              	.LBB26:
 320:Core/Src/board.c ****                 uint16_t color;
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 44


 2033              		.loc 1 320 17 is_stmt 1 view .LVU435
 321:Core/Src/board.c ****                     case CYA:
 2034              		.loc 1 321 17 view .LVU436
 2035 0054 013B     		subs	r3, r3, #1
 2036 0056 062B     		cmp	r3, #6
 2037 0058 1ED8     		bhi	.L116
 2038 005a 01A2     		adr	r2, .L118
 2039 005c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2040              		.p2align 2
 2041              	.L118:
 2042 0060 11000000 		.word	.L124+1
 2043 0064 95000000 		.word	.L123+1
 2044 0068 9F000000 		.word	.L127+1
 2045 006c 8F000000 		.word	.L121+1
 2046 0070 89000000 		.word	.L120+1
 2047 0074 83000000 		.word	.L119+1
 2048 0078 7D000000 		.word	.L117+1
 2049              		.p2align 1
 2050              	.L117:
 329:Core/Src/board.c ****                         break;
 2051              		.loc 1 329 25 view .LVU437
 2052              	.LVL229:
 330:Core/Src/board.c ****                     case PURPL:
 2053              		.loc 1 330 25 view .LVU438
 329:Core/Src/board.c ****                         break;
 2054              		.loc 1 329 31 is_stmt 0 view .LVU439
 2055 007c 4FF47842 		mov	r2, #63488
 330:Core/Src/board.c ****                     case PURPL:
 2056              		.loc 1 330 25 view .LVU440
 2057 0080 C8E7     		b	.L122
 2058              	.LVL230:
 2059              	.L119:
 332:Core/Src/board.c ****                         break;
 2060              		.loc 1 332 25 is_stmt 1 view .LVU441
 333:Core/Src/board.c ****                     case GREE:
 2061              		.loc 1 333 25 view .LVU442
 332:Core/Src/board.c ****                         break;
 2062              		.loc 1 332 31 is_stmt 0 view .LVU443
 2063 0082 47F60F02 		movw	r2, #30735
 333:Core/Src/board.c ****                     case GREE:
 2064              		.loc 1 333 25 view .LVU444
 2065 0086 C5E7     		b	.L122
 2066              	.LVL231:
 2067              	.L120:
 335:Core/Src/board.c ****                         break;
 2068              		.loc 1 335 25 is_stmt 1 view .LVU445
 336:Core/Src/board.c ****                     case YELLO:
 2069              		.loc 1 336 25 view .LVU446
 335:Core/Src/board.c ****                         break;
 2070              		.loc 1 335 31 is_stmt 0 view .LVU447
 2071 0088 4FF4FC62 		mov	r2, #2016
 336:Core/Src/board.c ****                     case YELLO:
 2072              		.loc 1 336 25 view .LVU448
 2073 008c C2E7     		b	.L122
 2074              	.LVL232:
 2075              	.L121:
 338:Core/Src/board.c ****                         break;
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 45


 2076              		.loc 1 338 25 is_stmt 1 view .LVU449
 339:Core/Src/board.c ****                     case BLU:
 2077              		.loc 1 339 25 view .LVU450
 338:Core/Src/board.c ****                         break;
 2078              		.loc 1 338 31 is_stmt 0 view .LVU451
 2079 008e 4FF6E072 		movw	r2, #65504
 339:Core/Src/board.c ****                     case BLU:
 2080              		.loc 1 339 25 view .LVU452
 2081 0092 BFE7     		b	.L122
 2082              	.LVL233:
 2083              	.L123:
 341:Core/Src/board.c ****                         break;
 2084              		.loc 1 341 25 is_stmt 1 view .LVU453
 342:Core/Src/board.c ****                     default:
 2085              		.loc 1 342 25 view .LVU454
 341:Core/Src/board.c ****                         break;
 2086              		.loc 1 341 31 is_stmt 0 view .LVU455
 2087 0094 1F22     		movs	r2, #31
 342:Core/Src/board.c ****                     default:
 2088              		.loc 1 342 25 view .LVU456
 2089 0096 BDE7     		b	.L122
 2090              	.LVL234:
 2091              	.L116:
 344:Core/Src/board.c ****                         break;
 2092              		.loc 1 344 25 is_stmt 1 view .LVU457
 345:Core/Src/board.c ****                 }
 2093              		.loc 1 345 25 view .LVU458
 344:Core/Src/board.c ****                         break;
 2094              		.loc 1 344 31 is_stmt 0 view .LVU459
 2095 0098 4FF6FF72 		movw	r2, #65535
 345:Core/Src/board.c ****                 }
 2096              		.loc 1 345 25 view .LVU460
 2097 009c BAE7     		b	.L122
 2098              	.LVL235:
 2099              	.L127:
 326:Core/Src/board.c ****                         break;
 2100              		.loc 1 326 31 view .LVU461
 2101 009e 4FF62052 		movw	r2, #64800
 2102 00a2 B7E7     		b	.L122
 2103              	.L130:
 326:Core/Src/board.c ****                         break;
 2104              		.loc 1 326 31 view .LVU462
 2105              	.LBE26:
 2106              	.LBE24:
 315:Core/Src/board.c ****     {
 2107              		.loc 1 315 38 is_stmt 1 discriminator 2 view .LVU463
 2108 00a4 0135     		adds	r5, r5, #1
 2109              	.LVL236:
 2110              	.L114:
 315:Core/Src/board.c ****     {
 2111              		.loc 1 315 20 discriminator 1 view .LVU464
 315:Core/Src/board.c ****     {
 2112              		.loc 1 315 5 is_stmt 0 discriminator 1 view .LVU465
 2113 00a6 132D     		cmp	r5, #19
 2114 00a8 01DC     		bgt	.L131
 2115              	.LBB27:
 317:Core/Src/board.c ****         {
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 46


 2116              		.loc 1 317 17 view .LVU466
 2117 00aa 0024     		movs	r4, #0
 2118 00ac C7E7     		b	.L126
 2119              	.L131:
 2120              	.LBE27:
 2121              	.LBE23:
 348:Core/Src/board.c ****             }
 349:Core/Src/board.c ****         } 
 350:Core/Src/board.c ****     }
 351:Core/Src/board.c **** }
 2122              		.loc 1 351 1 view .LVU467
 2123 00ae 02B0     		add	sp, sp, #8
 2124              	.LCFI36:
 2125              		.cfi_def_cfa_offset 16
 2126              		@ sp needed
 2127 00b0 70BD     		pop	{r4, r5, r6, pc}
 2128              	.LVL237:
 2129              	.L133:
 2130              		.loc 1 351 1 view .LVU468
 2131 00b2 00BF     		.align	2
 2132              	.L132:
 2133 00b4 00000000 		.word	TFTWIDTH
 2134              		.cfi_endproc
 2135              	.LFE758:
 2137              		.section	.text.clear,"ax",%progbits
 2138              		.align	1
 2139              		.global	clear
 2140              		.syntax unified
 2141              		.thumb
 2142              		.thumb_func
 2143              		.fpu fpv4-sp-d16
 2145              	clear:
 2146              	.LVL238:
 2147              	.LFB759:
 352:Core/Src/board.c **** 
 353:Core/Src/board.c **** 
 354:Core/Src/board.c **** 
 355:Core/Src/board.c **** void clear(Board * board)
 356:Core/Src/board.c **** {
 2148              		.loc 1 356 1 is_stmt 1 view -0
 2149              		.cfi_startproc
 2150              		@ args = 0, pretend = 0, frame = 0
 2151              		@ frame_needed = 0, uses_anonymous_args = 0
 2152              		@ link register save eliminated.
 2153              		.loc 1 356 1 is_stmt 0 view .LVU470
 2154 0000 8446     		mov	ip, r0
 357:Core/Src/board.c ****     for(int i = 0; i < BOARD_WIDTH; ++i)
 2155              		.loc 1 357 5 is_stmt 1 view .LVU471
 2156              	.LBB28:
 2157              		.loc 1 357 9 view .LVU472
 2158              	.LVL239:
 2159              		.loc 1 357 13 is_stmt 0 view .LVU473
 2160 0002 0021     		movs	r1, #0
 2161              		.loc 1 357 5 view .LVU474
 2162 0004 0BE0     		b	.L135
 2163              	.LVL240:
 2164              	.L136:
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 47


 2165              	.LBB29:
 358:Core/Src/board.c ****     {
 359:Core/Src/board.c ****         for(int j = 0; j < BOARD_HEIGHT; ++j)
 360:Core/Src/board.c ****             board->area[i][j] = FREE;
 2166              		.loc 1 360 13 is_stmt 1 discriminator 3 view .LVU475
 2167              		.loc 1 360 31 is_stmt 0 discriminator 3 view .LVU476
 2168 0006 01EB8103 		add	r3, r1, r1, lsl #2
 2169 000a 02EB8303 		add	r3, r2, r3, lsl #2
 2170 000e 0CEB8303 		add	r3, ip, r3, lsl #2
 2171 0012 0020     		movs	r0, #0
 2172 0014 5860     		str	r0, [r3, #4]
 359:Core/Src/board.c ****             board->area[i][j] = FREE;
 2173              		.loc 1 359 42 is_stmt 1 discriminator 3 view .LVU477
 2174 0016 0132     		adds	r2, r2, #1
 2175              	.LVL241:
 2176              	.L137:
 359:Core/Src/board.c ****             board->area[i][j] = FREE;
 2177              		.loc 1 359 24 discriminator 1 view .LVU478
 359:Core/Src/board.c ****             board->area[i][j] = FREE;
 2178              		.loc 1 359 9 is_stmt 0 discriminator 1 view .LVU479
 2179 0018 132A     		cmp	r2, #19
 2180 001a F4DD     		ble	.L136
 2181              	.LBE29:
 357:Core/Src/board.c ****     for(int i = 0; i < BOARD_WIDTH; ++i)
 2182              		.loc 1 357 37 is_stmt 1 discriminator 2 view .LVU480
 2183 001c 0131     		adds	r1, r1, #1
 2184              	.LVL242:
 2185              	.L135:
 357:Core/Src/board.c ****     for(int i = 0; i < BOARD_WIDTH; ++i)
 2186              		.loc 1 357 20 discriminator 1 view .LVU481
 357:Core/Src/board.c ****     for(int i = 0; i < BOARD_WIDTH; ++i)
 2187              		.loc 1 357 5 is_stmt 0 discriminator 1 view .LVU482
 2188 001e 0929     		cmp	r1, #9
 2189 0020 01DC     		bgt	.L139
 2190              	.LBB30:
 359:Core/Src/board.c ****             board->area[i][j] = FREE;
 2191              		.loc 1 359 17 view .LVU483
 2192 0022 0022     		movs	r2, #0
 2193 0024 F8E7     		b	.L137
 2194              	.L139:
 2195              	.LBE30:
 2196              	.LBE28:
 361:Core/Src/board.c ****     }
 362:Core/Src/board.c **** }...
 2197              		.loc 1 362 1 view .LVU484
 2198 0026 7047     		bx	lr
 2199              		.cfi_endproc
 2200              	.LFE759:
 2202              		.section	.rodata.PIECES,"a"
 2203              		.align	2
 2204              		.set	.LANCHOR0,. + 0
 2207              	PIECES:
 2208 0000 00000000 		.word	0
 2209 0004 00000000 		.word	0
 2210 0008 00000000 		.word	0
 2211 000c 00000000 		.word	0
 2212 0010 00000000 		.word	0
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 48


 2213 0014 01000000 		.word	1
 2214 0018 02000000 		.word	2
 2215 001c 00000000 		.word	0
 2216 0020 00000000 		.word	0
 2217 0024 01000000 		.word	1
 2218 0028 01000000 		.word	1
 2219 002c 00000000 		.word	0
 2220 0030 00000000 		.word	0
 2221 0034 00000000 		.word	0
 2222 0038 00000000 		.word	0
 2223 003c 00000000 		.word	0
 2224 0040 00000000 		.word	0
 2225 0044 00000000 		.word	0
 2226 0048 00000000 		.word	0
 2227 004c 00000000 		.word	0
 2228 0050 00000000 		.word	0
 2229 0054 01000000 		.word	1
 2230 0058 02000000 		.word	2
 2231 005c 00000000 		.word	0
 2232 0060 00000000 		.word	0
 2233 0064 01000000 		.word	1
 2234 0068 01000000 		.word	1
 2235 006c 00000000 		.word	0
 2236 0070 00000000 		.word	0
 2237 0074 00000000 		.word	0
 2238 0078 00000000 		.word	0
 2239 007c 00000000 		.word	0
 2240 0080 00000000 		.word	0
 2241 0084 00000000 		.word	0
 2242 0088 00000000 		.word	0
 2243 008c 00000000 		.word	0
 2244 0090 00000000 		.word	0
 2245 0094 01000000 		.word	1
 2246 0098 02000000 		.word	2
 2247 009c 00000000 		.word	0
 2248 00a0 00000000 		.word	0
 2249 00a4 01000000 		.word	1
 2250 00a8 01000000 		.word	1
 2251 00ac 00000000 		.word	0
 2252 00b0 00000000 		.word	0
 2253 00b4 00000000 		.word	0
 2254 00b8 00000000 		.word	0
 2255 00bc 00000000 		.word	0
 2256 00c0 00000000 		.word	0
 2257 00c4 00000000 		.word	0
 2258 00c8 00000000 		.word	0
 2259 00cc 00000000 		.word	0
 2260 00d0 00000000 		.word	0
 2261 00d4 01000000 		.word	1
 2262 00d8 02000000 		.word	2
 2263 00dc 00000000 		.word	0
 2264 00e0 00000000 		.word	0
 2265 00e4 01000000 		.word	1
 2266 00e8 01000000 		.word	1
 2267 00ec 00000000 		.word	0
 2268 00f0 00000000 		.word	0
 2269 00f4 00000000 		.word	0
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 49


 2270 00f8 00000000 		.word	0
 2271 00fc 00000000 		.word	0
 2272 0100 00000000 		.word	0
 2273 0104 00000000 		.word	0
 2274 0108 00000000 		.word	0
 2275 010c 00000000 		.word	0
 2276 0110 01000000 		.word	1
 2277 0114 01000000 		.word	1
 2278 0118 02000000 		.word	2
 2279 011c 01000000 		.word	1
 2280 0120 00000000 		.word	0
 2281 0124 00000000 		.word	0
 2282 0128 00000000 		.word	0
 2283 012c 00000000 		.word	0
 2284 0130 00000000 		.word	0
 2285 0134 00000000 		.word	0
 2286 0138 00000000 		.word	0
 2287 013c 00000000 		.word	0
 2288 0140 00000000 		.word	0
 2289 0144 00000000 		.word	0
 2290 0148 01000000 		.word	1
 2291 014c 00000000 		.word	0
 2292 0150 00000000 		.word	0
 2293 0154 00000000 		.word	0
 2294 0158 02000000 		.word	2
 2295 015c 00000000 		.word	0
 2296 0160 00000000 		.word	0
 2297 0164 00000000 		.word	0
 2298 0168 01000000 		.word	1
 2299 016c 00000000 		.word	0
 2300 0170 00000000 		.word	0
 2301 0174 00000000 		.word	0
 2302 0178 01000000 		.word	1
 2303 017c 00000000 		.word	0
 2304 0180 00000000 		.word	0
 2305 0184 00000000 		.word	0
 2306 0188 00000000 		.word	0
 2307 018c 00000000 		.word	0
 2308 0190 01000000 		.word	1
 2309 0194 01000000 		.word	1
 2310 0198 02000000 		.word	2
 2311 019c 01000000 		.word	1
 2312 01a0 00000000 		.word	0
 2313 01a4 00000000 		.word	0
 2314 01a8 00000000 		.word	0
 2315 01ac 00000000 		.word	0
 2316 01b0 00000000 		.word	0
 2317 01b4 00000000 		.word	0
 2318 01b8 00000000 		.word	0
 2319 01bc 00000000 		.word	0
 2320 01c0 00000000 		.word	0
 2321 01c4 00000000 		.word	0
 2322 01c8 01000000 		.word	1
 2323 01cc 00000000 		.word	0
 2324 01d0 00000000 		.word	0
 2325 01d4 00000000 		.word	0
 2326 01d8 02000000 		.word	2
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 50


 2327 01dc 00000000 		.word	0
 2328 01e0 00000000 		.word	0
 2329 01e4 00000000 		.word	0
 2330 01e8 01000000 		.word	1
 2331 01ec 00000000 		.word	0
 2332 01f0 00000000 		.word	0
 2333 01f4 00000000 		.word	0
 2334 01f8 01000000 		.word	1
 2335 01fc 00000000 		.word	0
 2336 0200 00000000 		.word	0
 2337 0204 00000000 		.word	0
 2338 0208 00000000 		.word	0
 2339 020c 00000000 		.word	0
 2340 0210 00000000 		.word	0
 2341 0214 00000000 		.word	0
 2342 0218 02000000 		.word	2
 2343 021c 01000000 		.word	1
 2344 0220 00000000 		.word	0
 2345 0224 01000000 		.word	1
 2346 0228 01000000 		.word	1
 2347 022c 00000000 		.word	0
 2348 0230 00000000 		.word	0
 2349 0234 00000000 		.word	0
 2350 0238 00000000 		.word	0
 2351 023c 00000000 		.word	0
 2352 0240 00000000 		.word	0
 2353 0244 00000000 		.word	0
 2354 0248 01000000 		.word	1
 2355 024c 00000000 		.word	0
 2356 0250 00000000 		.word	0
 2357 0254 00000000 		.word	0
 2358 0258 02000000 		.word	2
 2359 025c 01000000 		.word	1
 2360 0260 00000000 		.word	0
 2361 0264 00000000 		.word	0
 2362 0268 00000000 		.word	0
 2363 026c 01000000 		.word	1
 2364 0270 00000000 		.word	0
 2365 0274 00000000 		.word	0
 2366 0278 00000000 		.word	0
 2367 027c 00000000 		.word	0
 2368 0280 00000000 		.word	0
 2369 0284 00000000 		.word	0
 2370 0288 00000000 		.word	0
 2371 028c 00000000 		.word	0
 2372 0290 00000000 		.word	0
 2373 0294 00000000 		.word	0
 2374 0298 02000000 		.word	2
 2375 029c 01000000 		.word	1
 2376 02a0 00000000 		.word	0
 2377 02a4 01000000 		.word	1
 2378 02a8 01000000 		.word	1
 2379 02ac 00000000 		.word	0
 2380 02b0 00000000 		.word	0
 2381 02b4 00000000 		.word	0
 2382 02b8 00000000 		.word	0
 2383 02bc 00000000 		.word	0
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 51


 2384 02c0 00000000 		.word	0
 2385 02c4 00000000 		.word	0
 2386 02c8 01000000 		.word	1
 2387 02cc 00000000 		.word	0
 2388 02d0 00000000 		.word	0
 2389 02d4 00000000 		.word	0
 2390 02d8 02000000 		.word	2
 2391 02dc 01000000 		.word	1
 2392 02e0 00000000 		.word	0
 2393 02e4 00000000 		.word	0
 2394 02e8 00000000 		.word	0
 2395 02ec 01000000 		.word	1
 2396 02f0 00000000 		.word	0
 2397 02f4 00000000 		.word	0
 2398 02f8 00000000 		.word	0
 2399 02fc 00000000 		.word	0
 2400 0300 00000000 		.word	0
 2401 0304 00000000 		.word	0
 2402 0308 00000000 		.word	0
 2403 030c 00000000 		.word	0
 2404 0310 00000000 		.word	0
 2405 0314 01000000 		.word	1
 2406 0318 02000000 		.word	2
 2407 031c 00000000 		.word	0
 2408 0320 00000000 		.word	0
 2409 0324 00000000 		.word	0
 2410 0328 01000000 		.word	1
 2411 032c 01000000 		.word	1
 2412 0330 00000000 		.word	0
 2413 0334 00000000 		.word	0
 2414 0338 00000000 		.word	0
 2415 033c 00000000 		.word	0
 2416 0340 00000000 		.word	0
 2417 0344 00000000 		.word	0
 2418 0348 00000000 		.word	0
 2419 034c 01000000 		.word	1
 2420 0350 00000000 		.word	0
 2421 0354 00000000 		.word	0
 2422 0358 02000000 		.word	2
 2423 035c 01000000 		.word	1
 2424 0360 00000000 		.word	0
 2425 0364 00000000 		.word	0
 2426 0368 01000000 		.word	1
 2427 036c 00000000 		.word	0
 2428 0370 00000000 		.word	0
 2429 0374 00000000 		.word	0
 2430 0378 00000000 		.word	0
 2431 037c 00000000 		.word	0
 2432 0380 00000000 		.word	0
 2433 0384 00000000 		.word	0
 2434 0388 00000000 		.word	0
 2435 038c 00000000 		.word	0
 2436 0390 00000000 		.word	0
 2437 0394 01000000 		.word	1
 2438 0398 02000000 		.word	2
 2439 039c 00000000 		.word	0
 2440 03a0 00000000 		.word	0
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 52


 2441 03a4 00000000 		.word	0
 2442 03a8 01000000 		.word	1
 2443 03ac 01000000 		.word	1
 2444 03b0 00000000 		.word	0
 2445 03b4 00000000 		.word	0
 2446 03b8 00000000 		.word	0
 2447 03bc 00000000 		.word	0
 2448 03c0 00000000 		.word	0
 2449 03c4 00000000 		.word	0
 2450 03c8 00000000 		.word	0
 2451 03cc 01000000 		.word	1
 2452 03d0 00000000 		.word	0
 2453 03d4 00000000 		.word	0
 2454 03d8 02000000 		.word	2
 2455 03dc 01000000 		.word	1
 2456 03e0 00000000 		.word	0
 2457 03e4 00000000 		.word	0
 2458 03e8 01000000 		.word	1
 2459 03ec 00000000 		.word	0
 2460 03f0 00000000 		.word	0
 2461 03f4 00000000 		.word	0
 2462 03f8 00000000 		.word	0
 2463 03fc 00000000 		.word	0
 2464 0400 00000000 		.word	0
 2465 0404 00000000 		.word	0
 2466 0408 00000000 		.word	0
 2467 040c 00000000 		.word	0
 2468 0410 00000000 		.word	0
 2469 0414 01000000 		.word	1
 2470 0418 02000000 		.word	2
 2471 041c 01000000 		.word	1
 2472 0420 00000000 		.word	0
 2473 0424 01000000 		.word	1
 2474 0428 00000000 		.word	0
 2475 042c 00000000 		.word	0
 2476 0430 00000000 		.word	0
 2477 0434 00000000 		.word	0
 2478 0438 00000000 		.word	0
 2479 043c 00000000 		.word	0
 2480 0440 00000000 		.word	0
 2481 0444 00000000 		.word	0
 2482 0448 01000000 		.word	1
 2483 044c 00000000 		.word	0
 2484 0450 00000000 		.word	0
 2485 0454 00000000 		.word	0
 2486 0458 02000000 		.word	2
 2487 045c 00000000 		.word	0
 2488 0460 00000000 		.word	0
 2489 0464 00000000 		.word	0
 2490 0468 01000000 		.word	1
 2491 046c 01000000 		.word	1
 2492 0470 00000000 		.word	0
 2493 0474 00000000 		.word	0
 2494 0478 00000000 		.word	0
 2495 047c 00000000 		.word	0
 2496 0480 00000000 		.word	0
 2497 0484 00000000 		.word	0
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 53


 2498 0488 00000000 		.word	0
 2499 048c 01000000 		.word	1
 2500 0490 00000000 		.word	0
 2501 0494 01000000 		.word	1
 2502 0498 02000000 		.word	2
 2503 049c 01000000 		.word	1
 2504 04a0 00000000 		.word	0
 2505 04a4 00000000 		.word	0
 2506 04a8 00000000 		.word	0
 2507 04ac 00000000 		.word	0
 2508 04b0 00000000 		.word	0
 2509 04b4 00000000 		.word	0
 2510 04b8 00000000 		.word	0
 2511 04bc 00000000 		.word	0
 2512 04c0 00000000 		.word	0
 2513 04c4 01000000 		.word	1
 2514 04c8 01000000 		.word	1
 2515 04cc 00000000 		.word	0
 2516 04d0 00000000 		.word	0
 2517 04d4 00000000 		.word	0
 2518 04d8 02000000 		.word	2
 2519 04dc 00000000 		.word	0
 2520 04e0 00000000 		.word	0
 2521 04e4 00000000 		.word	0
 2522 04e8 01000000 		.word	1
 2523 04ec 00000000 		.word	0
 2524 04f0 00000000 		.word	0
 2525 04f4 00000000 		.word	0
 2526 04f8 00000000 		.word	0
 2527 04fc 00000000 		.word	0
 2528 0500 00000000 		.word	0
 2529 0504 00000000 		.word	0
 2530 0508 00000000 		.word	0
 2531 050c 00000000 		.word	0
 2532 0510 00000000 		.word	0
 2533 0514 01000000 		.word	1
 2534 0518 02000000 		.word	2
 2535 051c 01000000 		.word	1
 2536 0520 00000000 		.word	0
 2537 0524 00000000 		.word	0
 2538 0528 00000000 		.word	0
 2539 052c 01000000 		.word	1
 2540 0530 00000000 		.word	0
 2541 0534 00000000 		.word	0
 2542 0538 00000000 		.word	0
 2543 053c 00000000 		.word	0
 2544 0540 00000000 		.word	0
 2545 0544 00000000 		.word	0
 2546 0548 01000000 		.word	1
 2547 054c 01000000 		.word	1
 2548 0550 00000000 		.word	0
 2549 0554 00000000 		.word	0
 2550 0558 02000000 		.word	2
 2551 055c 00000000 		.word	0
 2552 0560 00000000 		.word	0
 2553 0564 00000000 		.word	0
 2554 0568 01000000 		.word	1
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 54


 2555 056c 00000000 		.word	0
 2556 0570 00000000 		.word	0
 2557 0574 00000000 		.word	0
 2558 0578 00000000 		.word	0
 2559 057c 00000000 		.word	0
 2560 0580 00000000 		.word	0
 2561 0584 01000000 		.word	1
 2562 0588 00000000 		.word	0
 2563 058c 00000000 		.word	0
 2564 0590 00000000 		.word	0
 2565 0594 01000000 		.word	1
 2566 0598 02000000 		.word	2
 2567 059c 01000000 		.word	1
 2568 05a0 00000000 		.word	0
 2569 05a4 00000000 		.word	0
 2570 05a8 00000000 		.word	0
 2571 05ac 00000000 		.word	0
 2572 05b0 00000000 		.word	0
 2573 05b4 00000000 		.word	0
 2574 05b8 00000000 		.word	0
 2575 05bc 00000000 		.word	0
 2576 05c0 00000000 		.word	0
 2577 05c4 00000000 		.word	0
 2578 05c8 01000000 		.word	1
 2579 05cc 00000000 		.word	0
 2580 05d0 00000000 		.word	0
 2581 05d4 00000000 		.word	0
 2582 05d8 02000000 		.word	2
 2583 05dc 00000000 		.word	0
 2584 05e0 00000000 		.word	0
 2585 05e4 01000000 		.word	1
 2586 05e8 01000000 		.word	1
 2587 05ec 00000000 		.word	0
 2588 05f0 00000000 		.word	0
 2589 05f4 00000000 		.word	0
 2590 05f8 00000000 		.word	0
 2591 05fc 00000000 		.word	0
 2592 0600 00000000 		.word	0
 2593 0604 00000000 		.word	0
 2594 0608 00000000 		.word	0
 2595 060c 00000000 		.word	0
 2596 0610 00000000 		.word	0
 2597 0614 01000000 		.word	1
 2598 0618 02000000 		.word	2
 2599 061c 01000000 		.word	1
 2600 0620 00000000 		.word	0
 2601 0624 00000000 		.word	0
 2602 0628 01000000 		.word	1
 2603 062c 00000000 		.word	0
 2604 0630 00000000 		.word	0
 2605 0634 00000000 		.word	0
 2606 0638 00000000 		.word	0
 2607 063c 00000000 		.word	0
 2608 0640 00000000 		.word	0
 2609 0644 00000000 		.word	0
 2610 0648 01000000 		.word	1
 2611 064c 00000000 		.word	0
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 55


 2612 0650 00000000 		.word	0
 2613 0654 00000000 		.word	0
 2614 0658 02000000 		.word	2
 2615 065c 01000000 		.word	1
 2616 0660 00000000 		.word	0
 2617 0664 00000000 		.word	0
 2618 0668 01000000 		.word	1
 2619 066c 00000000 		.word	0
 2620 0670 00000000 		.word	0
 2621 0674 00000000 		.word	0
 2622 0678 00000000 		.word	0
 2623 067c 00000000 		.word	0
 2624 0680 00000000 		.word	0
 2625 0684 00000000 		.word	0
 2626 0688 01000000 		.word	1
 2627 068c 00000000 		.word	0
 2628 0690 00000000 		.word	0
 2629 0694 01000000 		.word	1
 2630 0698 02000000 		.word	2
 2631 069c 01000000 		.word	1
 2632 06a0 00000000 		.word	0
 2633 06a4 00000000 		.word	0
 2634 06a8 00000000 		.word	0
 2635 06ac 00000000 		.word	0
 2636 06b0 00000000 		.word	0
 2637 06b4 00000000 		.word	0
 2638 06b8 00000000 		.word	0
 2639 06bc 00000000 		.word	0
 2640 06c0 00000000 		.word	0
 2641 06c4 00000000 		.word	0
 2642 06c8 01000000 		.word	1
 2643 06cc 00000000 		.word	0
 2644 06d0 00000000 		.word	0
 2645 06d4 01000000 		.word	1
 2646 06d8 02000000 		.word	2
 2647 06dc 00000000 		.word	0
 2648 06e0 00000000 		.word	0
 2649 06e4 00000000 		.word	0
 2650 06e8 01000000 		.word	1
 2651 06ec 00000000 		.word	0
 2652 06f0 00000000 		.word	0
 2653 06f4 00000000 		.word	0
 2654 06f8 00000000 		.word	0
 2655 06fc 00000000 		.word	0
 2656              		.text
 2657              	.Letext0:
 2658              		.file 2 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-m
 2659              		.file 3 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-m
 2660              		.file 4 "Core/Src/../Inc/piece.h"
 2661              		.file 5 "Core/Src/../Inc/board.h"
 2662              		.file 6 "Core/Src/../Inc/shapes.h"
 2663              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_dma.h"
 2664              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h"
 2665              		.file 9 "Core/Src/../Inc/../Inc/../Inc/5x5_font.h"
 2666              		.file 10 "Core/Src/../Inc/../Inc/ILI9341_Driver.h"
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 56


DEFINED SYMBOLS
                            *ABS*:00000000 board.c
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:18     .text.flood:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:26     .text.flood:00000000 flood
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:176    .text.flood:000000d8 $d
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:181    .text.floodB:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:188    .text.floodB:00000000 floodB
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:355    .text.floodB:000000ec $d
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:360    .text.floodFill:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:367    .text.floodFill:00000000 floodFill
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:451    .text.initBoard:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:458    .text.initBoard:00000000 initBoard
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:516    .text.drawPiece:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:523    .text.drawPiece:00000000 drawPiece
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:588    .text.drawPiece:00000032 $d
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:700    .text.clearPiece:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:707    .text.clearPiece:00000000 clearPiece
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:790    .text.setCurrentPiece:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:797    .text.setCurrentPiece:00000000 setCurrentPiece
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:814    .text.newPiece:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:821    .text.newPiece:00000000 newPiece
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:869    .text.getCurrentPiece:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:876    .text.getCurrentPiece:00000000 getCurrentPiece
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:894    .text.isCurrentPieceMovable:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:901    .text.isCurrentPieceMovable:00000000 isCurrentPieceMovable
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:1026   .text.isCurrentPieceRotable:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:1033   .text.isCurrentPieceRotable:00000000 isCurrentPieceRotable
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:1157   .text.moveCurrentPieceDown:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:1164   .text.moveCurrentPieceDown:00000000 moveCurrentPieceDown
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:1237   .text.moveCurrentPieceLeft:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:1244   .text.moveCurrentPieceLeft:00000000 moveCurrentPieceLeft
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:1314   .text.moveCurrentPieceRight:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:1321   .text.moveCurrentPieceRight:00000000 moveCurrentPieceRight
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:1391   .text.rotateCurrentPieceLeft:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:1398   .text.rotateCurrentPieceLeft:00000000 rotateCurrentPieceLeft
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:1469   .text.rotateCurrentPieceRight:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:1476   .text.rotateCurrentPieceRight:00000000 rotateCurrentPieceRight
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:1547   .text.deleteLine:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:1554   .text.deleteLine:00000000 deleteLine
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:1634   .text.deletePossibleLines:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:1641   .text.deletePossibleLines:00000000 deletePossibleLines
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:1737   .text.dropCurrentPiece:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:1744   .text.dropCurrentPiece:00000000 dropCurrentPiece
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:1813   .text.isCurrentPieceFallen:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:1820   .text.isCurrentPieceFallen:00000000 isCurrentPieceFallen
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:1878   .text.isGameOver:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:1885   .text.isGameOver:00000000 isGameOver
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:1938   .text.print:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:1945   .text.print:00000000 print
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:2042   .text.print:00000060 $d
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:2049   .text.print:0000007c $t
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:2133   .text.print:000000b4 $d
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:2138   .text.clear:00000000 $t
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:2145   .text.clear:00000000 clear
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:2203   .rodata.PIECES:00000000 $d
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:2207   .rodata.PIECES:00000000 PIECES
C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:595    .text.drawPiece:00000039 $d
ARM GAS  C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s 			page 57


C:\Users\Paul\AppData\Local\Temp\ccuW7BtM.s:595    .text.drawPiece:0000003a $t

UNDEFINED SYMBOLS
getPosX
getPosY
getKind
getOrientation
setColor
getColor
setPosX
setPosY
setOrientation
fillScreen
fillRect
TFTWIDTH
